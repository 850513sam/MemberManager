{"version":3,"sources":["../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/AnimatedPage.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/Animation.extension.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/Config/app.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/AppConfigLoader.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Application.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/AssetCache.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/assetPath.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Config/audio.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/AudioManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/AvatarLoader.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/Bet.dto.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Bet/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Bet/BetStatus.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/BindRotation.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/ButtonSoundEffect.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/CompositeLoadingTask.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/Connection.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/Cryptor.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/CustomButton.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/Debug.dto.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/Delay.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/DenomConverter.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/Dialog.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/Network/EnhancedWebSocket.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/ErrorHandler/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/ErrorHandler/Config/error.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/ErrorHandler/file:/D:/Hilo/Hilo_Client/assets/scripts/ErrorHandler/ErrorHandler.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/fallback.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/FullScreenController.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Config/game.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/Game.dto.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/GradientLabel.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/BetSetting/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/BetSetting/HiloBetSettingItem.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/BetSetting/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/BetSetting/HiloBetSettingManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/HiloButtonManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/HiloGameConnection.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/HiloGameData.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/HiloGameLogic.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/HiloGameView.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/HiloOddsInfoManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/HiloPlayerOperateTypeItem.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/HiloPokerTool.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/HiloProbabilityInfoManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/HiloResultManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/HiloRoadMapItem.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/RoadMap/HiloRoadMapManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Hilo/UI/HiloScoreManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/HSLSprite.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Humburger.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/I18n.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/I18n.type.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/I18nLoader.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/Label.extension.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/LabelPropertyAdjustor.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/LanguageItem.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/LanguageSetting.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/LoadingTask.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedAsset.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedComponent.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedFontSize.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedLabel.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedPosition.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedSkeleton.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/LocalizedComponent/LocalizedSprite.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/MessageDialog.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/MessageManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Application/file:/D:/Hilo/Hilo_Client/assets/scripts/Application/NoSleepController.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/NumberFormatter.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Page/Page.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/Parameter.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/Config/path.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Bet/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Bet/PlayerBetInfo.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/PlayerCashoutItem.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/PlayerInfo.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/PreloadManager.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Components/Processor.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Helper/LoadingTask/ProgressOffsetCounter.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/Provability.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/Random.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/StartUp.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/Helper/StorageHelper.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/file:/D:/Hilo/Hilo_Client/assets/scripts/I18n/Config/support.config.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/file:/D:/Hilo/Hilo_Client/assets/scripts/Data/DTO/Table.dto.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Extensions/Tween.extension.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/UserWebview.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/file:/D:/Hilo/Hilo_Client/assets/scripts/Toolkit/Utils/Utility.ts","../../file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/file:/D:/Hilo/Hilo_Client/assets/scripts/Game/GameObject/VolumeSetting.ts"],"names":["ccclass","_decorator","property","UITransform","onLoad","_Page","playOpenAnimation","isFreezing","tween","this","mask","getComponent","UIOpacity","set","opacity","to","start","_context","view","position","Vec3","referenceBackground","contentSize","height","ZERO","easing","promisifyStart","playCloseAnimation","_context2","Page","Animation","prototype","waitForFinished","animationName","animationState","getState","Error","isPlaying","Promise","resolve","_this","once","EventType","FINISHED","Object","assign","GameName","GameVersion","PlatformsID","WalletTypesID","Lauguage","GameDomain","settings","querySettings","NeedEncrypt","Debug","generateDummyUserToken","length","characterSet","result","i","charAt","Math","trunc","random","AppConfigLoader","gameName","Parameter","get","defaultAppConfig","gameVersion","gameDomain","token","platformID","walletTypeID","needEncrypt","language","homeURL","useIFrame","hideExit","debug","_config","_connection","_i18n","initI18nModule","initNetworkModule","cryptor","Cryptor","config","webSocket","EnhancedWebSocket","joinURL","Connection","load","instance","Application","assetCache","Map","type","key","asset","has","CacheableAssetTypeName","json","JsonAsset","errorMessage","text","nodeSetting","SoundEffect","Music","Voice","VoiceLanguage","SupportLanguage","EN","English","SCH","Chinsese","TCH","VI","Vietnamese","JA","Japanese","audioSourcePool","NodePool","_audioSourceRoot","musicAudioSource","audioClipMap","_loadingTask","_isContextRunning","_isStartPlaying","_deferredPlaylist","_effectVolume","_musicVolume","_effectMute","_musicMute","originMusicVolume","originEffectVolume","game","on","Game","EVENT_SHOW","musicVolume","effectVolume","EVENT_HIDE","preload","applyLocalSetting","CompositeLoadingTask","loadAudioClip","stopEffects","exceptionList","playingEffects","filter","effect","includes","clip","name","forEach","_this2","recycleAudioSource","audioSource","Tween","stopAllByTarget","stop","loop","put","node","getAudioSource","needRecycle","newNode","Node","addComponent","AudioSource","playOnAwake","ENDED","_this3","audioSourceRoot","addChild","playMusic","isLoop","playing","volume","_tryToPlay","playEffect","startAt","getDuration","_doPlay","push","_this4","STARTED","play","currentTime","updateEffectVolume","effectMute","updateMusicVolume","musicMute","loadingTask","addTask","resources","loadDir","AudioClip","progress","bind","error","assets","finish","audioClip","_this5","waitForFinish","localAudioSetting","StorageHelper","loadFromLocal","StoragePath","AudioSetting","value","mute","addPersistRootNode","getComponentsInChildren","_this6","AudioManager","cache","getAvatar","url","assetManager","loadRemote","ext","err","spriteFrame","SpriteFrame","createWithImage","AvatarLoader","ChipType","Wager","Bet","Denom","Balance","Card","Probability","Multiplier","Secret","Hash","NextHash","Prefab","args","_initializerDefineProperty","pool","enterTableInit","_inheritsLoose","_proto","onEnterTable","onNewEventReceived","PlayerInfo","getInstance","getEntryEvent","Event","onTableStateChanged","state","TableState","Waiting","recycleAll","event","Bets","bets","values","allNodes","countDifference","abs","slice","nodes","bet","index","playerBetInfo","PlayerBetInfo","player","getPlayers","find","p","ID","PlayerID","setInfo","Nickname","DenomConverter","valueToDollar","parentNode","getPlayerID","localPlayerContent","otherPlayerContent","parent","seperator","active","children","info","instantiate","playerBetInfoPrefab","poolNode","_createClass","Component","configurable","enumerable","writable","initializer","referencedNode","TRANSFORM_CHANGED","TransformBit","ROTATION","worldRotation","requireComponent","Button","button","audioClipKey","playOnTouchStart","TOUCH_START","interactable","Instance","playOnTouchEnd","CLICK","subTasks","waitForTaskAddedCallbacks","findTask","taskName","task","waitForTaskAdded","existTask","callbacks","addSimpleTask","taskPromise","subTask","data","LoadingTask","each","onSubTaskProgress","onSubTaskFinished","completeCount","callback","_LoadingTask","reduce","pre","cur","totalCount","every","isFinished","isSuccess","websocket","onDisconnectCallbacks","onDisconnected","setExceptedErrorMessages","PathName","CustomErrorName","INSUFFICIENT_BALANCE","listenForDisconnect","send","path","errorMsg","listenForPublishData","subscribe","stoplisteningForPublishData","unsubscribe","listenForError","subscribeError","stoplisteningForError","unsubscribeError","blockDisconnectionMessage","blockDisconnectedMessage","startConnecting","connect","login","Token","EntryTable","Login","cryptKey","then","keepAlive","getTableStatus","Refresh","onMoneyNotEnough","isNotEnoughMsgExist","validKeyLength","_key","_backupKey","encrypt","plainText","CryptoJS","AES","enc","Utf8","parse","mode","ECB","padding","pad","Pkcs7","toString","decrypt","cipherText","getSHA256Hash","SHA256","rawKey","repeat","ceil","substring","CustomButtonStatus","hsl","scale","clone","ONE","equal","status","equals","lerp","out","from","ratio","tempStatus","override","visible","_hslSprite","_transitionFinished","_time","_pressed","_hovered","_fromStatus","_toStatus","update","dt","target","HSLSprite","_duration","applyButtonStatus","_applyTarget","_Button","_resetState","_interactable","_normalStatus","_disabledStatus","_applyTransition","_updateCustomTransition","getScale","setScale","_transition","_","_this$_normalStatus","_updateState","_pressedStatus","_hoverStatus","DebugMode","Mode","Rank","Win","component","Delay","millisecond","resolveFunc","scheduleOnce","reason","rejectFunc","resolveValue","getDenom","DialogEventType","confirmButton","onConfirmButtonClick","cancelButton","onCancelButtonClick","waitForComfirm","Dialog","Confirm","waitForCancel","Cancel","emit","closeOnConfirm","close","closeOnCancel","messageDispatcher","messageBroadcaster","errorBoardcaster","expectedErrorMessages","previousDelays","errorMessages","connectSuccessfully","WebSocket","connectionPromise","onopen","log","onmessage","receiveData","JSON","decryptData","Path","Data","Err","reject","_this$messageDispatch","shift","_this$messageDispatch2","_this$expectedErrorMe","_this$errorBoardcaste","notify","handleCustomError","onerror","onclose","showDisconnectMsg","informNetworkDisconnecting","postData","timeout","DEFAULT_TIMEOUT","readyState","OPEN","forever","encryptResult","stringify","race","TIMEOUT","sys","os","OS","IOS","OPERATE_TIMEOUT","CONNECTION_FAILED","subscriberQueue","handlerIndex","findIndex","subscriber","splice","requestTime","Date","now","_context3","Ack","undefined","averageDelay","KEEP_ALIVE_INTERVAL","arg","ErrorHandler","handle","CLOSED","CLOSING","DEFAULT_DELAY","ErrorUtils","errorList","code","FRONT_END_ERROR","LOADING_FAILED","GAME_PAUSE","ROUND_CANCEL","BET_LIMIT_EXCEED","TABLE_LIMIT_EXCEED","window","addEventListener","message","customError","findErrorBy","StartUp","showGameStateError","showHint","showFatalError","en","sch","tch","tha","cn","tw","Canvas","isMobile","TOUCH_END","screen","fullScreen","requestFullScreen","Cards","Wagers","Payouts","TotalBet","TotalWin","property1","property2","ttfAssembler","Color","_flushAssembler","assembler","Label","Assembler","getAssembler","gradientAssembler","_assembler","destroyRenderData","_renderData","createData","material","_colors","labelAssembler","create","fillBuffers","comp","call","renderData","vData","chunk","vb","colorOffset","floatStride","color","colors","colorR","r","colorG","g","colorB","b","colorA","_uiProps","NumberFormatter","betValue","betIndex","btn","onBtnBetValue","HiloBetSettingManager","closeBetSetting","HiloGameData","setCurrentBetValue","setBetIndex","HiloButtonManager","updateCurrentBetValue","btnBackDefault","setBetValue","valueTxt","betItemGroup","map","betItem","initBetSettingPage","betList","getBetList","addBetItem","betSettingItem","HiloBetSettingItem","setParent","itemGroup","getDefaultBetIndex","openBetSetting","SpriteAtlas","betBtnSpriteName","init","addBtnEvent","btnClose","btnRefresh","onBtnRefresh","btnHigh","onBtnBet","btnLow","btnCashOut","onBtnCashOut","btnNextRound","onBtnNextRound","btnBet","onBtnStartBet","btnBetList","onBtnBetList","onBtnClose","closeGame","setRefreshBtnLock","setBetLock","setCompareBtnLock","HiloGameConnection","sendSkip","betType","betInfo","BetRequestData","getBetIndexList","sendBet","gameData","playerInfo","getCurrentBetValue","money","getPlayerMoney","connection","setPlayerMoney","HiloGameLogic","setGameState","GameState","GAME_STATE_BET","setIsWin","sendCashOut","GAME_STATE_START","enable","updateCompareBtnState","cardIndex","getCardIndex","cardValue","HiloPokerTool","getPokerValue","betIndexList","Array","highBetIndex","lowBetIndex","Sprite","betAtlas","getSpriteFrame","setBetIndexList","updateBetBtnState","isLose","gameState","getGameState","isStartState","isBetState","isResultState","GAME_STATE_RESULT","isFirstRound","getIsNewRound","currentBet","currentBetTxt","HiloScoreManager","updateScoreInfo","Skip","handleSkip","handleBet","Cashout","handleCashOut","getBetIndex","setIsNewRound","setCurrentOdds","setCardIndex","entries","setProbabilityList","operate","getPlayerOperateTypeFromWager","HiloGameView","getNewCard","setProveData","GAME_STATE_INIT","PlayerOperateType","SKIP","setNextHash","GameEventType","NEXT_HASH","getIsFirstIntoGame","provabilityData","ResultData","RESULT","setIsFirstIntoGame","currentBetValue","score","currentOdds","isNewRound","isFirstIntoGame","isWin","probabilityList","oddsList","nextHash","defaultBetIndex","setBetList","getScore","setScore","getCurrentOdds","getIsWin","getProbabilityList","Number","toFixed","getOddsList","setOddsList","getNextHash","setDefaultBetIndex","DEFAULT","addTestEvent","initOddsList","PayTable","Values","Default","payTableData","oddsList1","oddsList2","odds1","odds2","oddsKey1","oddsKey2","onGameStateChange","onGameInit","onGameStart","onGameBet","onGameResult","console","updateCurrentCardInfo","HiloRoadMapManager","refreshRecord","updateLossEffect","delay","HiloResultManager","openResultPage","document","location","href","history","back","wager","operateType","LOW","HIGH","isDebugWin","debugInfo","DebugRequestData","winOrLossStr","wagerStr","input","Input","KEY_UP","keyCode","KeyCode","SPACE","ARROW_UP","ARROW_DOWN","DIGIT_1","DIGIT_2","DIGIT_3","DIGIT_4","DIGIT_5","DIGIT_6","DIGIT_7","DIGIT_8","DIGIT_9","DIGIT_0","KEY_Q","KEY_W","KEY_E","KEY_Z","KEY_X","KEY_C","KEY_V","KEY_B","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","I18n","changeLanguage","PT","ES","KO","TH","checkGameSceneIsLoadFinish","updatePlayerMoney","lossEffect","betSettingManager","buttongManager","oddsInfoManager","HiloOddsInfoManager","probabilityInfoManager","HiloProbabilityInfoManager","roadMapManager","scoreManager","resultManager","isConnect","prepareStartGame","waitLoading","setPokeAtlas","pokerAtlas","setGameVersion","setTimeout","throwAbandonCard","turnCardOver","currentCard","updateProbabilityInfo","updateOddsInfo","initAbandonCard","abandonCard","getPoker","angle","MUCKED","abandonCardOpacity","addRecord","playerMoneyTxt","versionTxt","string","highOddsTxt","lowOddsTxt","pokerValue","isValueMaxOrMin","oddsIndex2","highOdds","lowOdds","duration","targetScale","highOddsOpacity","lowOddsOpacity","setSprite","pokerNode","spriteName","pokerSprite","convertCardIndexToSpriteName","convertCardIndexFormat","cardIndexStr","poker","FLIP","y","x","remainder","highProbabilityTxt","lowProbabilityTxt","highProbabilityOpacity","lowProbabilityOpacity","winHexColor","lossHexColor","isShowResultPage","closeResultPage","updateResultInfo","showPageEffect","fontHex","odds","resultInfoTxt","fromHEX","bg","winBg","lossBg","oddsTxt","resultMoneyTxt","LocalizedLabel","settleInfoTxt","isOpen","maskOpacity","pageOpacity","resultPage","startScale","maxScale","startOpacity","targetOpacity","delayTime","oddsGroup","moneyGroup","setOddsInfo","fontHexColor","ScrollView","lastCard","firstCard","cardList","operateIconList","screenMaxAmount","cardInterval","operateIconInterval","startX","posY","barInitPos","cardsGroupInitSize","Size","cardAniScale","isFirstCard","addCard","cardGroupTransform","cardGroup","width","setContentSize","moveRecord","posX","card","roadMapItem","cardPos","HiloRoadMapItem","addOperateIcon","currentCardPos","operateIcon","icon","highIcon","lowIcon","skipIcon","insertChild","HiloPlayerOperateTypeItem","extraCardAmount","lastRecordPos","targetPosX","roadMapScrollView","scrollToRight","_loop","targetPos","initRoadMap","bar","destroyAllChildren","isShowScore","scoreTxt","executeInEditMode","min","max","step","slide","_hsl","_onMaterialModified","idx","_Sprite","updateHSLProperty","updateHueProperty","updateSaturationProperty","updateLightnessProperty","getMaterialInstance","setProperty","z","onEnable","getAccountInfoUrl","historys","I18nEventType","caches","loader","I18nLoader","defaultLanguage","_currentLanguage","_loadLanguagePromise","isLoadingLanguage","targetLanguage","contains","getFallbackLanguage","handleTitleTranlation","AssetCache","loadLanguage","EVENT_TYPE","LanguageChanged","waitForLanguageLoaded","getNodeSetting","_this$cache$get","warn","getMessage","resultMessage","_this$cache$get2","split","a","resultSpriteFrame","spriteAtlas","getSkeletonData","resultSkeletonData","sp","SkeletonData","title","fallBackLanguage","fallbackLanguages","EventTarget","eng","ja","vi","pt","es","getData","all","assetPathConfig","assetTypeName","assetPathMap","assetType","cacheableAssetTypeMap","assetName","loadAsset","registerTextChangeCallback","textChangeCallbackList","unregisterTextChangeCallback","_this$textChangeCallb2","indexOf","originalDescriptor","getOwnPropertyDescriptor","originSetter","finalString","defineProperty","LabelPropertyConstraint","label","previousDigit","str","updateFontSize","constraints","sort","digit","currentDigit","getLocaleStringLength","replace","constraint","fontSize","lineHeight","Toggle","toggle","isChecked","setLanguageName","languageName","setLineActive","line","setColor","getToggle","itemHeight","whiteColor","HexColorCode","White","yellowColor","Yellow","supportLanguageNameList","languageItemList","isChoose","labelColor","_AnimatedPage","getSupportLanguageName","initOptionsPage","open","supportLanguageValue","count","keys","item","languageItem","content","getIsChoose","getLanguageNameColor","LanguageItem","changeState","getCurrentLanguageIndex","currentLanguage","chooseIndex","AnimatedPage","_name","_completeCount","_totalCount","_isFinished","_isSuccess","_error","waitForStart","_target","onLanguageChange","onKeyChange","getTarget","LocalizedComponent","executionOrder","onDestroy","targetOff","menu","fontSizeKey","reset","LocalizedAsset","_this$key$split","messageKey","messageArgs","fillTextArgument","positionData","positionX","positionY","positionKey","isNaN","Skeleton","skeletonData","tracks","track","trackIndex","trackTime","animation","setAnimation","closeButton","display","messageDialogPool","fatalErrorMessage","gameStateErrorMessage","attachMessageManager","getMessageDialog","MessageDialog","CLOSE","setSiblingIndex","messageDialogRoot","hideGameStateError","_context4","spawnMessageDialog","messageDialogPrefab","noSleep","Nosleep","isEnabled","_onTouchEnd","off","cc","tooltip","updateTextDisplay","enabled","format","displayDecimal","displayDecimalZero","displayLeadingZero","displayThousands","displayZero","maxIntegerLength","maxDecimalLength","prefixText","posfixText","formatOption","decimalPointNumber","precision","precisionValue","round","resultText","integerPart","match","texts","_value","PageEventType","closeCallBack","_isFreezing","openButton","closeOnBlur","isVisible","isForce","waitForOpen","waitForClose","flag","getParamSearch","param","URL","searchParams","paramKey","defaultValue","_wager","_ID","nickname","multiplier","id","background","cashoutFrame","Brown","Black","multiplierValue","betFrame","setCashout","setItem","isLocalPlayer","localUserIcon","userIcon","playerMoney","denom","entryEvent","nickName","playerID","accountInfoUrl","tableState","players","gameView","gameLogic","currentBetvalue","setDenom","setEntryEvent","getnickName","setnickName","setPlayerID","setAccountInfoUrl","getTableState","setTableState","setPlayers","ProgressBar","preloadTask","preloadOnly","preLoadSceneTask","logoPromise","director","preloadScene","progressBar","reportStatus","startGame","reportProgress","iterator","iteratorResult","pausePromise","resumeResolve","stopResolve","finishResolve","finishPromise","onPause","onResume","run","process","stopPromise","_asyncToGenerator","next","done","Processor","stopSymbol","isRunning","isStopManually","pause","isPause","resume","isEndNaturely","Symbol","_offset","seconds","ButtonIconType","lastHash","msgTween","verifyButton","verify","hash","setNextResultHash","setResult","ON_ENTER_TABLE","copyHashNextGameButton","copyHashNextGame","copyHashLastGameButton","copyHashLastGame","copyJsonButton","copyJson","CCGame","buttonImageTransformation","CLASS","updateUI","hashNextGame","finalResult","successfulMessage","lastGameNode","hashLastGame","resultData","_nextHash","click","_lastHash","_json","NHASH","tickIcon","copyIcon","LHASH","copyToClipboard","msg","copiedMessagePrefab","setPosition","destroy","BUTTON_CLICK","navigator","clipboard","isSecureContext","writeText","textArea","createElement","body","appendChild","select","execCommand","remove","getBoolean","maximum","allowNegative","randomSign","floor","Random","messageManager","_state","gameIsHidden","addConnectEvent","onLogin","EnterTable","updateBalance","AccountInfoURL","ON_LOGIN","State","Players","postMessage","newState","Receiving","ROUND_START","TABLE_STATE_CHANGED","localStorage","getItem","PayType","TableType","startTime","setTime","time","_finalAction","_firstTick","_elapsed","WebView","source","webview","nativeWebView","_this2$webview$native","contentWindow","parentElement","style","overflow","disableRecordWebView","openUserRecord","openWebview","currentLanguageForWebview","openUserStatistics","smallerValues","fill","originValue","assert","frame","fps","displayLength","replaceWith","char","join","RegExp","host","child","originWorldPosition","convertToWorldSpaceAR","convertToNodeSpaceAR","Slider","currentAudioSetting","handleVolumeSlider","soundMuteButton","switchSoundMute","BGMMuteButton","switchBGMMute","loadAndApplyAudioSetting","initUI","updateVolumeSlider","soundVolumeSlider","soundVolumeSliderFill","fillRange","BGMVolumeSlider","BGMVolumeSliderFill","saveAudioSetting","saveToLocal","VolumeSetting","defaultAudioSetting"],"mappings":"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","file":"all.js","sourcesContent":["import { tween, UITransform, Vec3 } from 'cc';\r\nimport { UIOpacity, _decorator } from 'cc';\r\nimport Page from './Page';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('AnimatedPage')\r\nexport default class AnimatedPage extends Page {\r\n\r\n    @property(UITransform)\r\n    private referenceBackground: UITransform = null;    // view 這個 node 的長寬目前是固定(100, 100)，因此需要透過 referenceBackground 來知道整個彈窗的長寬\r\n\r\n    protected onLoad() {\r\n        super.onLoad();\r\n    }\r\n\r\n    protected async playOpenAnimation(): Promise<void> {\r\n        this.isFreezing = true;\r\n        tween(this.mask.getComponent(UIOpacity))\r\n            .set({ opacity: 0 })\r\n            .to(0.3, { opacity: 255 })\r\n            .start();\r\n        await tween(this.view)\r\n            .set({ position: new Vec3(0, -this.referenceBackground.contentSize.height, 0) })\r\n            .to(0.3, { position: Vec3.ZERO }, { easing: 'smooth' })\r\n            .promisifyStart();\r\n        this.isFreezing = false;\r\n    }\r\n\r\n    protected async playCloseAnimation(): Promise<void> {\r\n        this.isFreezing = true;\r\n        tween(this.mask.getComponent(UIOpacity))\r\n            .to(0.3, { opacity: 0 })\r\n            .start();\r\n        await tween(this.view)\r\n            .to(0.3, { position: new Vec3(0, -this.referenceBackground.contentSize.height, 0) }, { easing: 'smooth' })\r\n            .promisifyStart();\r\n        this.isFreezing = false;\r\n    }\r\n}\r\n","import { Animation } from 'cc';\r\n\r\ndeclare module 'cc' {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    interface Animation {\r\n        waitForFinished(animationName?: string): Promise<void>;\r\n    }\r\n}\r\n\r\nAnimation.prototype.waitForFinished = function waitForFinished(this: Animation, animationName?: string) {\r\n    const animationState = this.getState(animationName);\r\n    if (animationName && !animationState) {\r\n        throw new Error(`Can't find the animation state: ${animationName}`);\r\n    }\r\n    if (!animationState.isPlaying) {\r\n        return Promise.resolve();\r\n    }\r\n    return new Promise((resolve) =>\r\n        this.once(Animation.EventType.FINISHED, () => {\r\n            if (animationState.isPlaying) {\r\n                return;\r\n            }\r\n            resolve();\r\n        })\r\n    );\r\n};\r\n","import { settings } from \"cc\";\r\nimport { DEV } from \"cc/env\";\r\n\r\nconst appConfig = {\r\n    GameName: 'hilo',\r\n    GameVersion: 'v1.0.16',\r\n    PlatformsID: 1,\r\n    WalletTypesID: 1,\r\n    Lauguage: 'en',\r\n}\r\n\r\nexport const defaultAppConfig = DEV ? Object.assign(appConfig, {\r\n    GameDomain: 'ws://192.168.127.152:9004/api/v1/games',\r\n    NeedEncrypt: false,\r\n    Debug: true,\r\n}): Object.assign(appConfig, {\r\n    GameDomain: settings.querySettings(\"settings\", \"ServerWebsocket\"),\r\n    NeedEncrypt: settings.querySettings(\"settings\", \"Encrypt\"),\r\n    Debug: settings.querySettings(\"settings\", \"Debug\"),\r\n});\r\n","import { defaultAppConfig } from '../Data/Config/app.config';\r\nimport Parameter from '../Toolkit/Utils/Parameter';\r\n\r\nexport type AppConfigData = {\r\n    gameName: string;\r\n    gameVersion: string;\r\n    gameDomain: string;\r\n    token: string;\r\n    platformID: number;\r\n    walletTypeID: number;\r\n    needEncrypt: boolean;\r\n    language: string;\r\n    homeURL: string;\r\n    useIFrame: string;\r\n    hideExit: boolean; // 隱藏離開按鈕\r\n    debug: boolean;\r\n};\r\n\r\nexport namespace AppConfigLoader {\r\n    export function load(): AppConfigData {\r\n        return {\r\n            gameName: Parameter.get('gameID', defaultAppConfig.GameName),\r\n            gameVersion: defaultAppConfig.GameVersion,\r\n            gameDomain: Parameter.get('gameDomain', defaultAppConfig.GameDomain),\r\n            token: Parameter.get('token') ?? generateDummyUserToken(36),\r\n            platformID: +(Parameter.get('platform') ?? defaultAppConfig.PlatformsID),\r\n            walletTypeID: +(Parameter.get('wt') ?? defaultAppConfig.WalletTypesID),\r\n            needEncrypt: defaultAppConfig.NeedEncrypt,\r\n            language: Parameter.get('lang', defaultAppConfig.Lauguage),\r\n            homeURL: Parameter.get('homeUrl'),\r\n            useIFrame: Parameter.get('useIFrame'),\r\n            hideExit: Parameter.get('hideExit') === 'true',\r\n            debug: defaultAppConfig.Debug,\r\n        };\r\n    }\r\n}\r\n\r\nfunction generateDummyUserToken(length: number) {\r\n    // generate random 36-digit string as dummy user token\r\n    const characterSet: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result: string = '';\r\n    for (let i = 0; i < length; i++) {\r\n        result += characterSet.charAt(Math.trunc(Math.random() * characterSet.length));\r\n    }\r\n    return result;\r\n}\r\n","import Connection from './Network/Connection';\r\nimport Cryptor from './Network/Cryptor';\r\nimport EnhancedWebSocket from './Network/EnhancedWebSocket';\r\nimport { AppConfigData, AppConfigLoader } from './AppConfigLoader';\r\nimport { joinURL } from '../Toolkit/Utils/Utility';\r\n\r\nexport default class Application {\r\n    private static instance: Application = null;\r\n    private _config: AppConfigData = null;\r\n    private _connection: Connection = null;\r\n    private _i18n: any = null;\r\n\r\n    private constructor() {}\r\n\r\n    public static get Instance() {\r\n        if (!this.instance) {\r\n            this.instance = new Application();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public get config() {\r\n        if (!this._config) {\r\n            this._config = AppConfigLoader.load();\r\n        }\r\n        return { ...this._config };\r\n    }\r\n\r\n    public get connection() {\r\n        if (!this._connection) {\r\n            this.initNetworkModule();\r\n        }\r\n        return this._connection;\r\n    }\r\n\r\n    public get i18n() {\r\n        if (!this._i18n) {\r\n            this.initI18nModule();\r\n        }\r\n        return this._i18n;\r\n    }\r\n\r\n    private async initI18nModule() {\r\n        // TODO i18n module\r\n        this._i18n = {};\r\n    }\r\n\r\n    private initNetworkModule() {\r\n        const cryptor = new Cryptor(this.config.gameName, 16);\r\n        const webSocket = new EnhancedWebSocket(joinURL(this.config.gameDomain, this.config.gameName), this.config.needEncrypt ? cryptor : null);\r\n        this._connection = new Connection(webSocket);\r\n    }\r\n}\r\n","import { Asset } from 'cc';\r\n\r\nexport default class AssetCache {\r\n    private assetCache: Map<typeof Asset, Record<string, Asset>> = new Map();\r\n\r\n    public set<T extends typeof Asset>(type: T, key: string, asset: InstanceType<T>) {\r\n        if (!this.assetCache.has(type)) {\r\n            this.assetCache.set(type, {});\r\n        }\r\n        const assetMap = this.assetCache.get(type);\r\n        assetMap[key] = asset;\r\n    }\r\n\r\n    public get<T extends typeof Asset>(type: T, key: string): InstanceType<T> {\r\n        if (!this.assetCache.has(type)) {\r\n            this.assetCache.set(type, {});\r\n        }\r\n        const assetMap = this.assetCache.get(type);\r\n        return assetMap[key] as InstanceType<T>;\r\n    }\r\n}\r\n","import { Asset, JsonAsset } from 'cc';\r\n\r\nexport enum CacheableAssetTypeName {\r\n    JSON = 'json',\r\n}\r\n\r\nexport const cacheableAssetTypeMap: Record<CacheableAssetTypeName, typeof Asset> = {\r\n    json: JsonAsset,\r\n};\r\n\r\nexport const assetPathConfig: Record<CacheableAssetTypeName, Record<string, string>> = {\r\n    json: {\r\n        errorMessage: 'errorMessage',\r\n        text: 'text',\r\n        nodeSetting: 'nodeSetting',\r\n    },\r\n};\r\n","import { SupportLanguage } from '../../I18n/Config/support.config';\r\n\r\nexport enum SoundEffect {\r\n    // button\r\n    // BUTTON_COMMON_01 = 'bt_common01',\r\n    BUTTON_CLICK = 'click',\r\n    EXPLOSION = 'explosion',\r\n    CASHOUT_WIN = 'cash_out_win',\r\n    ROCKET_FLY = 'rocket_fly',\r\n    ROUND_START = 'round_start',\r\n\r\n    MUCKED = 'hilo_flip',\r\n    FLIP = 'hilo_mucked',\r\n}\r\nexport enum Music {\r\n    BGM_01 = 'music_bg',\r\n}\r\n\r\nexport enum Voice {\r\n    START_BETTING = 'vc_bet01',\r\n}\r\n\r\nexport enum VoiceLanguage {\r\n    Chinsese = 'chinese',\r\n    English = 'english',\r\n    Vietnamese = 'vietnamese',\r\n    Japanese = 'japanese'\r\n}\r\n\r\nexport const supporLanguageToVoiceLanguage: { [value in SupportLanguage]: VoiceLanguage } = {\r\n    [SupportLanguage.EN]: VoiceLanguage.English,\r\n    [SupportLanguage.SCH]: VoiceLanguage.Chinsese,\r\n    [SupportLanguage.TCH]: VoiceLanguage.Chinsese,\r\n    [SupportLanguage.VI]: VoiceLanguage.Vietnamese,\r\n    [SupportLanguage.JA]: VoiceLanguage.Japanese,\r\n};\r\n","import { AudioClip, AudioSource, Tween, Game, game, Node, NodePool, resources } from 'cc';\r\nimport CompositeLoadingTask from '../Toolkit/Helper/LoadingTask/CompositeLoadingTask';\r\nimport StorageHelper, { StoragePath } from './Helper/StorageHelper';\r\nimport { Music, SoundEffect } from './Config/audio.config';\r\nimport { IAudioSetting } from './GameObject/VolumeSetting';\r\n\r\nexport default class AudioManager {\r\n    private static instance: AudioManager = null;\r\n\r\n    private audioSourcePool: NodePool = new NodePool();\r\n    private _audioSourceRoot: Node = null;\r\n    private musicAudioSource: AudioSource = null;\r\n    private audioClipMap: Record<string, AudioClip> = {};\r\n    private _loadingTask: CompositeLoadingTask = null;\r\n    private _isContextRunning = false;\r\n    private _isStartPlaying = false;\r\n    private _deferredPlaylist: (() => void)[] = [];\r\n\r\n    // 音量\r\n    private _effectVolume: number = 1;\r\n    private _musicVolume: number = 1;\r\n    // 靜音\r\n    private _effectMute: boolean = false;\r\n    private _musicMute: boolean = false;\r\n\r\n    private originMusicVolume = 1;\r\n    private originEffectVolume = 1;\r\n\r\n    private constructor() {\r\n        game.on(Game.EVENT_SHOW, () => {\r\n            this.musicVolume = this.originMusicVolume;\r\n            this.effectVolume = this.originEffectVolume;\r\n        });\r\n        game.on(Game.EVENT_HIDE, () => {\r\n            this.originEffectVolume = this.effectVolume;\r\n            this.originMusicVolume = this.musicVolume;\r\n            this.musicVolume = 0;\r\n            this.effectVolume = 0;\r\n        });\r\n    }\r\n\r\n    public static get Instance() {\r\n        if (!this.instance) {\r\n            this.instance = new AudioManager();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public get loadingTask() {\r\n        return this._loadingTask;\r\n    }\r\n\r\n    public get effectVolume(): number {\r\n        return this.effectMute ? 0 : this._effectVolume;\r\n    }\r\n    public set effectVolume(value: number) {\r\n        this._effectVolume = value;\r\n        this.updateEffectVolume();\r\n    }\r\n\r\n    public get musicVolume(): number {\r\n        return this.musicMute ? 0 : this._musicVolume;\r\n    }\r\n    public set musicVolume(value: number) {\r\n        this._musicVolume = value;\r\n        this.updateMusicVolume();\r\n    }\r\n\r\n    public get effectMute(): boolean {\r\n        return this._effectMute;\r\n    }\r\n\r\n    public set effectMute(mute: boolean) {\r\n        this._effectMute = mute;\r\n        this.updateEffectVolume();\r\n    }\r\n\r\n    public get musicMute(): boolean {\r\n        return this._musicMute;\r\n    }\r\n\r\n    public set musicMute(mute: boolean) {\r\n        this._musicMute = mute;\r\n        this.updateMusicVolume();\r\n    }\r\n\r\n    private get audioSourceRoot() {\r\n        if (!this._audioSourceRoot) {\r\n            this._audioSourceRoot = new Node('AudioSourceRoot');\r\n            game.addPersistRootNode(this.audioSourceRoot);\r\n        }\r\n        return this._audioSourceRoot;\r\n    }\r\n\r\n    private get playingEffects() {\r\n        return this.audioSourceRoot.getComponentsInChildren(AudioSource).filter((audioSource) => audioSource !== this.musicAudioSource);\r\n    }\r\n\r\n    public async preload() {\r\n        this.applyLocalSetting();\r\n        this._loadingTask = new CompositeLoadingTask(`audio::preload`);\r\n        await this.loadAudioClip();\r\n    }\r\n\r\n    public stopEffects(exceptionList: string[] = []) {\r\n        this.playingEffects.filter((effect) => !exceptionList.includes(effect.clip.name)).forEach((effect) => this.recycleAudioSource(effect));\r\n    }\r\n\r\n    public recycleAudioSource(audioSource: AudioSource) {\r\n        Tween.stopAllByTarget(audioSource);\r\n        audioSource.stop();\r\n        audioSource.loop = false;\r\n        this.audioSourcePool.put(audioSource.node);\r\n    }\r\n\r\n    // 取得可使用的AudioSource\r\n    private getAudioSource(needRecycle = true): AudioSource {\r\n        const node =\r\n            this.audioSourcePool.get() ??\r\n            (() => {\r\n                const newNode = new Node();\r\n                const audioSource = newNode.addComponent(AudioSource);\r\n                audioSource.playOnAwake = false;\r\n                return newNode;\r\n            })();\r\n        if (needRecycle) {\r\n            // 監聽: 播放完畢後回收\r\n            node.once(AudioSource.EventType.ENDED, () => {\r\n                this.recycleAudioSource(node.getComponent(AudioSource));\r\n            });\r\n        }\r\n        this.audioSourceRoot.addChild(node);\r\n\r\n        return node.getComponent(AudioSource);\r\n    }\r\n\r\n    // 播放背景音樂\r\n    public playMusic(type: Music, isLoop = true): AudioSource {\r\n        const clip = this.audioClipMap[type];\r\n        const audioSource = this.musicAudioSource ?? (this.musicAudioSource = this.getAudioSource(false));\r\n        audioSource.node.name = 'Music';\r\n        if (audioSource.playing) {\r\n            audioSource.stop();\r\n        }\r\n        audioSource.volume = this.musicVolume;\r\n        audioSource.loop = isLoop;\r\n        this._tryToPlay(audioSource, clip);\r\n        return audioSource;\r\n    }\r\n\r\n    // 播放音效\r\n    public playEffect(type: SoundEffect, startAt = 0): AudioSource {\r\n        const clip = this.audioClipMap[type];\r\n        const audioSource = this.getAudioSource();\r\n        audioSource.node.name = 'Effect';\r\n        audioSource.volume = this.effectVolume;\r\n        if (startAt < clip.getDuration()) {\r\n            this._tryToPlay(audioSource, clip, startAt);\r\n        } else {\r\n            this.recycleAudioSource(audioSource);\r\n        }\r\n        return audioSource;\r\n    }\r\n\r\n    private _tryToPlay(audioSource: AudioSource, clip: AudioClip, startAt = 0) {\r\n        if (!this._isContextRunning) {\r\n            if (!this._isStartPlaying) {\r\n                // first play\r\n                this._isStartPlaying = true;\r\n                this._doPlay(audioSource, clip);\r\n                audioSource.node.once(AudioSource.EventType.STARTED, () => {\r\n                    this._isContextRunning = true;\r\n                    this._deferredPlaylist.forEach(play => play());\r\n                })\r\n            } else {\r\n                // wait for first play start\r\n                this._deferredPlaylist.push(() => this._doPlay(audioSource, clip, startAt));\r\n            }\r\n        } else {\r\n            this._doPlay(audioSource, clip, startAt);\r\n        }\r\n    }\r\n\r\n    private _doPlay(audioSource: AudioSource, clip: AudioClip, startAt = 0) {\r\n        audioSource.clip = clip;\r\n        audioSource.play();\r\n        if (startAt !== 0) {\r\n            audioSource.currentTime = startAt;\r\n        }\r\n    }\r\n\r\n    // 更新正在播放的音效音量\r\n    private updateEffectVolume(): void {\r\n        const volume = this.effectMute ? 0 : this.effectVolume;\r\n        this.playingEffects.forEach((audioSource) => {\r\n            audioSource.volume = volume;\r\n        });\r\n    }\r\n\r\n    // 更新正在播放的BGM音量\r\n    private updateMusicVolume(): void {\r\n        const volume = this.musicMute ? 0 : this._musicVolume;\r\n        if (this.musicAudioSource) {\r\n            this.musicAudioSource.volume = volume;\r\n        }\r\n    }\r\n\r\n    private async loadAudioClip() {\r\n        const loadingTask = this._loadingTask.addTask('audio::load-common');\r\n        resources.loadDir(`audioClip/common`, AudioClip, loadingTask.progress.bind(loadingTask), (error, assets) => {\r\n            loadingTask.finish(error);\r\n            if (assets) {\r\n                assets.forEach((audioClip) => {\r\n                    this.audioClipMap[audioClip.name] = audioClip;\r\n                });\r\n            }\r\n        });\r\n        return loadingTask.waitForFinish();\r\n    }\r\n\r\n    private applyLocalSetting() {\r\n        const localAudioSetting = StorageHelper.loadFromLocal(StoragePath.AudioSetting) as IAudioSetting;\r\n        if (localAudioSetting) {\r\n            const { effectMute, musicMute, effectVolume, musicVolume } = localAudioSetting;\r\n            this._effectMute = effectMute;\r\n            this._effectVolume = effectVolume;\r\n            this._musicMute = musicMute;\r\n            this._musicVolume = musicVolume;\r\n        }\r\n    }\r\n}\r\n","import { assetManager, error, ImageAsset, SpriteFrame } from 'cc';\r\n\r\nexport default class AvatarLoader {\r\n    private static instance: AvatarLoader = null;\r\n\r\n    public static get Instance() {\r\n        if (!this.instance) {\r\n            this.instance = new AvatarLoader();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    private constructor() {}\r\n\r\n    private cache: { [key: string]: SpriteFrame } = {};\r\n\r\n    public async getAvatar(url: string) {\r\n        return (\r\n            this.cache[url] ??\r\n            new Promise<SpriteFrame>((resolve) => {\r\n                assetManager.loadRemote<ImageAsset>(url, { ext: '.png' }, (err, asset) => {\r\n                    if (err) {\r\n                        error(err);\r\n                        return;\r\n                    }\r\n                    const spriteFrame = SpriteFrame.createWithImage(asset);\r\n                    this.cache[url] = spriteFrame;\r\n                    resolve(spriteFrame);\r\n                });\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { DebugRequestData } from \"./Debug.dto\";\r\nimport { Probability } from \"./Game.dto\";\r\n\r\n/** [ bettingOptionIndex, chipIndex, chipCount ] */\r\nexport enum ChipType {\r\n    Denom5,\r\n    Denom10,\r\n    Denom20,\r\n    Denom50,\r\n    Denom100,\r\n    Denom200,\r\n    Denom500,\r\n    Denom1K,\r\n    Denom2K,\r\n    Denom5K,\r\n    Denom10K,\r\n    Denom20K,\r\n    /** generate by front-end, use to distinguish gray chip */\r\n    NoDenom,\r\n}\r\n\r\n// [Wager, ChipType, number]\r\nexport type BetData = [number, ChipType, number];\r\n\r\nexport class BetRequestData\r\n{\r\n    Wager: number;\r\n    Bet: number;\r\n    Denom: number;\r\n    Debug: DebugRequestData;\r\n};\r\n\r\nexport class BetResponseData\r\n{\r\n    Balance: number;\r\n    Card: number;\r\n    Probability: Probability\r\n    Multiplier: number;\r\n    Wager: number;\r\n    Secret: string;\r\n    Hash: string;\r\n    NextHash: string;\r\n};\r\n","\r\nimport { NodePool } from 'cc';\r\nimport { instantiate } from 'cc';\r\nimport { _decorator, Component, Node, Prefab } from 'cc';\r\nimport { EventResponseData } from '../../../Data/DTO/Event.dto';\r\nimport { StartUp, GameEventType } from '../../StartUp';\r\nimport DenomConverter from '../../Helper/DenomConverter';\r\nimport { PlayerBetInfo } from './PlayerBetInfo';\r\nimport { TableState } from '../../../Data/DTO/Table.dto';\r\nimport { PlayerInfo } from '../../PlayerInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BetStatus')\r\nexport class BetStatus extends Component {\r\n    @property(Prefab)\r\n    private playerBetInfoPrefab: Prefab = null;\r\n    @property(Node)\r\n    private localPlayerContent: Node = null;\r\n    @property(Node)\r\n    private otherPlayerContent: Node = null;\r\n    @property(Node)\r\n    private seperator: Node = null;\r\n    @property(Node)\r\n    private poolNode: Node = null;\r\n\r\n    private pool: NodePool = new NodePool();\r\n\r\n    private enterTableInit: boolean = false;\r\n\r\n    protected onLoad() \r\n    {\r\n        // StartUp.getInstance().node.on(GameEventType.ON_ENTER_TABLE, this.onEnterTable.bind(this));\r\n        // StartUp.getInstance().node.on(GameEventType.NEW_EVENT_RECEIVED, (event) => this.onNewEventReceived(event), this);\r\n        // StartUp.getInstance().node.on(GameEventType.TABLE_STATE_CHANGED, (state) => this.onTableStateChanged(state), this);\r\n    }\r\n\r\n    protected start() {\r\n        // this.localPlayerContent.removeAllChildren();\r\n        // this.otherPlayerContent.removeAllChildren();\r\n        // this.seperator.active = false;\r\n        // if (!this.enterTableInit && PlayerInfo.getInstance().getEntryEvent()) {\r\n        //     this.onEnterTable();\r\n        // }\r\n    }\r\n\r\n    private onEnterTable() {\r\n        this.onNewEventReceived(PlayerInfo.getInstance().getEntryEvent().Event);\r\n        this.enterTableInit = true;\r\n    }\r\n\r\n    private onTableStateChanged(state: TableState) {\r\n        if (state === TableState.Waiting) {\r\n            this.recycleAll();\r\n        }\r\n    }\r\n\r\n    private onNewEventReceived(event: EventResponseData) {\r\n        if (!event)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (event.Bets) {\r\n            const bets = Object.values(event.Bets);\r\n            if (this.allNodes.length < bets.length) {\r\n                const countDifference = Math.abs(this.allNodes.length - bets.length);\r\n                for (let i = 0; i < countDifference; i++) {\r\n                    this.get();\r\n                }\r\n            }\r\n            else if (this.allNodes.length > bets.length) {\r\n                const countDifference = Math.abs(this.allNodes.length - bets.length);\r\n                for (let i = 0; i < countDifference; i++) {\r\n                    this.allNodes.slice(0, countDifference).forEach(node => this.put(node));\r\n                }\r\n            }\r\n            const nodes = [...this.allNodes];\r\n            bets.forEach((bet, index) => {\r\n                const playerBetInfo = nodes[index].getComponent(PlayerBetInfo);\r\n                const player = PlayerInfo.getInstance().getPlayers().find(p => p.ID === bet.PlayerID);\r\n                playerBetInfo.setInfo(player.Nickname, DenomConverter.valueToDollar(bet.Bet), bet.Multiplier ?? 0, bet.Wager, bet.PlayerID);\r\n                const parentNode = player.ID === PlayerInfo.getInstance().getPlayerID() ? this.localPlayerContent : this.otherPlayerContent;\r\n                playerBetInfo.node.parent = null;\r\n                parentNode.addChild(playerBetInfo.node);\r\n            });\r\n            this.seperator.active = this.localPlayerContent.children.length > 0;\r\n        }\r\n        else {\r\n            this.seperator.active = false;\r\n            this.recycleAll();\r\n        }\r\n    }\r\n\r\n    private get allNodes(): Node[] {\r\n        return [...this.localPlayerContent.children, ...this.otherPlayerContent.children, ...this.poolNode.children];\r\n    }\r\n\r\n    private get(): PlayerBetInfo {\r\n        const info = (this.pool.get() ?? instantiate(this.playerBetInfoPrefab));\r\n        this.poolNode.addChild(info);\r\n        info.active = true;\r\n        return info.getComponent(PlayerBetInfo);\r\n    }\r\n\r\n    private put(node: Node) {\r\n        node.active = false;\r\n        this.pool.put(node);\r\n    }\r\n\r\n    private recycleAll() {\r\n        [...this.localPlayerContent.children].forEach((node) => this.put(node));\r\n        [...this.otherPlayerContent.children].forEach((node) => this.put(node));\r\n    }\r\n}","import { _decorator, Component, Node, __private } from 'cc';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BindRotation')\r\nexport class BindRotation extends Component {\r\n    @property(Node)\r\n    private readonly referencedNode: Node = null;\r\n\r\n    onLoad() {\r\n        this.referencedNode.on(Node.EventType.TRANSFORM_CHANGED, (type: __private._cocos_core_scene_graph_node_enum__TransformBit) => {\r\n            if (type === Node.TransformBit.ROTATION) {\r\n                this.node.worldRotation = this.referencedNode.worldRotation;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Button, Component, Node, _decorator } from 'cc';\r\nimport AudioManager from '../../Game/AudioManager';\r\nimport { SoundEffect } from '../../Game/Config/audio.config';\r\n\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('ButtonSoundEffect')\r\n@requireComponent(Button)\r\nexport default class ButtonSoundEffect extends Component {\r\n    @property\r\n    private audioClipKey = '';\r\n\r\n    @property\r\n    private playOnTouchEnd = true;\r\n    @property\r\n    private playOnTouchStart = false;\r\n\r\n    protected onLoad() {\r\n        const button = this.getComponent(Button);\r\n        if (!Object.values(SoundEffect).includes(this.audioClipKey as SoundEffect)) {\r\n            throw new Error(`Can't find audio clip ${this.audioClipKey}`);\r\n        }\r\n        if (this.playOnTouchStart) {\r\n            this.node.on(Node.EventType.TOUCH_START, () => {\r\n                if (button.interactable) {\r\n                    AudioManager.Instance.playEffect(this.audioClipKey as SoundEffect);\r\n                }\r\n            });\r\n        }\r\n        if (this.playOnTouchEnd) {\r\n            this.node.on(Button.EventType.CLICK, () => AudioManager.Instance.playEffect(this.audioClipKey as SoundEffect));\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable class-methods-use-this */\r\nimport LoadingTask from './LoadingTask';\r\n\r\nexport default class CompositeLoadingTask extends LoadingTask {\r\n    private subTasks: LoadingTask[] = [];\r\n    private waitForTaskAddedCallbacks: { [taskName: string]: ((task: LoadingTask) => void)[] } = {};\r\n\r\n    public findTask(taskName: string) {\r\n        return this.subTasks.find((task) => task.name === taskName);\r\n    }\r\n\r\n    public waitForTaskAdded(taskName: string): Promise<LoadingTask> {\r\n        const existTask = this.subTasks.find((task) => taskName === task.name);\r\n        if (existTask) {\r\n            return Promise.resolve(existTask);\r\n        }\r\n        const callbacks = this.waitForTaskAddedCallbacks[taskName] ?? (this.waitForTaskAddedCallbacks[taskName] = []);\r\n        return new Promise<LoadingTask>((resolve) => {\r\n            callbacks.push(resolve);\r\n        });\r\n    }\r\n\r\n    public async addSimpleTask<T>(task: string, taskPromise: Promise<T>): Promise<T> {\r\n        const subTask = this.addTask(task);\r\n        subTask.progress(0, 1);\r\n        try {\r\n            const data = await taskPromise;\r\n            subTask.progress(1, 1);\r\n            subTask.finish(null);\r\n            return data;\r\n        } catch (reason) {\r\n            if (reason instanceof Error) {\r\n                subTask.finish(reason);\r\n            } else if (typeof reason === 'string') {\r\n                subTask.finish(new Error(reason));\r\n            } else {\r\n                subTask.finish(new Error(`LoadingTask: ${subTask.name} Failed, reason: ${reason}`));\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public addTask(task: string | LoadingTask): LoadingTask {\r\n        const subTask = task instanceof LoadingTask ? task : new LoadingTask(task);\r\n        if (this.subTasks.find((each) => each.name === subTask.name)) {\r\n            throw new Error(`There is task named ${subTask.name} in the group already`);\r\n        }\r\n        subTask.on('onProgress', this.onSubTaskProgress, this);\r\n        subTask.on('onFinished', this.onSubTaskFinished, this);\r\n        if (subTask.completeCount) {\r\n            this.onSubTaskProgress();\r\n        }\r\n        this.subTasks.push(subTask);\r\n        this.waitForTaskAddedCallbacks[subTask.name]?.forEach((callback) => callback(subTask));\r\n        return subTask;\r\n    }\r\n\r\n    public progress(): void {\r\n        throw new Error('TaskGroup shoud not progress by itself');\r\n    }\r\n\r\n    public finish(): void {\r\n        throw new Error('TaskGroup shoud not finish by itself');\r\n    }\r\n\r\n    private onSubTaskProgress() {\r\n        super.progress(\r\n            this.subTasks.reduce((pre, cur) => pre + cur.completeCount, 0),\r\n            this.subTasks.reduce((pre, cur) => pre + cur.totalCount, 0)\r\n        );\r\n    }\r\n\r\n    private onSubTaskFinished() {\r\n        if (this.subTasks.every((task) => task.isFinished)) {\r\n            super.finish(\r\n                this.subTasks.every((task) => task.isSuccess)\r\n                    ? null\r\n                    : new Error(`Status: ${this.subTasks.filter((subTask) => !subTask.isSuccess).length}/${this.subTasks.length} Tasks failed`)\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { PathName, PublishDataType, RequestResponseDataType } from '../../Data/Config/path.config';\r\nimport EnhancedWebSocket from './EnhancedWebSocket';\r\nimport { CustomErrorName } from '../../ErrorHandler/Config/error.config';\r\nimport { DebugRequestData } from '../../Data/DTO/Debug.dto';\r\nimport { BetRequestData } from '../../Data/DTO/Bet.dto';\r\nimport { PlayerInfo } from '../../Game/PlayerInfo';\r\n\r\nexport default class Connection {\r\n    private webSocket: EnhancedWebSocket = null;\r\n\r\n    private onDisconnectCallbacks: Function[] = [];\r\n\r\n    constructor(websocket: EnhancedWebSocket) {\r\n        this.webSocket = websocket;\r\n        this.webSocket.onDisconnected = () => {\r\n            this.onDisconnectCallbacks.forEach((callback) => callback());\r\n        };\r\n        this.webSocket.setExceptedErrorMessages(PathName.Bet, [CustomErrorName.INSUFFICIENT_BALANCE]);\r\n    }\r\n\r\n    public listenForDisconnect(callback: () => void) {\r\n        this.onDisconnectCallbacks.push(callback);\r\n    }\r\n\r\n    public send<T extends keyof RequestResponseDataType>\r\n    (path: T, data: RequestResponseDataType[T][0], errorMsg: CustomErrorName[] = []): Promise<RequestResponseDataType[T][1]>\r\n    {\r\n        return this.webSocket.send(path, data, errorMsg);\r\n    }\r\n\r\n    public listenForPublishData<T extends keyof PublishDataType>(path: T, callback: (data: PublishDataType[T]) => void) \r\n    {\r\n        this.webSocket.subscribe(path, callback);\r\n    }\r\n\r\n    public stoplisteningForPublishData<T extends keyof PublishDataType>(path: T, callback: (data: PublishDataType[T]) => void) {\r\n        this.webSocket.unsubscribe(path, callback);\r\n    }\r\n\r\n    public listenForError<T extends keyof PublishDataType>(path: T, callback: (err: string) => boolean) {\r\n        this.webSocket.subscribeError(path, callback);\r\n    }\r\n\r\n    public stoplisteningForError<T extends keyof PublishDataType>(path: T, callback: (err: string) => boolean) {\r\n        this.webSocket.unsubscribeError(path, callback);\r\n    }\r\n\r\n    public blockDisconnectionMessage() {\r\n        this.webSocket.blockDisconnectedMessage = true;\r\n    }\r\n\r\n    public startConnecting() {\r\n        return this.webSocket.connect();\r\n    }\r\n\r\n    public async login(Token: string, PlatformsID: number, WalletTypesID: number, EntryTable: boolean) {\r\n        const result = this.webSocket.send(PathName.Login, {\r\n            Token,\r\n            PlatformsID,\r\n            WalletTypesID,\r\n            EntryTable,\r\n        });\r\n        this.webSocket.cryptKey = Token;\r\n        result.then(() => {\r\n            this.webSocket.keepAlive();\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public getTableStatus() {\r\n        return this.webSocket.send(PathName.Refresh);\r\n    }\r\n\r\n\r\n    public onMoneyNotEnough()\r\n    {\r\n        if (!PlayerInfo.getInstance().isNotEnoughMsgExist)\r\n        {\r\n            this.webSocket.onMoneyNotEnough();\r\n        }\r\n    }\r\n}\r\n","import { error } from 'cc';\r\nimport CryptoJS from 'crypto-js';\r\n\r\n/**\r\n * 加解密工具\r\n */\r\nexport default class Cryptor {\r\n    private _key: string = '';\r\n    private _backupKey: string = '';\r\n\r\n    public set key(rawKey: string) {\r\n        this._backupKey = this._key;\r\n        this._key = rawKey.repeat(Math.ceil(this.validKeyLength / rawKey.length)).substring(0, this.validKeyLength);\r\n    }\r\n\r\n    constructor(key: string, private validKeyLength: number) {\r\n        this.key = key;\r\n    }\r\n\r\n    public encrypt(plainText: string): string {\r\n        return CryptoJS.AES.encrypt(plainText, CryptoJS.enc.Utf8.parse(this._key), {\r\n            mode: CryptoJS.mode.ECB,\r\n            padding: CryptoJS.pad.Pkcs7,\r\n        }).toString();\r\n    }\r\n\r\n    public decrypt(cipherText: string): string {\r\n        let plainText: string = '';\r\n        try {\r\n            plainText = CryptoJS.AES.decrypt(cipherText, CryptoJS.enc.Utf8.parse(this._key), {\r\n                mode: CryptoJS.mode.ECB,\r\n                padding: CryptoJS.pad.Pkcs7,\r\n            }).toString(CryptoJS.enc.Utf8);\r\n        } catch (err: any) {\r\n            error(err);\r\n        }\r\n\r\n        // use backup key\r\n        if (plainText === '') {\r\n            plainText = CryptoJS.AES.decrypt(cipherText, CryptoJS.enc.Utf8.parse(this._backupKey), {\r\n                mode: CryptoJS.mode.ECB,\r\n                padding: CryptoJS.pad.Pkcs7,\r\n            }).toString(CryptoJS.enc.Utf8);\r\n        }\r\n        return plainText;\r\n    }\r\n\r\n    public getSHA256Hash(text: string): string {\r\n        return CryptoJS.SHA256(text).toString();\r\n    }\r\n}\r\n","// eslint-disable-next-line max-classes-per-file\r\nimport { Button, Vec3, _decorator, __private } from 'cc';\r\nimport { EDITOR } from 'cc/env';\r\nimport HSLSprite from './HSLSprite';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CustomButtonStatus')\r\nclass CustomButtonStatus {\r\n    @property(Vec3)\r\n    hsl = Vec3.ZERO.clone();\r\n    @property(Vec3)\r\n    scale = Vec3.ONE.clone();\r\n\r\n    constructor();\r\n    constructor(hsl?: Vec3, scale?: Vec3);\r\n    constructor(hsl?: Vec3, scale?: Vec3) {\r\n        this.hsl = hsl ?? Vec3.ZERO.clone();\r\n        this.scale = scale ?? Vec3.ONE.clone();\r\n    }\r\n\r\n    public equal(status: CustomButtonStatus) {\r\n        return this.hsl.equals(status.hsl) && this.scale.equals(status.scale);\r\n    }\r\n\r\n    public static lerp(out: CustomButtonStatus, from: CustomButtonStatus, to: CustomButtonStatus, ratio: number): void {\r\n        Vec3.lerp(out.hsl, from.hsl, to.hsl, ratio);\r\n        Vec3.lerp(out.scale, from.scale, to.scale, ratio);\r\n    }\r\n}\r\n\r\nconst tempStatus = new CustomButtonStatus();\r\n\r\n@ccclass('CustomButton')\r\nexport default class CustomButton extends Button {\r\n    @property(CustomButtonStatus)\r\n    private _normalStatus: CustomButtonStatus = new CustomButtonStatus();\r\n\r\n    @property(CustomButtonStatus)\r\n    private _pressedStatus: CustomButtonStatus = new CustomButtonStatus();\r\n\r\n    @property(CustomButtonStatus)\r\n    private _hoverStatus: CustomButtonStatus = new CustomButtonStatus();\r\n\r\n    @property(CustomButtonStatus)\r\n    private _disabledStatus: CustomButtonStatus = new CustomButtonStatus();\r\n\r\n    @property\r\n    get transitionDuration() {\r\n        return this._duration;\r\n    }\r\n    set transitionDuration(value) {\r\n        if (this._duration === value) {\r\n            return;\r\n        }\r\n        this._duration = value;\r\n    }\r\n\r\n    @property({ override: true, visible: false })\r\n    public set transition(_: __private._cocos_ui_button__Transition) {}\r\n    public get transition() {\r\n        return this._transition;\r\n    }\r\n\r\n    @property(CustomButtonStatus)\r\n    public get normalStatus() {\r\n        return this._normalStatus;\r\n    }\r\n    public set normalStatus(value: CustomButtonStatus) {\r\n        if (this._normalStatus?.equal(value)) {\r\n            return;\r\n        }\r\n        this._normalStatus = value;\r\n        this._updateState();\r\n    }\r\n\r\n    @property(CustomButtonStatus)\r\n    public get pressedStatus(): CustomButtonStatus {\r\n        return this._pressedStatus;\r\n    }\r\n    public set pressedStatus(value: CustomButtonStatus) {\r\n        if (this._pressedStatus.equal(value)) {\r\n            return;\r\n        }\r\n        this._pressedStatus = value;\r\n    }\r\n\r\n    @property(CustomButtonStatus)\r\n    public get hoverStatus(): CustomButtonStatus {\r\n        return this._hoverStatus;\r\n    }\r\n    public set hoverStatus(value: CustomButtonStatus) {\r\n        if (this._hoverStatus.equal(value)) {\r\n            return;\r\n        }\r\n        this._hoverStatus = value;\r\n    }\r\n\r\n    @property(CustomButtonStatus)\r\n    public get disabledStatus(): CustomButtonStatus {\r\n        return this._disabledStatus;\r\n    }\r\n    public set disabledStatus(value: CustomButtonStatus) {\r\n        if (this._disabledStatus.equal(value)) {\r\n            return;\r\n        }\r\n        this._disabledStatus = value;\r\n        this._updateState();\r\n    }\r\n\r\n    private _hslSprite: HSLSprite = null;\r\n\r\n    private _transitionFinished = true;\r\n    private _time = 0;\r\n    private _pressed = false;\r\n    private _hovered = false;\r\n    private _fromStatus: CustomButtonStatus = new CustomButtonStatus();\r\n    private _toStatus: CustomButtonStatus = new CustomButtonStatus();\r\n\r\n    get interactable() {\r\n        return this._interactable;\r\n    }\r\n\r\n    set interactable(value) {\r\n        this._interactable = value;\r\n        this._updateState();\r\n\r\n        if (!this._interactable) {\r\n            this._pressed = false;\r\n            this._hovered = false;\r\n        }\r\n    }\r\n\r\n    public update(dt: number) {\r\n        if (this._transitionFinished || !this.target || this._fromStatus.equal(this._toStatus)) {\r\n            return;\r\n        }\r\n        const hslAdjustor = this.target.getComponent(HSLSprite);\r\n        if (!hslAdjustor) {\r\n            return;\r\n        }\r\n\r\n        this._time += dt;\r\n        let ratio = 1.0;\r\n        if (this._duration > 0) {\r\n            ratio = this._time / this._duration;\r\n        }\r\n\r\n        if (ratio >= 1) {\r\n            ratio = 1;\r\n        }\r\n\r\n        CustomButtonStatus.lerp(tempStatus, this._fromStatus, this._toStatus, ratio);\r\n        this.applyButtonStatus(tempStatus);\r\n\r\n        if (ratio === 1) {\r\n            this._transitionFinished = true;\r\n        }\r\n    }\r\n\r\n    protected _applyTarget() {\r\n        if (this.target) {\r\n            super._applyTarget();\r\n            this._hslSprite = this.target.getComponent(HSLSprite);\r\n        }\r\n    }\r\n\r\n    protected _resetState() {\r\n        super._resetState();\r\n        this.applyButtonStatus(this._interactable ? this._normalStatus : this._disabledStatus);\r\n    }\r\n\r\n    protected _applyTransition(state: string) {\r\n        this._updateCustomTransition(state);\r\n    }\r\n\r\n    protected _updateCustomTransition(state: string) {\r\n        if (!this._hslSprite) {\r\n            return;\r\n        }\r\n\r\n        if (EDITOR) {\r\n            this.applyButtonStatus(this[`${state}Status`]);\r\n        } else {\r\n            this._fromStatus = new CustomButtonStatus(this._hslSprite.hsl, this.target.getScale());\r\n            this._toStatus = this[`${state}Status`];\r\n            this._time = 0;\r\n            this._transitionFinished = false;\r\n        }\r\n    }\r\n\r\n    private applyButtonStatus(status: CustomButtonStatus) {\r\n        if (!this.target) {\r\n            return;\r\n        }\r\n        if (!this._hslSprite) {\r\n            return;\r\n        }\r\n\r\n        // HSL\r\n        this._hslSprite.hsl = status.hsl;\r\n\r\n        // scale\r\n        this.target.setScale(status.scale);\r\n    }\r\n}\r\n","export enum DebugMode \r\n{\r\n    None,\r\n    SpecifyWinOrLose,\r\n    SpecifyResult,\r\n}\r\n\r\nexport class DebugRequestData\r\n{\r\n    Mode: DebugMode;\r\n    Rank: number;\r\n    Win: boolean;\r\n};\r\n","import { Component } from 'cc';\r\n\r\nnamespace Delay {\r\n    const component = new Component();\r\n    /**\r\n     * 過了特定時間後，會 fullfill的 promise\r\n     * @param millisecond 指定時間\r\n     */\r\n    export function resolve(millisecond: number): Promise<void> {\r\n        return new Promise<void>((resolveFunc) => {\r\n            component.scheduleOnce(() => {\r\n                resolveFunc();\r\n            }, millisecond / 1000);\r\n        });\r\n    }\r\n    /**\r\n     * 過了特定時間後，會 reject並且回傳指定錯誤原因的 promise\r\n     * @param millisecond 指定時間\r\n     * @param reason 指定錯誤原因\r\n     * @returns\r\n     */\r\n    export function reject<T>(millisecond: number, reason: any): Promise<T> {\r\n        return new Promise<T>((_, rejectFunc) => {\r\n            component.scheduleOnce(() => rejectFunc(reason), millisecond / 1000);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 過了特定時間後，會 fullfill並且回傳指定值的 promise\r\n     * @param millisecond 指定時間\r\n     * @param resolveValue 指定回傳值\r\n     * @returns\r\n     */\r\n    export function value<T>(millisecond: number, resolveValue: T): Promise<T> {\r\n        return new Promise<T>((resolveFunc) => {\r\n            component.scheduleOnce(() => resolveFunc(resolveValue), millisecond / 1000);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 永遠不會 fullfill的 promise\r\n     */\r\n    export function forever(): Promise<never> {\r\n        return new Promise<never>(() => {});\r\n    }\r\n}\r\n\r\nexport default Delay;\r\n","import { StartUp } from \"../StartUp\";\r\nimport { PlayerInfo } from \"../PlayerInfo\";\r\n\r\nexport default class DenomConverter {\r\n    public static valueToDollar(value: number) {\r\n        return value / PlayerInfo.getInstance().getDenom();\r\n    }\r\n}\r\n","import { Button, _decorator } from 'cc';\r\nimport Page from './Page';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum DialogEventType {\r\n    Confirm = 'Confirm',\r\n    Cancel = 'Cancel',\r\n}\r\n\r\n@ccclass('Dialog')\r\nexport default class Dialog extends Page {\r\n    public static readonly EventType = Object.assign(DialogEventType, Page.EventType);\r\n\r\n    @property(Button)\r\n    public readonly confirmButton: Button = null;\r\n\r\n    @property(Button)\r\n    public readonly cancelButton: Button = null;\r\n\r\n    @property\r\n    private readonly closeOnConfirm = true;\r\n\r\n    @property\r\n    private readonly closeOnCancel = true;\r\n\r\n    protected onLoad(): void {\r\n        super.onLoad();\r\n        this.confirmButton.node.on(Button.EventType.CLICK, () => {\r\n            this.onConfirmButtonClick();\r\n        });\r\n        this.cancelButton?.node.on(Button.EventType.CLICK, () => {\r\n            this.onCancelButtonClick();\r\n        });\r\n    }\r\n\r\n    public waitForComfirm() {\r\n        return new Promise((resolve) => {\r\n            this.node.once(Dialog.EventType.Confirm, resolve);\r\n        });\r\n    }\r\n\r\n    public waitForCancel() {\r\n        return new Promise((resolve) => {\r\n            this.node.once(Dialog.EventType.Cancel, resolve);\r\n        });\r\n    }\r\n\r\n    protected onConfirmButtonClick() {\r\n        this.node.emit(Dialog.EventType.Confirm);\r\n        if (this.closeOnConfirm) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    protected onCancelButtonClick() {\r\n        this.node.emit(Dialog.EventType.Cancel);\r\n        if (this.closeOnCancel) {\r\n            this.close();\r\n        }\r\n    }\r\n}\r\n","import { error, log, sys } from 'cc';\r\nimport Cryptor from './Cryptor';\r\nimport ErrorHandler from '../../ErrorHandler/ErrorHandler';\r\nimport { PathName, PublishDataType, RequestResponseDataType } from '../../Data/Config/path.config';\r\nimport { CustomErrorName } from '../../ErrorHandler/Config/error.config';\r\nimport Delay from '../../Toolkit/Utils/Delay';\r\n\r\n/** Native websocket with additional functionalities\r\n * 1. request/response simulation (with type)\r\n * 2. subscribe/unsubscribe to specific path\r\n * 3. auto reconnection\r\n * 4. timeout tracking\r\n * */\r\nexport default class EnhancedWebSocket {\r\n    public static readonly DEFAULT_TIMEOUT = 10000;\r\n    public static readonly DEFAULT_DELAY = 500;\r\n    private static readonly KEEP_ALIVE_INTERVAL = 1000;\r\n\r\n    private websocket: WebSocket = null;\r\n    private messageDispatcher: {\r\n        [path in keyof RequestResponseDataType]?: [(message: RequestResponseDataType[path][1]) => void, (reason?: any) => void][];\r\n    } = {};\r\n    private messageBroadcaster: {\r\n        [path in keyof PublishDataType]?: ((message: PublishDataType[path]) => void)[];\r\n    } = {};\r\n    private errorBoardcaster: {\r\n        [path in keyof PublishDataType]?: ((error: string) => boolean)[];\r\n    } = {};\r\n    private readonly needEncrypt: boolean = false;\r\n    private expectedErrorMessages: {\r\n        [path in keyof PublishDataType]?: string[];\r\n    } = {};\r\n\r\n    // callback\r\n    public onDisconnected: () => void = null;\r\n\r\n    private previousDelays: number[] = [];\r\n\r\n    public blockDisconnectedMessage: boolean = false;\r\n\r\n    public set cryptKey(key: string) {\r\n        if (!this.cryptor) {\r\n            return;\r\n        }\r\n        this.cryptor.key = key;\r\n    }\r\n\r\n    public get averageDelay() {\r\n        if (!this.previousDelays.length) {\r\n            return EnhancedWebSocket.DEFAULT_DELAY;\r\n        }\r\n        return this.previousDelays.reduce((pre, cur) => pre + cur, 0) / this.previousDelays.length;\r\n    }\r\n\r\n    constructor(private readonly url: string | URL, private readonly cryptor: Cryptor) {\r\n        this.needEncrypt = !!cryptor;\r\n    }\r\n\r\n    public setExceptedErrorMessages<T extends keyof PublishDataType>(path: T, errorMessages: string[]) {\r\n        this.expectedErrorMessages[path] = errorMessages;\r\n    }\r\n\r\n    public connect() {\r\n        let connectSuccessfully = false;\r\n        this.websocket = new WebSocket(this.url);\r\n        const connectionPromise = new Promise<void>((resolve) => {\r\n            this.websocket.onopen = () => {\r\n                connectSuccessfully = true;\r\n                log('Connection start successfully');\r\n                resolve();\r\n            };\r\n        });\r\n        this.websocket.onmessage = (event: MessageEvent) => {\r\n            const receiveData = JSON.parse(event.data);\r\n            const decryptData: {\r\n                Path: PathName;\r\n                Data: any;\r\n                Err: string;\r\n            } = receiveData instanceof Object ? receiveData : JSON.parse(this.cryptor.decrypt(receiveData));\r\n            const { Path, Data, Err } = decryptData;\r\n\r\n            if (Err) {\r\n                const reject: (reason?: any) => void = this.messageDispatcher[Path]?.shift()?.[1];\r\n                if (reject) {\r\n                    reject(Err);\r\n                } else if (this.expectedErrorMessages[Path]?.includes(Err)) {\r\n                    if (this.errorBoardcaster[Path]?.every((notify: (error: string) => boolean) => !notify(Err))) {\r\n                        this.handleCustomError(new Error(Err));\r\n                    }\r\n                } else {\r\n                    this.handleCustomError(new Error(Err));\r\n                }\r\n                return;\r\n            }\r\n            // response\r\n            this.messageDispatcher[Path]?.shift()?.[0](Data);\r\n            // boardcast\r\n            this.messageBroadcaster[Path]?.forEach((notify) => notify(Data));\r\n        };\r\n        this.websocket.onerror = error;\r\n        this.websocket.onclose = async () => {\r\n            if (!connectSuccessfully)\r\n            {\r\n                this.showDisconnectMsg();\r\n            }\r\n            this.informNetworkDisconnecting();\r\n            log('Connection closed');\r\n        };\r\n        return connectionPromise;\r\n    }\r\n\r\n    /**\r\n     * 發送請求並等待回傳資料\r\n     * @param path 路徑\r\n     * @param postData 指定路徑的附帶資訊\r\n     * @param expectedErrorMessages 預期會有的錯誤訊息\r\n     * @param timeout 等待server回應最大容忍時間, -1 表示不使用timeout機制\r\n     * @returns 指定路徑的回傳資料\r\n     */\r\n    public async send<T extends keyof RequestResponseDataType>(\r\n        path: T,\r\n        postData?: RequestResponseDataType[T][0],\r\n        expectedErrorMessages: CustomErrorName[] = [],\r\n        timeout = EnhancedWebSocket.DEFAULT_TIMEOUT\r\n    ): Promise<RequestResponseDataType[T][1]> {\r\n        if (timeout < 0 && timeout !== -1) {\r\n            throw new Error('Invalid timeout');\r\n        }\r\n        // 連線狀態為開啟才能傳送訊息\r\n        if (this.websocket.readyState !== WebSocket.OPEN) {\r\n            if (!this.blockDisconnectedMessage) \r\n            {\r\n                this.showDisconnectMsg();\r\n            }\r\n            return Delay.forever();\r\n        }\r\n        const result = Object.assign({ Path: path }, postData ? { Data: postData } : {});\r\n        const encryptResult = this.needEncrypt ? this.cryptor.encrypt(JSON.stringify(result)) : result;\r\n        this.websocket.send(JSON.stringify(encryptResult));\r\n\r\n        return Promise.race([\r\n            new Promise<RequestResponseDataType[T][1]>((resolve, reject) => {\r\n                const dispatcher = this.messageDispatcher[path] || (this.messageDispatcher[path] = []);\r\n                dispatcher.push([resolve, reject]);\r\n            }),\r\n            timeout === -1 ? Delay.forever() : Delay.reject<RequestResponseDataType[T][1]>(timeout, CustomErrorName.TIMEOUT),\r\n        ]).catch((reason) => {\r\n            if (expectedErrorMessages.includes(reason)) {\r\n                throw reason;\r\n            }\r\n            if (reason === CustomErrorName.TIMEOUT) {\r\n                error(`timeout at path ${path}`);\r\n                if (!this.blockDisconnectedMessage) \r\n                {\r\n                    this.showDisconnectMsg();\r\n                }\r\n            } else {\r\n                this.handleCustomError(reason);\r\n            }\r\n            return Delay.forever();\r\n        });\r\n    }\r\n\r\n    private showDisconnectMsg()\r\n    {\r\n        const isIos: boolean = sys.os == sys.OS.IOS;\r\n        const errorMsg: string = isIos ? CustomErrorName.OPERATE_TIMEOUT : CustomErrorName.CONNECTION_FAILED;\r\n        this.handleCustomError(errorMsg);\r\n    }\r\n\r\n    public onMoneyNotEnough()\r\n    {\r\n        this.handleCustomError(\"insufficient balance\");\r\n    }\r\n\r\n    /**\r\n     * 訂閱特定路徑的資料\r\n     * @param path 路徑\r\n     * @param notify 通知資料送達用的 callback\r\n     */\r\n    public subscribe<T extends keyof PublishDataType>(path: T, notify: (data: PublishDataType[T]) => void) {\r\n        let subscriberQueue = this.messageBroadcaster[path];\r\n        if (!subscriberQueue) {\r\n            subscriberQueue = [];\r\n            this.messageBroadcaster[path] = subscriberQueue;\r\n        }\r\n        subscriberQueue.push(notify);\r\n    }\r\n\r\n    /**\r\n     * 取消訂閱特定路徑的資料\r\n     * @param path 路徑\r\n     * @param notify 通知資料送達用的 callback\r\n     */\r\n    public unsubscribe<T extends keyof PublishDataType>(path: T, notify: (data: PublishDataType[T]) => void) {\r\n        let subscriberQueue = this.messageBroadcaster[path];\r\n        if (!subscriberQueue) {\r\n            subscriberQueue = [];\r\n            this.messageBroadcaster[path] = subscriberQueue;\r\n        }\r\n        const handlerIndex = subscriberQueue.findIndex((subscriber) => subscriber === notify);\r\n        if (handlerIndex !== -1) {\r\n            subscriberQueue.splice(handlerIndex, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 訂閱特定路徑的資料\r\n     * @param path 路徑\r\n     * @param notify 通知資料送達用的 callback\r\n     */\r\n    public subscribeError<T extends keyof PublishDataType>(path: T, notify: (errorMessage: string) => boolean) {\r\n        let subscriberQueue = this.errorBoardcaster[path];\r\n        if (!subscriberQueue) {\r\n            subscriberQueue = [];\r\n            this.errorBoardcaster[path] = subscriberQueue;\r\n        }\r\n        subscriberQueue.push(notify);\r\n    }\r\n\r\n    /**\r\n     * 取消訂閱特定路徑的資料\r\n     * @param path 路徑\r\n     * @param notify 通知資料送達用的 callback\r\n     */\r\n    public unsubscribeError<T extends keyof PublishDataType>(path: T, notify: (errorMessage: string) => boolean) {\r\n        let subscriberQueue = this.errorBoardcaster[path];\r\n        if (!subscriberQueue) {\r\n            subscriberQueue = [];\r\n            this.errorBoardcaster[path] = subscriberQueue;\r\n        }\r\n        const handlerIndex = subscriberQueue.findIndex((subscriber) => subscriber === notify);\r\n        if (handlerIndex !== -1) {\r\n            subscriberQueue.splice(handlerIndex, 1);\r\n        }\r\n    }\r\n\r\n    public async keepAlive() {\r\n        const requestTime = Date.now();\r\n        await this.send(PathName.Ack, undefined, [], EnhancedWebSocket.DEFAULT_TIMEOUT + this.averageDelay);\r\n        this.previousDelays.push(Date.now() - requestTime);\r\n        if (this.previousDelays.length > 5) {\r\n            this.previousDelays.shift();\r\n        }\r\n        await Delay.resolve(EnhancedWebSocket.KEEP_ALIVE_INTERVAL);\r\n        this.keepAlive();\r\n    }\r\n\r\n    private informNetworkDisconnecting() {\r\n        this.onDisconnected?.();\r\n        this.onDisconnected = null;\r\n    }\r\n\r\n    /**\r\n     * try to handle error, if error is fatal then close the connection\r\n     * @param err error object\r\n     */\r\n    private handleCustomError(err: Error): void;\r\n    /**\r\n     * try to handle error, if error is fatal then close the connection\r\n     * @param message  error message\r\n     */\r\n    private handleCustomError(message: string): void;\r\n    private handleCustomError(arg: Error | string) {\r\n        if (arg instanceof Error && ErrorHandler.Instance.handle(arg)) {\r\n            return;\r\n        }\r\n        if (typeof arg === 'string' && ErrorHandler.Instance.handle(arg)) {\r\n            return;\r\n        }\r\n        if (this.websocket.readyState === WebSocket.CLOSED || this.websocket.readyState === WebSocket.CLOSING) {\r\n            return;\r\n        }\r\n        this.websocket.close();\r\n        // onclose event will not be triggered immediately so here informNetworkDisconnecting is invoked manually\r\n        this.informNetworkDisconnecting();\r\n    }\r\n}\r\n","export namespace ErrorUtils {\r\n    export function findErrorBy(name: string): ICustomError;\r\n    export function findErrorBy(code: number): ICustomError;\r\n    export function findErrorBy(arg: string | number): ICustomError {\r\n        if (typeof arg === 'number') {\r\n            return errorList.find((error) => error.code === arg);\r\n        }\r\n        return errorList.find((error) => error.name === arg);\r\n    }\r\n}\r\n\r\nexport enum CustomErrorName {\r\n    OPERATE_TIMEOUT = 'operate timeout',\r\n    CONNECTION_TIMEOUT = 'connection timeout',\r\n    FRONT_END_ERROR = 'front end error',\r\n    CONNECTION_FAILED = 'connection failed',\r\n    LOADING_FAILED = 'loading failed',\r\n    TIMEOUT = 'connection timeout',\r\n    GAME_PAUSE = '遊戲暫停',\r\n    ROUND_CANCEL = '該局取消',\r\n\r\n    BET_LIMIT_EXCEED = 'bet exceed bet limit',\r\n    TABLE_LIMIT_EXCEED = 'bet exceed table limit',\r\n    INSUFFICIENT_BALANCE = 'insufficient balance',\r\n    TABLE_IS_FULL = 'table is full',\r\n}\r\n\r\ntype ICustomError = {\r\n    name: string;\r\n    code: number;\r\n    type: 'GameState' | 'Fatal' | 'Hint' | 'Ignore';\r\n};\r\n\r\nconst errorList: ICustomError[] = [\r\n    // front end\r\n    {\r\n        name: CustomErrorName.FRONT_END_ERROR,\r\n        code: 1000,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: CustomErrorName.CONNECTION_FAILED,\r\n        code: 1001,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: CustomErrorName.LOADING_FAILED,\r\n        code: 1002,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: CustomErrorName.OPERATE_TIMEOUT,\r\n        code: 1003,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: CustomErrorName.GAME_PAUSE,\r\n        code: 1098,\r\n        type: 'GameState',\r\n    },\r\n    {\r\n        name: CustomErrorName.ROUND_CANCEL,\r\n        code: 1099,\r\n        type: 'Hint',\r\n    },\r\n    // common\r\n    {\r\n        name: 'authorization failed',\r\n        code: 2001,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'update betting failed',\r\n        code: 2002,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'no table found',\r\n        code: 2003,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'hall not found',\r\n        code: 2004,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'table is full',\r\n        code: 2005,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'client already exist',\r\n        code: 2006,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'table is not empty',\r\n        code: 2007,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'entry table failed',\r\n        code: 2008,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'player already in the table',\r\n        code: 2009,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'operate not allow',\r\n        code: 2010,\r\n        type: 'Ignore',\r\n    },\r\n    {\r\n        name: CustomErrorName.INSUFFICIENT_BALANCE,\r\n        code: 2011,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'client not exist',\r\n        code: 2012,\r\n        type: 'Ignore',\r\n    },\r\n    {\r\n        name: 'table is closed',\r\n        code: 2013,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'client is closing',\r\n        code: 2014,\r\n        type: 'Ignore',\r\n    },\r\n    {\r\n        name: 'client is closed',\r\n        code: 2015,\r\n        type: 'Ignore',\r\n    },\r\n    {\r\n        name: 'client message chan is full',\r\n        code: 2016,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'serialize data failed',\r\n        code: 2017,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'parse body failed',\r\n        code: 2018,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'validate body failed',\r\n        code: 2019,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'internal server error',\r\n        code: 2020,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'during game maintenance',\r\n        code: 2021,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'call backend error',\r\n        code: 2022,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'request should be encrypted',\r\n        code: 2023,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'wrong token, please login again',\r\n        code: 2024,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'game not found',\r\n        code: 2025,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'parse json error',\r\n        code: 2026,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'redis internal error',\r\n        code: 2027,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'operate not allow',\r\n        code: 2028,\r\n        type: 'Fatal',\r\n    },\r\n    // error code\r\n    {\r\n        name: '3000',\r\n        code: 3301,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '3001',\r\n        code: 3302,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: '3002',\r\n        code: 3303,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '3003',\r\n        code: 3304,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '4000',\r\n        code: 3305,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '4001',\r\n        code: 3306,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '4002',\r\n        code: 3307,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '4006',\r\n        code: 3308,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '5000',\r\n        code: 3309,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '5001',\r\n        code: 3310,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: '-1000',\r\n        code: 3311,\r\n        type: 'Ignore',\r\n    },\r\n    {\r\n        name: 'idle for too long',\r\n        code: null,\r\n        type: 'Fatal',\r\n    },\r\n    // sicbo\r\n    {\r\n        name: 'dice shaker operator error',\r\n        code: 2100,\r\n        type: 'GameState',\r\n    },\r\n    {\r\n        name: 'dice shaker query error',\r\n        code: 2101,\r\n        type: 'GameState',\r\n    },\r\n    {\r\n        name: 'config incompatible for game',\r\n        code: 2102,\r\n        type: 'Fatal',\r\n    },\r\n    {\r\n        name: 'banker not found in the queue',\r\n        code: 2103,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'dice results are not available',\r\n        code: 2108,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: 'game stopped',\r\n        code: 2109,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: CustomErrorName.BET_LIMIT_EXCEED,\r\n        code: 2110,\r\n        type: 'Hint',\r\n    },\r\n    {\r\n        name: CustomErrorName.TABLE_LIMIT_EXCEED,\r\n        code: 2111,\r\n        type: 'Hint',\r\n    },\r\n];\r\n","import { error } from 'cc';\r\nimport { StartUp } from '../Game/StartUp';\r\nimport { CustomErrorName, ErrorUtils } from './Config/error.config';\r\n\r\nexport default class ErrorHandler {\r\n    private static instance: ErrorHandler = null;\r\n\r\n    public static get Instance() {\r\n        if (!this.instance) {\r\n            this.instance = new ErrorHandler();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    private constructor() {\r\n        window.addEventListener('error', (event) => {\r\n            error(event.message);\r\n            this.handle(CustomErrorName.FRONT_END_ERROR);\r\n        });\r\n    }\r\n\r\n    public handle(error: Error): boolean;\r\n    public handle(errorMessage: string): boolean;\r\n    public handle(arg: Error | string): boolean {\r\n        const message = arg instanceof Error ? arg.message : arg;\r\n        const customError = ErrorUtils.findErrorBy(message);\r\n        if (!customError) {\r\n            // Game.Instance.message.showFatalError(message);\r\n            error(`Unknown error: ${message}`);\r\n            return false;\r\n        }\r\n        switch (customError.type) {\r\n            case 'GameState':\r\n                StartUp.getInstance().message.showGameStateError(customError.name);\r\n                return true;\r\n            case 'Hint':\r\n                StartUp.getInstance().message.showHint(customError.name);\r\n                return true;\r\n            case 'Ignore':\r\n                return true;\r\n            default:\r\n                StartUp.getInstance().message.showFatalError(customError.name);\r\n                return false;\r\n        }\r\n    }\r\n}\r\n","import { SupportLanguage } from './support.config';\r\n\r\nexport const fallbackLanguages: { [language: string]: SupportLanguage } = {\r\n    en: SupportLanguage.EN,\r\n    'en-US': SupportLanguage.EN,\r\n    'en-EG': SupportLanguage.EN,\r\n    'en-AU': SupportLanguage.EN,\r\n    'en-GB': SupportLanguage.EN,\r\n    'en-CA': SupportLanguage.EN,\r\n    'en-NZ': SupportLanguage.EN,\r\n    'en-IE': SupportLanguage.EN,\r\n    'en-ZA': SupportLanguage.EN,\r\n    'en-JM': SupportLanguage.EN,\r\n    'en-BZ': SupportLanguage.EN,\r\n    'en-TT': SupportLanguage.EN,\r\n    sch: SupportLanguage.EN,\r\n    tch: SupportLanguage.EN,\r\n    tha: SupportLanguage.EN,\r\n    'zh-CN': SupportLanguage.SCH,\r\n    'zh-SG': SupportLanguage.SCH,\r\n    'zh-chs': SupportLanguage.SCH,\r\n    cn: SupportLanguage.SCH,\r\n    'zh-TW': SupportLanguage.TCH,\r\n    'zh-HK': SupportLanguage.TCH,\r\n    'zh-MO': SupportLanguage.TCH,\r\n    'zh-cht': SupportLanguage.TCH,\r\n    tw: SupportLanguage.TCH,\r\n};\r\n","import { _decorator, Component, Node, Canvas, screen, sys } from 'cc';\r\n\r\nconst { ccclass, requireComponent } = _decorator;\r\n\r\n@ccclass('FullScreenController')\r\n@requireComponent(Canvas)\r\nexport class FullScreenController extends Component {\r\n    protected onLoad() {\r\n        if (!sys.isMobile) {\r\n            return;\r\n        }\r\n        this.node.on(\r\n            Node.EventType.TOUCH_END,\r\n            () => {\r\n                if (!screen.fullScreen()) {\r\n                    screen.requestFullScreen();\r\n                }\r\n            },\r\n            this,\r\n            true\r\n        );\r\n    }\r\n}\r\n","export const HexColorCode = {\r\n    'Red': 'BB0000',\r\n    'Orange': 'FFA800',\r\n    'Yellow': 'FBCB14',\r\n    'White': 'FFFFFF',\r\n    'Brown': '705B12',\r\n    'Black': '000000',\r\n}","export class CashoutData\r\n{\r\n    Bet: number;\r\n    Multiplier: number;\r\n    PlayerID: number;\r\n    Wager: number;\r\n};\r\n\r\nexport class CashoutRequestData\r\n{\r\n    Wager: number;\r\n};\r\n\r\nexport class CashoutResponseData\r\n{\r\n    Multiplier: number;\r\n    Cards: Array<number>;\r\n    Wagers: Array<number>;\r\n    Payouts: Array<number>;\r\n    TotalBet: number;\r\n    TotalWin: number;\r\n    Balance: number;\r\n};\r\n\r\nexport class SkipRequestData\r\n{\r\n};\r\n\r\nexport class SkipResponseData\r\n{\r\n    Balance: number;\r\n    Card: number;\r\n    Probability: Probability;\r\n    Multiplier: number;\r\n    Secret: string;\r\n    Hash: string;\r\n    NextHash: string;\r\n};\r\n\r\nexport class Probability\r\n{\r\n    property1: number;\r\n    property2: number;\r\n};\r\n","import { Label, Color, labelAssembler, _decorator } from 'cc';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GradientLabel')\r\nexport class GradientLabel extends Label {\r\n    @property({ type: [Color] })\r\n    private _colors: Color[] = [];\r\n\r\n    @property({ type: [Color] })\r\n    public get colors(): Color[] {\r\n        return this._colors;\r\n    }\r\n    public set colors(value: Color[]) {\r\n        this._colors = value;\r\n    }\r\n\r\n    protected _flushAssembler() {\r\n        let assembler = Label.Assembler.getAssembler(this);\r\n\r\n        if (assembler === ttfAssembler) {\r\n            assembler = gradientAssembler;\r\n        }\r\n\r\n        if (this._assembler !== assembler) {\r\n            this.destroyRenderData();\r\n            this._assembler = assembler;\r\n        }\r\n\r\n        if (!this._renderData) {\r\n            if (this._assembler && this._assembler.createData) {\r\n                this._renderData = this._assembler.createData(this);\r\n                this._renderData!.material = this.material;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst ttfAssembler = labelAssembler.getAssembler(Label.prototype);\r\nconst gradientAssembler = Object.create(ttfAssembler);\r\ngradientAssembler.fillBuffers = function fillBuffers(comp: GradientLabel) {\r\n    ttfAssembler.fillBuffers.call(gradientAssembler, comp);\r\n    const { renderData } = comp;\r\n    const vData = renderData.chunk.vb;\r\n    for (let colorOffset = 5, i = 0; i < 4; i++, colorOffset += renderData.floatStride) {\r\n        const color = comp.colors[i] || comp.color;\r\n        const colorR = color.r / 255;\r\n        const colorG = color.g / 255;\r\n        const colorB = color.b / 255;\r\n        const colorA = comp.node._uiProps.opacity;\r\n        vData![colorOffset] = colorR;\r\n        vData![colorOffset + 1] = colorG;\r\n        vData![colorOffset + 2] = colorB;\r\n        vData![colorOffset + 3] = colorA;\r\n    }\r\n};\r\n","import { Button } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloBetSettingManager } from \"./HiloBetSettingManager\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport NumberFormatter from \"../../../Toolkit/Components/NumberFormatter\";\r\nimport { HiloButtonManager } from \"../UI/HiloButtonManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass(\"HiloBetSettingItem\")\r\nexport class HiloBetSettingItem extends Component \r\n{\r\n    @property(NumberFormatter)\r\n    private valueTxt: NumberFormatter = null;\r\n    @property(Button)\r\n    private btn: Button = null;\r\n\r\n    private betValue: number = 0;\r\n    private betIndex: number = 0;\r\n\r\n    protected start() \r\n    {\r\n        this.btn.node.on(Button.EventType.CLICK, this.onBtnBetValue.bind(this));\r\n    }\r\n\r\n    private onBtnBetValue() \r\n    {\r\n        HiloBetSettingManager.getInstance().closeBetSetting();\r\n        HiloGameData.getInstance().setCurrentBetValue(this.betValue);\r\n        HiloGameData.getInstance().setBetIndex(this.betIndex);\r\n        HiloButtonManager.getInstance().updateCurrentBetValue();\r\n        HiloBetSettingManager.getInstance().btnBackDefault();\r\n        this.btn.interactable = false;\r\n    }\r\n\r\n    public setBetValue(index: number, value: number) \r\n    {\r\n        this.valueTxt.value = value;\r\n        this.betIndex = index;\r\n        this.betValue = value;\r\n    }\r\n}\r\n","import { Prefab } from \"cc\";\r\nimport { Button } from \"cc\";\r\nimport { instantiate } from \"cc\";\r\nimport { Node } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { HiloBetSettingItem } from \"./HiloBetSettingItem\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloBetSettingManager')\r\nexport class HiloBetSettingManager extends Component \r\n{\r\n    @property(Prefab)\r\n    private betSettingItem: Prefab = null;\r\n    @property(Node)\r\n    private itemGroup: Node = null;\r\n    @property(Node)\r\n    private mask: Node = null;\r\n\r\n    private static instance: HiloBetSettingManager = null;\r\n    private betItemGroup:Node[] = [];\r\n\r\n    public btnBackDefault() \r\n    {\r\n        this.betItemGroup.map(betItem => \r\n        {\r\n            betItem.getComponent(Button).interactable = true;\r\n        });\r\n    }    \r\n        \r\n    public static getInstance(): HiloBetSettingManager \r\n    {\r\n        return HiloBetSettingManager.instance;\r\n    }\r\n    \r\n    protected start() \r\n    {\r\n        HiloBetSettingManager.instance = this;\r\n        this.node.active = false;\r\n        this.mask.on(Button.EventType.CLICK, this.closeBetSetting.bind(this));\r\n    }\r\n\r\n    public initBetSettingPage()\r\n    {\r\n        let betList: Array<number> = HiloGameData.getInstance().getBetList();\r\n        for (let i: number = 0; i < betList.length; i++)\r\n        {\r\n            this.addBetItem(i, betList[i]);\r\n        }\r\n    }\r\n\r\n    private addBetItem(index: number, value: number)\r\n    {\r\n        let betItem: Node = instantiate(this.betSettingItem);\r\n        betItem.getComponent(HiloBetSettingItem).setBetValue(index, value);\r\n        betItem.setParent(this.itemGroup);\r\n        if (index == HiloGameData.getInstance().getDefaultBetIndex()) \r\n        {\r\n            betItem.getComponent(Button).interactable = false;\r\n        }\r\n        this.betItemGroup.push(betItem);\r\n    }\r\n    \r\n    public openBetSetting()\r\n    {\r\n        this.node.active = true;\r\n    }\r\n\r\n    public closeBetSetting()\r\n    {\r\n        this.node.active = false;\r\n    }\r\n}\r\n","import { Button } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { Sprite } from \"cc\";\r\nimport { SpriteAtlas } from \"cc\";\r\nimport { HiloScoreManager } from \"./HiloScoreManager\";\r\nimport NumberFormatter from \"../../../Toolkit/Components/NumberFormatter\";\r\nimport { StartUp } from \"../../StartUp\";\r\nimport { HiloGameConnection } from \"../HiloGameConnection\";\r\nimport { BetRequestData } from \"../../../Data/DTO/Bet.dto\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport { PlayerInfo } from \"../../PlayerInfo\";\r\nimport { GameState, HiloGameLogic } from \"../HiloGameLogic\";\r\nimport { HiloBetSettingManager } from \"../BetSetting/HiloBetSettingManager\";\r\nimport { HiloPokerTool } from \"../HiloPokerTool\";\r\nimport Application from \"../../../Application/Application\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloButtonManager')\r\nexport class HiloButtonManager extends Component \r\n{\r\n    //system btn\r\n    @property(Button)\r\n    private btnClose: Button = null;\r\n    //game btn\r\n    @property(Button)\r\n    private btnRefresh: Button = null;\r\n    @property(Button)\r\n    private btnHigh: Button = null;\r\n    @property(Button)\r\n    private btnLow: Button = null;\r\n    @property(Button)\r\n    private btnCashOut: Button = null;\r\n    @property(Button)\r\n    private btnNextRound: Button = null;\r\n    @property(Button)\r\n    private btnBet: Button = null;\r\n    @property(Button)\r\n    private btnBetList: Button = null;\r\n    @property(SpriteAtlas)\r\n    private betAtlas: SpriteAtlas = null;\r\n    @property(NumberFormatter)\r\n    private currentBetTxt: NumberFormatter = null;\r\n\r\n    private betBtnSpriteName: string[] = [\"btn_equal\", \"btn_largerthan\", \"btn_lessthan\", \"btn_equalandlargethan\", \"btn_equalandlessthan\"];\r\n\r\n    private static instance: HiloButtonManager = null;\r\n    public static getInstance(): HiloButtonManager \r\n    {\r\n        return HiloButtonManager.instance;\r\n    }\r\n   \r\n    public init()\r\n    {\r\n        this.addBtnEvent();\r\n        this.updateCurrentBetValue();\r\n    }\r\n    \r\n    protected start() \r\n    {\r\n        if (Application.Instance.config.hideExit) {\r\n            this.btnClose.node.active = false;\r\n        }\r\n        HiloButtonManager.instance = this;\r\n    }\r\n\r\n    private addBtnEvent()\r\n    {\r\n        this.btnRefresh.node.on(Button.EventType.CLICK, this.onBtnRefresh.bind(this));\r\n        this.btnHigh.node.on(Button.EventType.CLICK, () =>\r\n        {\r\n            this.onBtnBet(0);\r\n        });\r\n        this.btnLow.node.on(Button.EventType.CLICK, () =>\r\n        {\r\n            this.onBtnBet(1);\r\n        });\r\n        this.btnCashOut.node.on(Button.EventType.CLICK, this.onBtnCashOut.bind(this));\r\n        this.btnNextRound.node.on(Button.EventType.CLICK, this.onBtnNextRound.bind(this));\r\n        this.btnBet.node.on(Button.EventType.CLICK, this.onBtnStartBet.bind(this));\r\n        this.btnBetList.node.on(Button.EventType.CLICK, this.onBtnBetList.bind(this));\r\n        this.btnClose.node.on(Button.EventType.CLICK, this.onBtnClose.bind(this));\r\n    }\r\n\r\n    private onBtnClose()\r\n    {\r\n        StartUp.getInstance().closeGame();\r\n    }\r\n\r\n    private onBtnRefresh()\r\n    {\r\n        this.setRefreshBtnLock(false);\r\n        this.setBetLock(false);\r\n        this.setCompareBtnLock(false);\r\n        HiloGameConnection.getInstance().sendSkip();\r\n    }\r\n\r\n    private onBtnBet(betType: number)\r\n    {\r\n        this.setRefreshBtnLock(false);\r\n        this.setCompareBtnLock(false);\r\n        this.btnCashOut.interactable = false;\r\n        const betInfo: BetRequestData = new BetRequestData();\r\n        betInfo.Wager = HiloGameData.getInstance().getBetIndexList()[betType];\r\n        HiloGameConnection.getInstance().sendBet(betInfo);\r\n    }\r\n\r\n    private onBtnStartBet()\r\n    {\r\n        const gameData: HiloGameData = HiloGameData.getInstance();\r\n        const playerInfo: PlayerInfo = PlayerInfo.getInstance();\r\n        const betValue: number = gameData.getCurrentBetValue();\r\n        const tmpMoney: number = playerInfo.getPlayerMoney() - betValue;\r\n        const money: number = tmpMoney * playerInfo.getDenom();\r\n        if (money < 0)\r\n        {\r\n            Application.Instance.connection.onMoneyNotEnough();\r\n            return;\r\n        }\r\n        playerInfo.setPlayerMoney(money);\r\n        HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_BET);\r\n    }\r\n    \r\n    private onBtnCashOut()\r\n    {\r\n        this.setRefreshBtnLock(false);\r\n        this.setBetLock(false);\r\n        this.setCompareBtnLock(false);\r\n        HiloGameData.getInstance().setIsWin(true);\r\n        HiloGameConnection.getInstance().sendCashOut();\r\n    }\r\n    \r\n    private onBtnNextRound()\r\n    {\r\n        HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_START);\r\n    }\r\n    \r\n    private onBtnBetList()\r\n    {\r\n        HiloBetSettingManager.getInstance().openBetSetting();\r\n    }\r\n\r\n    public setBetLock(enable: boolean)\r\n    {\r\n        this.btnBet.interactable = enable;\r\n        this.btnCashOut.interactable = enable;\r\n        this.btnNextRound.interactable = enable;\r\n    }\r\n\r\n    public setCompareBtnLock(enable: boolean)\r\n    {\r\n        this.btnHigh.interactable = enable;\r\n        this.btnLow.interactable = enable;\r\n    }\r\n\r\n    public setRefreshBtnLock(enable: boolean)\r\n    {\r\n        this.btnRefresh.interactable = enable;\r\n    }\r\n\r\n    public updateCompareBtnState()\r\n    {\r\n        const cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n        const cardValue: number = HiloPokerTool.getInstance().getPokerValue(cardIndex);\r\n        const betIndexList: Array<number> = new Array<number>();\r\n        let highBetIndex: number = 0;\r\n        let lowBetIndex: number = 0;\r\n        switch (cardValue)\r\n        {\r\n            case 1:\r\n                this.btnHigh.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[1]);\r\n                this.btnLow.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[0]);                \r\n                highBetIndex = 5;\r\n                lowBetIndex = 3;\r\n                break;\r\n            case 13:\r\n                this.btnHigh.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[0]);\r\n                this.btnLow.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[2]);\r\n                highBetIndex = 3;\r\n                lowBetIndex = 1;\r\n                break;\r\n            default:\r\n                this.btnHigh.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[3]);\r\n                this.btnLow.node.getComponent(Sprite).spriteFrame = this.betAtlas.getSpriteFrame(this.betBtnSpriteName[4]);\r\n                highBetIndex = 4;\r\n                lowBetIndex = 2;\r\n                break;\r\n        }\r\n        betIndexList.push(highBetIndex);\r\n        betIndexList.push(lowBetIndex);\r\n        HiloGameData.getInstance().setBetIndexList(betIndexList);\r\n    }\r\n\r\n    public updateBetBtnState(isLose: boolean = false)\r\n    {\r\n        const gameState: GameState = HiloGameLogic.getInstance().getGameState();\r\n        const isStartState: boolean = gameState == GameState.GAME_STATE_START;\r\n        const isBetState: boolean = gameState == GameState.GAME_STATE_BET;\r\n        const isResultState: boolean = gameState == GameState.GAME_STATE_RESULT;\r\n        const isFirstRound: boolean = HiloGameData.getInstance().getIsNewRound();\r\n        this.btnBet.node.active = isStartState;\r\n        this.btnCashOut.node.active = isBetState && !isFirstRound;\r\n        this.btnNextRound.node.active = isResultState;\r\n        this.btnBetList.interactable = isStartState;\r\n        this.setCompareBtnLock(isBetState);\r\n        this.setBetLock(true);\r\n        this.setRefreshBtnLock(isStartState || isBetState);\r\n\r\n        //避免延遲過高導致ui狀態異常\r\n        if (isLose)\r\n        {\r\n            this.setCompareBtnLock(false);\r\n            this.setBetLock(false);\r\n            this.setRefreshBtnLock(false);\r\n        }\r\n    }\r\n\r\n    public updateCurrentBetValue()\r\n    {\r\n        const currentBet: number = HiloGameData.getInstance().getCurrentBetValue();\r\n        this.currentBetTxt.value = currentBet;\r\n        HiloScoreManager.getInstance().updateScoreInfo(false);\r\n    }\r\n}\r\n","import { _decorator } from \"cc\";\r\nimport Application from \"../../Application/Application\";\r\nimport { PathName } from \"../../Data/Config/path.config\";\r\nimport { BetRequestData, BetResponseData } from \"../../Data/DTO/Bet.dto\";\r\nimport { CashoutResponseData, SkipResponseData } from \"../../Data/DTO/Game.dto\";\r\nimport { HiloGameData } from \"./HiloGameData\";\r\nimport { HiloGameView } from \"./HiloGameView\";\r\nimport { GameState, HiloGameLogic, PlayerOperateType } from \"./HiloGameLogic\";\r\nimport { PlayerInfo } from \"../PlayerInfo\";\r\nimport { GameEventType, StartUp } from \"../StartUp\";\r\nimport { ResultData } from \"../GameObject/Provability\";\r\n\r\n\r\nconst { ccclass } = _decorator;\r\n@ccclass('HiloGameConnection')\r\nexport class HiloGameConnection\r\n{\r\n    private static instance: HiloGameConnection = null;\r\n    public static getInstance(): HiloGameConnection \r\n    {\r\n        if (!HiloGameConnection.instance)\r\n        {\r\n            HiloGameConnection.instance = new HiloGameConnection();\r\n        }\r\n        return HiloGameConnection.instance;\r\n    }\r\n\r\n    public init()\r\n    {\r\n        Application.Instance.connection.listenForPublishData(PathName.Skip, this.handleSkip.bind(this));\r\n        Application.Instance.connection.listenForPublishData(PathName.Bet, this.handleBet.bind(this));\r\n        Application.Instance.connection.listenForPublishData(PathName.Cashout, this.handleCashOut.bind(this));\r\n    }\r\n\r\n    public sendBet(betInfo: BetRequestData): Promise<BetResponseData>\r\n    {\r\n        // console.log(\"send bet\");\r\n        betInfo.Bet = HiloGameData.getInstance().getBetIndex();\r\n        return Application.Instance.connection.send(PathName.Bet, betInfo);\r\n    }\r\n\r\n    private handleBet(event: BetResponseData)\r\n    {\r\n        // console.log(\"handle bet\");\r\n        if (HiloGameData.getInstance().getIsNewRound())\r\n        {\r\n            HiloGameData.getInstance().setIsNewRound(false);\r\n        }\r\n        HiloGameData.getInstance().setCurrentOdds(event.Multiplier);\r\n        HiloGameData.getInstance().setCardIndex(event.Card);\r\n        const data: any = Object.entries(event.Probability);\r\n        HiloGameData.getInstance().setProbabilityList(data);\r\n        const operate: PlayerOperateType = HiloGameLogic.getInstance().getPlayerOperateTypeFromWager(event.Wager);\r\n        HiloGameView.getInstance().getNewCard(operate, event.Multiplier <= 0);\r\n        this.setProveData(event);\r\n    }\r\n\r\n    public sendSkip(): Promise<SkipResponseData>\r\n    {\r\n        // console.log(\"send skip\");\r\n        return Application.Instance.connection.send(PathName.Skip, null);\r\n    }\r\n\r\n    private handleSkip(event: SkipResponseData)\r\n    {\r\n        // console.log(\"handle skip\");\r\n        const data: any = Object.entries(event.Probability);\r\n        HiloGameData.getInstance().setProbabilityList(data);\r\n        HiloGameData.getInstance().setCardIndex(event.Card);\r\n        if (HiloGameLogic.getInstance().getGameState() != GameState.GAME_STATE_INIT)\r\n        {\r\n            HiloGameView.getInstance().getNewCard(PlayerOperateType.SKIP);\r\n        }\r\n        this.setProveData(event);\r\n    }\r\n\r\n    public sendCashOut(): Promise<CashoutResponseData>\r\n    {\r\n        // console.log(\"send cash out\");\r\n        return Application.Instance.connection.send(PathName.Cashout, null);\r\n    }\r\n\r\n    private handleCashOut(event: CashoutResponseData)\r\n    {\r\n        // console.log(\"handle cash out\");\r\n        HiloGameData.getInstance().setIsWin(event.TotalWin > 0);\r\n        PlayerInfo.getInstance().setPlayerMoney(event.Balance);\r\n        HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_RESULT);\r\n    }\r\n\r\n    private setProveData(event: any)\r\n    {\r\n        HiloGameData.getInstance().setNextHash(event.NextHash)\r\n        StartUp.getInstance().node.emit(GameEventType.NEXT_HASH, event.NextHash);\r\n        if (!HiloGameData.getInstance().getIsFirstIntoGame())\r\n        {\r\n            const provabilityData: ResultData = new ResultData();\r\n            provabilityData.Card = event.Card;\r\n            provabilityData.Secret = event.Secret;\r\n            StartUp.getInstance().node.emit(GameEventType.RESULT, provabilityData);\r\n        }\r\n        HiloGameData.getInstance().setIsFirstIntoGame(false);\r\n    }\r\n}\r\n","import { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\n\r\nconst { ccclass } = _decorator;\r\n@ccclass('HiloGameData')\r\nexport class HiloGameData extends Component \r\n{\r\n    private static instance: HiloGameData = null;\r\n    public static getInstance(): HiloGameData \r\n    {\r\n        if (!HiloGameData.instance)\r\n        {\r\n            HiloGameData.instance = new HiloGameData();\r\n        }\r\n        return HiloGameData.instance;\r\n    }\r\n\r\n    private betList: Array<number> = new Array<number>();\r\n    public getBetList(): Array<number>\r\n    {\r\n        return this.betList;\r\n    }\r\n\r\n    public setBetList(betList: Array<number>)\r\n    {\r\n        this.betList = betList;\r\n    }\r\n\r\n    private currentBetValue: number = 0;\r\n    public getCurrentBetValue(): number\r\n    {\r\n        return this.currentBetValue;\r\n    }\r\n\r\n    public setCurrentBetValue(currentBetValue: number)\r\n    {\r\n        this.currentBetValue = currentBetValue;\r\n    }\r\n\r\n    private score: number = 0;\r\n    public getScore(): number\r\n    {\r\n        return this.score;\r\n    }\r\n\r\n    public setScore(score: number)\r\n    {\r\n        this.score = score;\r\n    }\r\n\r\n    private cardIndex: number = 0;\r\n    public getCardIndex(): number\r\n    {\r\n        return this.cardIndex;\r\n    }\r\n\r\n    public setCardIndex(cardIndex: number)\r\n    {\r\n        this.cardIndex = cardIndex;\r\n    }\r\n\r\n    private currentOdds: number = 100;\r\n    public getCurrentOdds(): number\r\n    {\r\n        return this.currentOdds;\r\n    }\r\n\r\n    public setCurrentOdds(currentOdds: number)\r\n    {\r\n        if (currentOdds <= 0)\r\n        {\r\n            return;\r\n        }\r\n        this.currentOdds = currentOdds;\r\n    }\r\n\r\n    private isNewRound: boolean = true;\r\n    public getIsNewRound(): boolean\r\n    {\r\n        return this.isNewRound;\r\n    }\r\n\r\n    public setIsNewRound(isNewRound: boolean)\r\n    {\r\n        this.isNewRound = isNewRound;\r\n    }\r\n\r\n    private isFirstIntoGame: boolean = true;\r\n    public getIsFirstIntoGame(): boolean\r\n    {\r\n        return this.isFirstIntoGame;\r\n    }\r\n\r\n    public setIsFirstIntoGame(isFirstIntoGame: boolean)\r\n    {\r\n        this.isFirstIntoGame = isFirstIntoGame;\r\n    }\r\n\r\n    private isWin: boolean = true;\r\n    public getIsWin(): boolean\r\n    {\r\n        return this.isWin;\r\n    }\r\n\r\n    public setIsWin(isWin: boolean)\r\n    {\r\n        this.isWin = isWin;\r\n    }\r\n\r\n    private betIndex: number = 0;\r\n    public getBetIndex(): number\r\n    {\r\n        return this.betIndex;\r\n    }\r\n\r\n    public setBetIndex(betIndex: number)\r\n    {\r\n        this.betIndex = betIndex;\r\n    }\r\n\r\n    private probabilityList: Array<number> = new Array<number>();\r\n    public getProbabilityList(): Array<number>\r\n    {\r\n        return this.probabilityList;\r\n    }\r\n\r\n    public setProbabilityList(data: any)\r\n    {\r\n        let probabilityList: Array<number> = new Array<number>();\r\n        probabilityList.push(Number((data[0][1] * 100).toFixed(2)));\r\n        probabilityList.push(Number((data[1][1] * 100).toFixed(2)));\r\n        this.probabilityList = probabilityList;\r\n    }\r\n\r\n    private oddsList: Array<Array<number>> = new Array<Array<number>>();\r\n    public getOddsList(): Array<Array<number>>\r\n    {\r\n        return this.oddsList;\r\n    }\r\n\r\n    public setOddsList(oddsList: Array<Array<number>>)\r\n    {\r\n        this.oddsList = oddsList;\r\n    }\r\n\r\n    private betIndexList: Array<number> = new Array<number>();\r\n    public getBetIndexList(): Array<number>\r\n    {\r\n        return this.betIndexList;\r\n    }\r\n\r\n    public setBetIndexList(betIndexList: Array<number>)\r\n    {\r\n        this.betIndexList = betIndexList;\r\n    }\r\n    \r\n    private nextHash: string\r\n    public setNextHash(nextHash: string)\r\n    {\r\n        this.nextHash = nextHash;\r\n    }\r\n\r\n    public getNextHash(): string\r\n    {\r\n        return this.nextHash;\r\n    }\r\n\r\n    private defaultBetIndex: number = 0;\r\n    public setDefaultBetIndex(index: number)\r\n    {\r\n        this.defaultBetIndex = index;\r\n    }\r\n\r\n    public getDefaultBetIndex(): number\r\n    {\r\n        return this.defaultBetIndex;\r\n    }\r\n}\r\n","import { tween, _decorator } from \"cc\";\r\nimport { HiloGameView } from \"./HiloGameView\";\r\nimport { input } from \"cc\";\r\nimport { Input } from \"cc\";\r\nimport { KeyCode } from \"cc\";\r\nimport I18n from \"../../I18n/I18n\";\r\nimport { SupportLanguage } from \"../../I18n/Config/support.config\";\r\nimport { HiloRoadMapManager } from \"./RoadMap/HiloRoadMapManager\";\r\nimport { HiloGameData } from \"./HiloGameData\";\r\nimport { HiloScoreManager } from \"./UI/HiloScoreManager\";\r\nimport Application from \"../../Application/Application\";\r\nimport { EnterTableResponseData } from \"../../Data/DTO/Table.dto\";\r\nimport { HiloGameConnection } from \"./HiloGameConnection\";\r\nimport { BetRequestData } from \"../../Data/DTO/Bet.dto\";\r\nimport {  DebugRequestData } from \"../../Data/DTO/Debug.dto\";\r\nimport { HiloResultManager } from \"./UI/HiloResultManager\";\r\nimport { HiloPokerTool } from \"./HiloPokerTool\";\r\nimport { HiloButtonManager } from \"./UI/HiloButtonManager\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\nexport enum GameState\r\n{\r\n    DEFAULT = -1,\r\n    GAME_STATE_INIT = 0,\r\n    GAME_STATE_START = 1,\r\n    GAME_STATE_BET = 2,\r\n    GAME_STATE_RESULT = 3,\r\n}\r\n\r\nexport enum PlayerOperateType\r\n{\r\n    DEFAULT = -1,\r\n    HIGH = 0,\r\n    LOW = 1,\r\n    SKIP = 2,\r\n}\r\n\r\n@ccclass('HiloGameLogic')\r\nexport class HiloGameLogic\r\n{\r\n    private gameState: GameState = GameState.DEFAULT;\r\n    private gameData: HiloGameData = HiloGameData.getInstance();\r\n\r\n    private static instance: HiloGameLogic = null;\r\n    public static getInstance(): HiloGameLogic \r\n    {\r\n        if (!HiloGameLogic.instance)\r\n        {\r\n            HiloGameLogic.instance = new HiloGameLogic();\r\n        }\r\n        return HiloGameLogic.instance;\r\n    }\r\n    \r\n    public init(event: EnterTableResponseData)\r\n    {\r\n        this.addTestEvent();\r\n        this.initOddsList(Object.entries(event.PayTable));\r\n        this.gameData.setBetList(event.Bets.Values);\r\n        this.gameData.setDefaultBetIndex(event.Bets.Default);\r\n        this.gameData.setBetIndex(event.Bets.Default);\r\n        this.gameData.setCurrentBetValue(event.Bets.Values[this.gameData.getDefaultBetIndex()]);\r\n        HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_INIT);\r\n    }\r\n\r\n    private initOddsList(payTableData: any)\r\n    {\r\n        let oddsList: Array<Array<number>> = new Array<Array<number>>();\r\n        let oddsList1: Array<number> = new Array<number>();\r\n        let oddsList2: Array<number> = new Array<number>();\r\n        let odds1: number = 0;\r\n        let odds2: number = 0;\r\n        let oddsKey1: string = \"\";\r\n        let oddsKey2: string = \"\";\r\n        for (let i: number = 0; i < payTableData.length; i++)\r\n        {\r\n            if (i == 0)\r\n            {\r\n                oddsKey1 = \"equal\";\r\n                oddsKey2 = \"greater\";\r\n            }\r\n            else if (i == payTableData.length - 1)\r\n            {\r\n                oddsKey1 = \"less\";\r\n                oddsKey2 = \"equal\";\r\n            }\r\n            else\r\n            {\r\n                oddsKey1 = \"greaterEqual\";\r\n                oddsKey2 = \"lessEqual\";\r\n            }\r\n            \r\n            odds1 = payTableData[i][1][oddsKey1];\r\n            odds2 = payTableData[i][1][oddsKey2];\r\n            oddsList1.push(odds1);\r\n            oddsList2.push(odds2);\r\n        }\r\n        oddsList.push(oddsList1);\r\n        oddsList.push(oddsList2);\r\n        this.gameData.setOddsList(oddsList);\r\n    }\r\n\r\n    public getGameState(): GameState\r\n    {\r\n        return this.gameState;\r\n    }\r\n\r\n    public setGameState(gameState: GameState)\r\n    {\r\n        this.gameState = gameState;\r\n        this.onGameStateChange();\r\n    }\r\n\r\n    private onGameStateChange()\r\n    {\r\n        switch (this.gameState) \r\n        {\r\n            case GameState.GAME_STATE_INIT:\r\n                this.onGameInit();\r\n                break;\r\n            case GameState.GAME_STATE_START:\r\n                this.onGameStart();\r\n                break;\r\n            case GameState.GAME_STATE_BET:\r\n                this.onGameBet();\r\n                break;\r\n            case GameState.GAME_STATE_RESULT:\r\n                this.onGameResult();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onGameInit()\r\n    {\r\n        // console.log(\"state : init\");\r\n        console.log(\"prepare start game\");\r\n    }\r\n\r\n    private onGameStart()\r\n    {\r\n        // console.log(\"state : start\");\r\n        HiloGameView.getInstance().updateCurrentCardInfo();\r\n        this.gameData.setIsNewRound(true);\r\n        this.gameData.setIsWin(true);\r\n        HiloButtonManager.getInstance().updateBetBtnState();\r\n        HiloButtonManager.getInstance().setRefreshBtnLock(true);\r\n        HiloButtonManager.getInstance().setCompareBtnLock(false);\r\n        this.gameData.setCurrentOdds(100);\r\n        HiloScoreManager.getInstance().updateScoreInfo(false);\r\n        HiloRoadMapManager.getInstance().refreshRecord();\r\n        HiloGameView.getInstance().updateLossEffect();\r\n    }\r\n\r\n    private onGameBet()\r\n    {\r\n        // console.log(\"state : bet\");\r\n        HiloButtonManager.getInstance().updateBetBtnState();\r\n        HiloButtonManager.getInstance().setCompareBtnLock(true);\r\n        HiloScoreManager.getInstance().updateScoreInfo(true);\r\n    }\r\n\r\n    private onGameResult()\r\n    {\r\n        // console.log(\"state : result\");\r\n        tween(this).delay(1.2).call(() => \r\n        {\r\n            HiloButtonManager.getInstance().updateBetBtnState();\r\n        }).start();\r\n        HiloResultManager.getInstance().openResultPage();\r\n    }\r\n\r\n    public closeGame()\r\n    {\r\n        if (Application.Instance.config.homeURL) \r\n        {\r\n            document.location.href = Application.Instance.config.homeURL;\r\n        } \r\n        else \r\n        {\r\n            window.close();\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    public getPlayerOperateTypeFromWager(wager: number): PlayerOperateType\r\n    {\r\n        let operateType: PlayerOperateType = PlayerOperateType.DEFAULT;\r\n        switch (wager)\r\n        {\r\n            case 1:\r\n            case 2:\r\n                operateType = PlayerOperateType.LOW;\r\n                break;\r\n            case 3:\r\n                let cardIndex: number = this.gameData.getCardIndex();\r\n                let cardValue: number = HiloPokerTool.getInstance().getPokerValue(cardIndex);\r\n                operateType = cardValue == 1 ? PlayerOperateType.LOW : PlayerOperateType.HIGH;\r\n                break;\r\n            case 4:\r\n            case 5:\r\n                operateType = PlayerOperateType.HIGH;\r\n                break;\r\n        }\r\n        return operateType;\r\n    }\r\n    \r\n    private addTestEvent()\r\n    {\r\n        let isDebugWin: boolean = true;\r\n        let betInfo: BetRequestData = new BetRequestData();\r\n        let debugInfo: DebugRequestData = new DebugRequestData();\r\n        let wagerIndex: number = 1;\r\n        let winOrLossStr: string = \"\";\r\n        let wagerStr: string = \"\";\r\n        debugInfo.Win = isDebugWin;\r\n        winOrLossStr = debugInfo.Win ? \"贏\" : \"輸\";\r\n        betInfo.Debug = debugInfo;\r\n        betInfo.Wager = 1;\r\n\r\n        if (Application.Instance.config.debug) \r\n        {\r\n            input.on(Input.EventType.KEY_UP, async (event) => \r\n            {\r\n                switch (event.keyCode) \r\n                {\r\n                    case KeyCode.SPACE:\r\n                        isDebugWin = !isDebugWin;\r\n                        debugInfo.Win = isDebugWin;\r\n                        winOrLossStr = debugInfo.Win ? \"贏\" : \"輸\";\r\n                        console.log(`切換輸贏模式 : ${winOrLossStr}`);\r\n                        break;\r\n\r\n                    case KeyCode.ARROW_UP:\r\n                        debugInfo.Mode = 1;\r\n                        betInfo.Wager = HiloGameData.getInstance().getBetIndexList()[0];\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`自動下注上方按鈕 , 當前輸贏結果 : ${winOrLossStr}`);\r\n                        break;\r\n                    case KeyCode.ARROW_DOWN:\r\n                        debugInfo.Mode = 1;\r\n                        betInfo.Wager = HiloGameData.getInstance().getBetIndexList()[1];\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`自動下注下方按鈕 , 當前輸贏結果 : ${winOrLossStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_1:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 1;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_2:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 2;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_3:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 3;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_4:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 4;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_5:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 5;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_6:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 6;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_7:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 7;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_8:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 8;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_9:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 9;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.DIGIT_0:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 10;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_Q:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 11;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_W:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 12;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_E:\r\n                        debugInfo.Mode = 2;\r\n                        debugInfo.Rank = 13;\r\n                        HiloGameConnection.getInstance().sendBet(betInfo);\r\n                        console.log(`指定牌面結果 : ${debugInfo.Rank} , 當前下注模式 : ${wagerStr}`);\r\n                        break;\r\n\r\n                    case KeyCode.KEY_Z:\r\n                        betInfo.Wager = 1;\r\n                        wagerStr = \"小於\";\r\n                        console.log(`切換下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_X:\r\n                        betInfo.Wager = 2;\r\n                        wagerStr = \"小於等於\";\r\n                        console.log(`切換下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_C:\r\n                        betInfo.Wager = 3;\r\n                        wagerStr = \"等於\";\r\n                        console.log(`切換下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_V:\r\n                        betInfo.Wager = 4;\r\n                        wagerStr = \"大於等於\";\r\n                        console.log(`切換下注模式 : ${wagerStr}`);\r\n                        break;\r\n                    case KeyCode.KEY_B:\r\n                        betInfo.Wager = 5;\r\n                        wagerStr = \"大於\";\r\n                        console.log(`切換下注模式 : ${wagerStr}`);\r\n                        break;\r\n\r\n                    case KeyCode.F1:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.EN);\r\n                        break;\r\n                    case KeyCode.F2:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.SCH);\r\n                        break;\r\n                    case KeyCode.F3:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.TCH);\r\n                        break;\r\n                    case KeyCode.F4:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.VI);\r\n                        break;\r\n                    case KeyCode.F5:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.JA);\r\n                        break;\r\n                    case KeyCode.F6:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.PT);\r\n                        break;\r\n                    case KeyCode.F7:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.ES);\r\n                        break;\r\n                    case KeyCode.F8:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.KO);\r\n                        break;\r\n                    case KeyCode.F9:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.ID);\r\n                        break;\r\n                    case KeyCode.F10:\r\n                        I18n.Instance.changeLanguage(SupportLanguage.TH);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { UIOpacity } from \"cc\";\r\nimport { SpriteAtlas } from \"cc\";\r\nimport { Node } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"./HiloGameData\";\r\nimport { tween } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { HiloPokerTool } from \"./HiloPokerTool\";\r\nimport { GameState, HiloGameLogic, PlayerOperateType } from \"./HiloGameLogic\";\r\nimport { HiloRoadMapManager } from \"./RoadMap/HiloRoadMapManager\";\r\nimport { HiloScoreManager } from \"./UI/HiloScoreManager\";\r\nimport { PlayerInfo } from \"../PlayerInfo\";\r\nimport NumberFormatter from \"../../Toolkit/Components/NumberFormatter\";\r\nimport { HiloResultManager } from \"./UI/HiloResultManager\";\r\nimport { HiloBetSettingManager } from \"./BetSetting/HiloBetSettingManager\";\r\nimport { HiloButtonManager } from \"./UI/HiloButtonManager\";\r\nimport { HiloOddsInfoManager } from \"./UI/HiloOddsInfoManager\";\r\nimport { HiloProbabilityInfoManager } from \"./UI/HiloProbabilityInfoManager\";\r\nimport AudioManager from \"../AudioManager\";\r\nimport { SoundEffect as SoundEffect } from \"../Config/audio.config\";\r\nimport { Label } from \"cc\";\r\nimport { defaultAppConfig } from \"../../Data/Config/app.config\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloGameView')\r\nexport class HiloGameView extends Component \r\n{\r\n    @property(Node)\r\n    private currentCard: Node = null;\r\n    @property(Node)\r\n    private abandonCard: Node = null;\r\n    @property(Node)\r\n    private lossEffect: Node = null;\r\n    @property(SpriteAtlas)\r\n    private pokerAtlas: SpriteAtlas = null;\r\n    @property(NumberFormatter)\r\n    private playerMoneyTxt: NumberFormatter = null;\r\n    @property(Label)\r\n    private versionTxt: Label = null;\r\n\r\n    private static instance: HiloGameView = null;\r\n    public static getInstance(): HiloGameView \r\n    {\r\n        return HiloGameView.instance;\r\n    }\r\n    \r\n    protected start() \r\n    {\r\n        HiloGameView.instance = this;\r\n        this.init();\r\n    }\r\n    \r\n    public init()\r\n    {\r\n        this.checkGameSceneIsLoadFinish();\r\n        this.updatePlayerMoney();\r\n        this.lossEffect.active = false;\r\n    }\r\n\r\n    private checkGameSceneIsLoadFinish()\r\n    {\r\n        const betSettingManager: HiloBetSettingManager = HiloBetSettingManager.getInstance();\r\n        const buttongManager: HiloButtonManager = HiloButtonManager.getInstance();\r\n        const oddsInfoManager: HiloOddsInfoManager = HiloOddsInfoManager.getInstance();\r\n        const probabilityInfoManager: HiloProbabilityInfoManager = HiloProbabilityInfoManager.getInstance();\r\n        const roadMapManager: HiloRoadMapManager = HiloRoadMapManager.getInstance();\r\n        const scoreManager: HiloScoreManager = HiloScoreManager.getInstance();\r\n        const resultManager: HiloResultManager = HiloResultManager.getInstance();\r\n        const isConnect: boolean = HiloGameLogic.getInstance().getGameState() == GameState.GAME_STATE_INIT;\r\n\r\n        if (!betSettingManager || \r\n            !buttongManager || \r\n            !oddsInfoManager || \r\n            !probabilityInfoManager || \r\n            !roadMapManager || \r\n            !scoreManager || \r\n            !resultManager || \r\n            !isConnect)\r\n        {\r\n            // console.log(\"something loading\");\r\n            this.waitLoading();\r\n            return;\r\n        }\r\n        this.prepareStartGame();\r\n        // console.log(\"loading finish\");\r\n    }\r\n\r\n    private prepareStartGame()\r\n    {\r\n        HiloButtonManager.getInstance().init();\r\n        HiloPokerTool.getInstance().setPokeAtlas(this.pokerAtlas);\r\n        HiloBetSettingManager.getInstance().initBetSettingPage();\r\n        HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_START);\r\n        this.setGameVersion();\r\n    }\r\n\r\n    private waitLoading()\r\n    {\r\n        setTimeout(() => \r\n        {\r\n            // console.log(\"loading...\");\r\n            this.checkGameSceneIsLoadFinish();\r\n        }, 1000 / 60);\r\n    }\r\n    \r\n    public getNewCard(operateType: PlayerOperateType, isLose: boolean = false)\r\n    {\r\n        HiloButtonManager.getInstance().setBetLock(false);\r\n        HiloButtonManager.getInstance().setCompareBtnLock(false);\r\n        HiloButtonManager.getInstance().setRefreshBtnLock(false);\r\n        this.throwAbandonCard(operateType, isLose);\r\n    }\r\n\r\n    public updateCurrentCardInfo() \r\n    {\r\n        const cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n        tween(this.node).delay(0.2).call(() => \r\n        {\r\n            HiloPokerTool.getInstance().turnCardOver(this.currentCard, cardIndex);\r\n        }).start();\r\n        HiloProbabilityInfoManager.getInstance().updateProbabilityInfo();\r\n        HiloOddsInfoManager.getInstance().updateOddsInfo();\r\n        HiloButtonManager.getInstance().updateCompareBtnState();\r\n        tween(this.node).delay(1).call(() => \r\n        {\r\n            if (HiloGameLogic.getInstance().getGameState() == GameState.GAME_STATE_BET)\r\n            {\r\n                HiloScoreManager.getInstance().updateScoreInfo(true);\r\n            }\r\n        }).start();\r\n        this.initAbandonCard();\r\n    }\r\n\r\n    private initAbandonCard()\r\n    {\r\n        const cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n        this.abandonCard = HiloPokerTool.getInstance().getPoker(this.abandonCard, cardIndex);\r\n        this.abandonCard.getComponent(UIOpacity).opacity = 0;\r\n        this.abandonCard.position = new Vec3(0, 0);\r\n        this.abandonCard.scale = new Vec3(1, 1);\r\n        this.abandonCard.angle = 0;\r\n    }\r\n\r\n    private throwAbandonCard(operateType: PlayerOperateType, isLose: boolean)\r\n    {\r\n        AudioManager.Instance.playEffect(SoundEffect.MUCKED);\r\n        const duration: number = 0.3;\r\n        const abandonCardOpacity: UIOpacity = this.abandonCard.getComponent(UIOpacity);\r\n        abandonCardOpacity.opacity = 255;\r\n        this.currentCard = HiloPokerTool.getInstance().getPoker(this.currentCard, -1);\r\n        tween(this.abandonCard).to(duration, { scale: new Vec3(0, 0), angle: 45 }).start();\r\n        tween(this.abandonCard).to(duration, { position: new Vec3(-400, 500) }).start();\r\n        tween(abandonCardOpacity).to(duration, { opacity: 0}).call(() => \r\n        {\r\n            this.updateCurrentCardInfo();\r\n            if (HiloGameLogic.getInstance().getGameState() == GameState.GAME_STATE_START) \r\n            {\r\n                HiloRoadMapManager.getInstance().refreshRecord();\r\n            }\r\n            else\r\n            {\r\n                HiloRoadMapManager.getInstance().addRecord(operateType, false);\r\n            }\r\n        }).delay(0.85)\r\n        .call(() => \r\n        {\r\n            this.updateLossEffect();\r\n            HiloButtonManager.getInstance().updateBetBtnState(isLose);\r\n        }).start();\r\n    }\r\n\r\n    public updatePlayerMoney()\r\n    {\r\n        this.playerMoneyTxt.value = PlayerInfo.getInstance().getPlayerMoney();\r\n    }\r\n\r\n    public updateLossEffect()\r\n    {\r\n        this.lossEffect.active = !HiloGameData.getInstance().getIsWin();\r\n    }\r\n\r\n    private setGameVersion()\r\n    {\r\n        this.versionTxt.string = defaultAppConfig.GameVersion;\r\n    }\r\n}\r\n","import { Label } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport { HiloPokerTool } from \"../HiloPokerTool\";\r\nimport { tween } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { UIOpacity } from \"cc\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloOddsInfoManager')\r\nexport class HiloOddsInfoManager extends Component \r\n{\r\n    @property(Label)\r\n    private highOddsTxt: Label = null;\r\n    @property(Label)\r\n    private lowOddsTxt: Label = null;\r\n\r\n    private static instance: HiloOddsInfoManager = null;\r\n    public static getInstance(): HiloOddsInfoManager \r\n    {\r\n        return HiloOddsInfoManager.instance;\r\n    }\r\n    \r\n    protected start()\r\n    {\r\n        HiloOddsInfoManager.instance = this;\r\n        this.highOddsTxt.string = \"\";\r\n        this.lowOddsTxt.string = \"\";\r\n    }\r\n\r\n    public updateOddsInfo()\r\n    {\r\n        let cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n        let oddsList: Array<Array<number>> = HiloGameData.getInstance().getOddsList();\r\n        let pokerValue: number = HiloPokerTool.getInstance().getPokerValue(cardIndex);\r\n        let isValueMaxOrMin: boolean = pokerValue == 1 || pokerValue == 13;\r\n        let oddsIndex1: number = isValueMaxOrMin ? 1 : 0;\r\n        let oddsIndex2: number = isValueMaxOrMin ? 0 : 1;\r\n        let highOdds: string = (oddsList[oddsIndex1][pokerValue - 1] / 100).toFixed(2);\r\n        let lowOdds: string = (oddsList[oddsIndex2][pokerValue - 1] / 100).toFixed(2);\r\n        \r\n        let duration: number = 0.2;\r\n        let targetScale: Vec3 = new Vec3(1.2, 1.2, 1.2);\r\n        let highOddsOpacity: UIOpacity = this.highOddsTxt.getComponent(UIOpacity);\r\n        let lowOddsOpacity: UIOpacity = this.lowOddsTxt.getComponent(UIOpacity);\r\n        \r\n        tween(lowOddsOpacity).to(duration, { opacity: 0 }).call(() => \r\n        {\r\n            lowOddsOpacity.opacity = 255;\r\n            this.lowOddsTxt.node.scale = Vec3.ZERO;\r\n            this.lowOddsTxt.string = `${lowOdds}x`;\r\n            tween(this.highOddsTxt.node).delay(duration * 2).to(duration, { scale: targetScale }).to(duration, { scale: Vec3.ONE }).delay(duration / 4).call(() => \r\n            {\r\n                tween(this.lowOddsTxt.node).to(duration, { scale: targetScale }).to(duration, { scale: Vec3.ONE }).start();\r\n            }).start();\r\n        }).start();\r\n        tween(highOddsOpacity).to(duration, { opacity: 0 }).call(() => \r\n        {\r\n            highOddsOpacity.opacity = 255;\r\n            this.highOddsTxt.node.scale = Vec3.ZERO;\r\n            this.highOddsTxt.string = `${highOdds}x`;\r\n        }).start();\r\n    }\r\n}\r\n","import { Sprite } from \"cc\";\r\nimport { SpriteFrame } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\n\r\nconst { ccclass } = _decorator;\r\n@ccclass('HiloPlayerOperateTypeItem')\r\nexport class HiloPlayerOperateTypeItem extends Component\r\n{\r\n    public setSprite(spriteFrame: SpriteFrame)\r\n    {\r\n        let sprite: Sprite = this.node.getComponent(Sprite);\r\n        sprite.spriteFrame = spriteFrame;\r\n    }\r\n}\r\n","import { SpriteAtlas } from \"cc\";\r\nimport { Node } from \"cc\";\r\nimport { tween } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { Sprite } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport AudioManager from \"../AudioManager\";\r\nimport { SoundEffect as SoundEffect } from \"../Config/audio.config\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloPokerTool')\r\nexport class HiloPokerTool extends Component \r\n{\r\n    @property(SpriteAtlas)\r\n    private pokerAtlas: SpriteAtlas = null;\r\n\r\n    private static instance: HiloPokerTool = null;\r\n    public static getInstance(): HiloPokerTool \r\n    {\r\n        if (!HiloPokerTool.instance)\r\n        {\r\n            HiloPokerTool.instance = new HiloPokerTool();\r\n        }\r\n        return HiloPokerTool.instance;\r\n    }\r\n\r\n    public setPokeAtlas(pokerAtlas: SpriteAtlas)\r\n    {\r\n        this.pokerAtlas = pokerAtlas;\r\n    }\r\n\r\n    public getPoker(pokerNode: Node, cardIndex: number): Node\r\n    {\r\n        let pokerSprite: Sprite = pokerNode.getComponent(Sprite);\r\n        let spriteName: string = \"\";\r\n        if (!pokerSprite)\r\n        {\r\n            pokerNode.addComponent(Sprite);\r\n        }\r\n        spriteName = this.convertCardIndexToSpriteName(cardIndex);\r\n        pokerSprite.spriteFrame = this.pokerAtlas.getSpriteFrame(spriteName);\r\n        return pokerNode;\r\n    }\r\n\r\n    private convertCardIndexToSpriteName(cardIndex: number): string\r\n    {\r\n        let spriteName: string = \"img_poker_0\";\r\n        spriteName += cardIndex == -1 ? \"53\" : this.convertCardIndexFormat(cardIndex);\r\n        return spriteName;\r\n    }\r\n\r\n    private convertCardIndexFormat(cardIndex: number): string\r\n    {\r\n        let result: string = \"\";\r\n        let cardIndexStr: string = cardIndex.toString();\r\n        result = cardIndex >= 10 ? cardIndexStr : \"0\" + cardIndexStr;\r\n        return result;\r\n    }\r\n\r\n    public turnCardOver(poker: Node, cardIndex: number)\r\n    {\r\n        AudioManager.Instance.playEffect(SoundEffect.FLIP);\r\n        let duration: number = 0.3;\r\n        poker = this.getPoker(poker, -1);\r\n        tween(poker).to(duration, {scale: new Vec3(0, poker.scale.y)})\r\n        .call(() => \r\n        {\r\n            poker = this.getPoker(poker, cardIndex);\r\n        })\r\n        .to(duration, {scale: new Vec3(poker.scale.x, poker.scale.y)}).start();\r\n    }\r\n\r\n    public getPokerValue(cardIndex: number): number\r\n    {\r\n        if (cardIndex <= 0 || cardIndex > 52)\r\n        {\r\n            return 0;\r\n        }\r\n        let remainder = cardIndex % 13;\r\n        let value: number = remainder == 0 ? 13 : remainder;\r\n        return value;\r\n    }\r\n}\r\n","import { Label } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport { Vec3 } from \"cc\";\r\nimport { tween } from \"cc\";\r\nimport { UIOpacity } from \"cc\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloProbabilityInfoManager')\r\nexport class HiloProbabilityInfoManager extends Component \r\n{\r\n    @property(Label)\r\n    private highProbabilityTxt: Label = null;\r\n    @property(Label)\r\n    private lowProbabilityTxt: Label = null;\r\n\r\n    private static instance: HiloProbabilityInfoManager = null;\r\n    public static getInstance(): HiloProbabilityInfoManager \r\n    {\r\n        return HiloProbabilityInfoManager.instance;\r\n    }\r\n   \r\n    protected start()\r\n    {\r\n        HiloProbabilityInfoManager.instance = this;\r\n        this.highProbabilityTxt.string = \"\";\r\n        this.lowProbabilityTxt.string = \"\";\r\n    }\r\n\r\n    public updateProbabilityInfo()\r\n    {\r\n        let duration: number = 0.2;\r\n        let targetScale: Vec3 = new Vec3(1.2, 1.2, 1.2);\r\n        let highProbabilityOpacity: UIOpacity = this.highProbabilityTxt.getComponent(UIOpacity);\r\n        let lowProbabilityOpacity: UIOpacity = this.lowProbabilityTxt.getComponent(UIOpacity);\r\n\r\n        tween(highProbabilityOpacity).to(duration, { opacity: 0 }).call(() => \r\n        {\r\n            highProbabilityOpacity.opacity = 255;\r\n            this.highProbabilityTxt.node.scale = Vec3.ZERO;\r\n            this.highProbabilityTxt.string = `${HiloGameData.getInstance().getProbabilityList()[1].toString()}%`;\r\n            tween(this.highProbabilityTxt.node).delay(duration * 2).to(duration, { scale: targetScale }).to(duration, { scale: Vec3.ONE }).delay(duration / 4).call(() => \r\n            {\r\n                tween(this.lowProbabilityTxt.node).to(duration, { scale: targetScale }).to(duration, { scale: Vec3.ONE }).start();\r\n            }).start();\r\n        }).start();\r\n        tween(lowProbabilityOpacity).to(duration, { opacity: 0 }).call(() => \r\n        {\r\n            lowProbabilityOpacity.opacity = 255;\r\n            this.lowProbabilityTxt.node.scale = Vec3.ZERO;\r\n            this.lowProbabilityTxt.string = `${HiloGameData.getInstance().getProbabilityList()[0].toString()}%`;\r\n        }).start();\r\n    }\r\n}\r\n","import { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport NumberFormatter from \"../../../Toolkit/Components/NumberFormatter\";\r\nimport { Label } from \"cc\";\r\nimport { Sprite } from \"cc\";\r\nimport { Button } from \"cc\";\r\nimport { UIOpacity } from \"cc\";\r\nimport { tween } from \"cc\";\r\nimport { Node } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { SpriteFrame } from \"cc\";\r\nimport LocalizedLabel from \"../../../I18n/LocalizedComponent/LocalizedLabel\";\r\nimport { HiloScoreManager } from \"./HiloScoreManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloResultManager')\r\nexport class HiloResultManager extends Component \r\n{\r\n    @property(Button)\r\n    private mask: Button = null;\r\n    @property(Node)\r\n    private resultPage: Node = null;\r\n    @property(Sprite)\r\n    private bg: Sprite = null;\r\n    @property(Label)\r\n    private resultInfoTxt: Label = null;\r\n    @property(Button)\r\n    private btnClose: Button = null;\r\n    @property(Label)\r\n    private oddsTxt: Label = null;\r\n    @property(Label)\r\n    private settleInfoTxt: Label = null;\r\n    @property(NumberFormatter)\r\n    private resultMoneyTxt: NumberFormatter = null;\r\n    @property(SpriteFrame)\r\n    private winBg: SpriteFrame = null;\r\n    @property(SpriteFrame)\r\n    private lossBg: SpriteFrame = null;\r\n    @property(Node)\r\n    private oddsGroup: Node = null;\r\n    @property(Node)\r\n    private moneyGroup: Node = null;\r\n\r\n    private readonly winHexColor: string = \"#FBCB14\";\r\n    private readonly lossHexColor: string = \"#A8BBFF\";\r\n    private isShowResultPage: boolean = false;\r\n\r\n    private static instance: HiloResultManager = null;\r\n    public static getInstance(): HiloResultManager\r\n    {\r\n        return HiloResultManager.instance;\r\n    }\r\n    \r\n    protected start()\r\n    {\r\n        HiloResultManager.instance = this;\r\n        this.node.active = false;\r\n        this.btnClose.node.on(Button.EventType.CLICK, this.closeResultPage.bind(this));\r\n        this.mask.node.on(Button.EventType.CLICK, this.closeResultPage.bind(this));\r\n        this.mask.interactable = false;\r\n    }\r\n\r\n    public openResultPage()\r\n    {\r\n        if (this.node.active)\r\n        {\r\n            return;\r\n        }\r\n        this.node.active = true;\r\n        this.updateResultInfo();\r\n        this.showPageEffect(true);\r\n    }\r\n\r\n    private closeResultPage()\r\n    {\r\n        if (!this.isShowResultPage)\r\n        {\r\n            return;\r\n        }\r\n        this.showPageEffect(false);\r\n        this.mask.interactable = false;\r\n        this.btnClose.interactable = false;\r\n        this.isShowResultPage =  false;\r\n        HiloScoreManager.getInstance().updateScoreInfo(false);\r\n    }\r\n\r\n    private updateResultInfo()\r\n    {\r\n        const isWin: boolean = HiloGameData.getInstance().getIsWin();\r\n        const fontHex: string = isWin ? this.winHexColor : this.lossHexColor;\r\n        const score: number = HiloGameData.getInstance().getScore();\r\n        const betValue: number = HiloGameData.getInstance().getCurrentBetValue();\r\n        let odds: number = HiloGameData.getInstance().getCurrentOdds();\r\n        odds *= isWin ? 1 : -1;\r\n        this.resultInfoTxt.color.fromHEX(fontHex);\r\n        this.bg.spriteFrame = isWin ? this.winBg : this.lossBg;\r\n        this.oddsTxt.string = (odds / 100).toString();\r\n        this.resultMoneyTxt.value = isWin ? score :betValue;\r\n        this.resultInfoTxt.getComponent(LocalizedLabel).key = isWin ? \"YOU_WON\" : \"YOU_LOSS\";\r\n        this.settleInfoTxt.getComponent(LocalizedLabel).key = isWin ? \"TOTAL_WIN\" : \"TOTAL_LOSS\";\r\n    }\r\n\r\n    private showPageEffect(isOpen: boolean)\r\n    {\r\n        const isWin: boolean = HiloGameData.getInstance().getIsWin();\r\n        const maskOpacity: UIOpacity = this.mask.getComponent(UIOpacity);\r\n        const pageOpacity: UIOpacity = this.resultPage.getComponent(UIOpacity);\r\n        const startScale: Vec3 = isOpen ? Vec3.ZERO : Vec3.ONE;\r\n        const targetScale: Vec3 = isOpen ? Vec3.ONE : Vec3.ZERO;\r\n        const maxScale: Vec3 = new Vec3(1.1, 1.1, 1.1);\r\n        const startOpacity: number = isOpen ? 0 : 255;\r\n        const targetOpacity: number = isOpen ? 255 : 0;\r\n        const delayTime: number = isOpen && !isWin ? 1.5 : 0;\r\n        maskOpacity.opacity = startOpacity;\r\n        this.resultPage.scale = startScale;\r\n        this.oddsGroup.scale = this.moneyGroup.scale = isOpen ? Vec3.ZERO : Vec3.ONE;\r\n        tween(maskOpacity).delay(delayTime).to(0.3, { opacity: targetOpacity }).start();\r\n        tween(pageOpacity).delay(delayTime).call(() => \r\n        {\r\n            tween(this.resultPage).to(0.25, { scale: maxScale} ).to(0.25, { scale: targetScale }).call(() => \r\n            {\r\n                if (isOpen)\r\n                {\r\n                    tween(this.oddsGroup).to(0.15, { scale: maxScale} ).to(0.15, { scale: Vec3.ONE }).call(() => \r\n                    {\r\n                        tween(this.moneyGroup).to(0.15, { scale: maxScale }).to(0.15, { scale: Vec3.ONE }).call(() => \r\n                        {\r\n                            this.isShowResultPage = true;\r\n                        }).start();\r\n                    }).start();\r\n                }\r\n                this.mask.interactable = true;\r\n                this.btnClose.interactable = true;\r\n                this.node.active = isOpen;\r\n                \r\n            }).start();\r\n        }).start();\r\n    }\r\n}\r\n","import { Label } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\n\r\nconst { ccclass } = _decorator;\r\n@ccclass('HiloRoadMapItem')\r\nexport class HiloRoadMapItem extends Component\r\n{\r\n    public setOddsInfo(odds: number)\r\n    {\r\n        let oddsTxt: Label = this.node.children[0].getComponent(Label);\r\n        let isWin: boolean = HiloGameData.getInstance().getIsWin();\r\n        let fontHexColor: string = isWin ? \"#FFFFFF\" : \"#FF0000\";\r\n        oddsTxt.string = `${(odds).toFixed(2)}x`;\r\n        oddsTxt.color.fromHEX(fontHexColor);\r\n    }\r\n}\r\n","import { Prefab } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { instantiate } from \"cc\";\r\nimport { Node } from \"cc\";\r\nimport { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloRoadMapItem } from \"./HiloRoadMapItem\";\r\nimport { HiloPokerTool } from \"../HiloPokerTool\";\r\nimport { tween } from \"cc\";\r\nimport { UITransform } from \"cc\";\r\nimport { Size } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport { UIOpacity } from \"cc\";\r\nimport { PlayerOperateType } from \"../HiloGameLogic\";\r\nimport { HiloPlayerOperateTypeItem } from \"./HiloPlayerOperateTypeItem\";\r\nimport { SpriteFrame } from \"cc\";\r\nimport { HiloButtonManager } from \"../UI/HiloButtonManager\";\r\nimport { ScrollView } from \"cc\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloRoadMapManager')\r\nexport class HiloRoadMapManager extends Component\r\n{\r\n    @property(Node)\r\n    private cardGroup: Node = null;\r\n    @property(Prefab)\r\n    private roadMapItem: Prefab = null;\r\n    @property(Prefab)\r\n    private operateIcon: Prefab = null;\r\n    @property(Node)\r\n    private bar: Node = null;\r\n    @property(SpriteFrame)\r\n    private highIcon: SpriteFrame = null;\r\n    @property(SpriteFrame)\r\n    private lowIcon: SpriteFrame = null;\r\n    @property(SpriteFrame)\r\n    private skipIcon: SpriteFrame = null;\r\n    @property(ScrollView)\r\n    private roadMapScrollView: ScrollView = null;\r\n    \r\n    private lastCard: Node = null;\r\n    private firstCard: Node = null;\r\n    private operateType: PlayerOperateType = PlayerOperateType.DEFAULT;\r\n    private cardList: Array<Node> = [];\r\n    private operateIconList: Array<Node> = [];\r\n    private readonly screenMaxAmount: number = 5;\r\n    private readonly cardInterval: number = 115;\r\n    private readonly operateIconInterval: number = 58;\r\n    private readonly startX: number = -255;\r\n    private readonly posY: number = 15;\r\n    private readonly barInitPos: Vec3 = new Vec3(-5000, -12);\r\n    private readonly cardsGroupInitSize: Size = new Size(600 ,170);\r\n    private readonly cardAniScale = new Vec3(1.1, 1.1, 1.1);\r\n\r\n    private static instance: HiloRoadMapManager = null;\r\n    public static getInstance(): HiloRoadMapManager \r\n    {\r\n        return HiloRoadMapManager.instance;\r\n    }\r\n    \r\n    protected start()\r\n    {\r\n        HiloRoadMapManager.instance = this;\r\n    }\r\n\r\n    public addRecord(operateType: PlayerOperateType, isFirstCard: boolean)\r\n    {\r\n        const cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n        const currentOdds: number = HiloGameData.getInstance().getCurrentOdds() / 100;\r\n        const delayTime: number = isFirstCard ? 0.4 : 0.8;\r\n        this.operateType = operateType;\r\n        tween(this.node).delay(delayTime).call(() => \r\n        {\r\n            if (this.cardList.length < this.screenMaxAmount)\r\n            {\r\n                this.addCard(cardIndex, currentOdds);\r\n            }\r\n            else\r\n            {\r\n                const cardGroupTransform: UITransform = this.cardGroup.getComponent(UITransform);\r\n                const width: number = cardGroupTransform.contentSize.width + this.cardInterval * 1;\r\n                const height: number = cardGroupTransform.contentSize.height;\r\n                const contentSize: Size = new Size(width, height)\r\n                cardGroupTransform.setContentSize(contentSize);\r\n                this.moveRecord(cardIndex, currentOdds);\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    private addCard(cardIndex: number, currentOdds: number)\r\n    {\r\n        let card: Node = instantiate(this.roadMapItem);\r\n        let posX: number = 0;\r\n        const cardPos: Vec3 = new Vec3();\r\n        const duration: number = 0.1;\r\n        const scale: number = 1.1;\r\n        this.cardList.push(card);\r\n        card.setParent(this.cardGroup);\r\n        if (!this.firstCard)\r\n        {\r\n            this.firstCard = card;\r\n        }\r\n        if (!this.lastCard)\r\n        {\r\n            card.position = new Vec3(this.startX, this.posY);\r\n        }\r\n        card.children[1].active = this.operateType == PlayerOperateType.DEFAULT;\r\n        posX = !this.lastCard ? this.startX : this.lastCard.position.x + this.cardInterval;\r\n        cardPos.set(posX, this.posY);\r\n        card.position = cardPos;\r\n        this.lastCard = card;\r\n        card.getComponent(HiloRoadMapItem).setOddsInfo(currentOdds);\r\n        card = HiloPokerTool.getInstance().getPoker(card, cardIndex);\r\n        tween(card).to(duration, {scale: new Vec3(card.scale.x * scale, card.scale.y * scale)})\r\n        .to(duration, {scale: new Vec3(card.scale.x, card.scale.y)}).call(() => \r\n        {\r\n            this.addOperateIcon(cardPos);\r\n        }).start();\r\n    }\r\n\r\n    private addOperateIcon(currentCardPos: Vec3)\r\n    {\r\n        const operateIcon: Node = instantiate(this.operateIcon);\r\n        let icon: SpriteFrame = null;\r\n        switch (this.operateType)\r\n        {\r\n            case PlayerOperateType.HIGH:\r\n                icon = this.highIcon;\r\n                break;\r\n            case PlayerOperateType.LOW:\r\n                icon = this.lowIcon;\r\n                break;\r\n            case PlayerOperateType.SKIP:\r\n                icon = this.skipIcon;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this.operateIconList.push(operateIcon);\r\n        this.cardGroup.insertChild(operateIcon, 0);\r\n        operateIcon.position = new Vec3(currentCardPos.x - this.operateIconInterval, currentCardPos.y);\r\n        operateIcon.getComponent(HiloPlayerOperateTypeItem).setSprite(icon);\r\n        operateIcon.scale = Vec3.ZERO;\r\n        tween(operateIcon).to(0.1, { scale: this.cardAniScale }).to(0.1, { scale: Vec3.ONE }).start();\r\n    }\r\n\r\n    private moveRecord(cardIndex: number, odds: number)\r\n    {\r\n        const duration: number = 0.2;\r\n        const extraCardAmount: number = this.cardList.length - this.screenMaxAmount;\r\n        const lastRecordPos: Vec3 = new Vec3((-extraCardAmount - 1) * (this.cardInterval / 2), this.cardGroup.position.y);\r\n        let targetPosX: number = 0;\r\n        let card: Node = null;\r\n        let operateIcon: Node = null;\r\n        this.roadMapScrollView.scrollToRight(duration);\r\n        tween(this.cardGroup).to(duration, {position: lastRecordPos}).call(() => \r\n        {\r\n            for (let i: number = 0; i < this.cardList.length; i++)\r\n            {\r\n                card = this.cardList[i];\r\n                targetPosX = card.position.x - this.cardInterval / 2;\r\n                tween(card).to(duration, {position: new Vec3(targetPosX, card.position.y)}).call(() => \r\n                {\r\n                    tween(this.node).delay(0.1).call(() => \r\n                    {\r\n                        if (i == this.cardList.length - 1)\r\n                        {\r\n                            this.addCard(cardIndex, odds);\r\n                        }\r\n                    }).start();\r\n                }).start();\r\n            }\r\n\r\n            for (let i: number = 0; i < this.operateIconList.length; i++)\r\n            {\r\n                operateIcon = this.operateIconList[i];\r\n                targetPosX = operateIcon.position.x - this.cardInterval / 2;\r\n                tween(operateIcon).to(duration, {position: new Vec3(targetPosX, operateIcon.position.y)}).start();\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    public refreshRecord()\r\n    {\r\n        const duration: number = 0.2;\r\n        const targetPos: Vec3 = this.firstCard ? new Vec3(this.firstCard.position.x - this.cardInterval, this.firstCard.position.y) : Vec3.ZERO;\r\n        HiloButtonManager.getInstance().setBetLock(false);\r\n        tween(this.cardGroup).to(duration, { position: Vec3.ZERO }).call(() => \r\n        {\r\n            this.cardGroup.children.forEach((card: Node) => \r\n            {\r\n                tween(card).to(duration, { position: targetPos }).start();\r\n            });\r\n        }).delay(duration).call(() => \r\n        {\r\n            this.initRoadMap();\r\n            tween(this.node).delay(0.05).call(() => \r\n            {\r\n                this.addRecord(PlayerOperateType.DEFAULT, true);\r\n            }).delay(0.25).call(() => \r\n            {\r\n                HiloButtonManager.getInstance().setBetLock(true);\r\n            }).start();\r\n        }).start();\r\n    }\r\n\r\n    private initRoadMap()\r\n    {\r\n        this.cardList = [];\r\n        this.operateIconList = [];\r\n        this.lastCard = null;\r\n        this.firstCard = null;\r\n        this.bar.position = this.barInitPos;\r\n        this.cardGroup.destroyAllChildren();\r\n        this.cardGroup.getComponent(UITransform).setContentSize(this.cardsGroupInitSize);\r\n        this.cardGroup.getComponent(UIOpacity).opacity = 255;\r\n    }\r\n}\r\n","import { Component } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport { HiloGameData } from \"../HiloGameData\";\r\nimport NumberFormatter from \"../../../Toolkit/Components/NumberFormatter\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('HiloScoreManager')\r\nexport class HiloScoreManager extends Component \r\n{\r\n    @property(NumberFormatter)\r\n    private scoreTxt: NumberFormatter = null;\r\n\r\n    private static instance: HiloScoreManager = null;\r\n    public static getInstance(): HiloScoreManager\r\n    {\r\n        return HiloScoreManager.instance;\r\n    }\r\n    \r\n    protected start()\r\n    {\r\n        HiloScoreManager.instance = this;\r\n    }\r\n\r\n    public updateScoreInfo(isShowScore: boolean)\r\n    {\r\n        const gameData: HiloGameData = HiloGameData.getInstance();\r\n        const isWin: boolean = gameData.getIsWin();\r\n        const currentBet: number = gameData.getCurrentBetValue();\r\n        const currentOdds: number = gameData.getCurrentOdds();\r\n        const score: number = Number((currentBet * currentOdds / 100));\r\n        gameData.setScore(score);\r\n        this.scoreTxt.value = isWin ? Number((currentBet * currentOdds / 100).toFixed(2)) : 0;\r\n        this.scoreTxt.node.active = isShowScore;\r\n    }\r\n}\r\n","import { Material, Sprite, Vec3, _decorator } from 'cc';\r\n\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\n@ccclass('HSLSprite')\r\n@executeInEditMode\r\nexport default class HSLSprite extends Sprite {\r\n    @property({ min: -180, max: 180, step: 1, slide: true })\r\n    public set hue(value: number) {\r\n        if (this._hsl.x === value) {\r\n            return;\r\n        }\r\n        this._hsl.x = value;\r\n        this.updateHueProperty();\r\n    }\r\n    public get hue() {\r\n        return this._hsl.x;\r\n    }\r\n\r\n    @property({ min: -100, max: 100, step: 1, slide: true })\r\n    public get saturation(): number {\r\n        return this._hsl.y;\r\n    }\r\n    public set saturation(value: number) {\r\n        if (this._hsl.y === value) {\r\n            return;\r\n        }\r\n        this._hsl.y = value;\r\n        this.updateSaturationProperty();\r\n    }\r\n\r\n    @property({ min: -100, max: 100, step: 1, slide: true })\r\n    public get lightness(): number {\r\n        return this._hsl.z;\r\n    }\r\n    public set lightness(value: number) {\r\n        if (this._hsl.z === value) {\r\n            return;\r\n        }\r\n        this._hsl.z = value;\r\n        this.updateLightnessProperty();\r\n    }\r\n\r\n    private _hsl: Vec3 = Vec3.ZERO.clone();\r\n\r\n    public get hsl(): Readonly<Vec3> {\r\n        return this._hsl.clone();\r\n    }\r\n    public set hsl(value: Vec3) {\r\n        if (this._hsl.equals(value)) {\r\n            return;\r\n        }\r\n        this._hsl.set(value);\r\n        this.updateHSLProperty();\r\n    }\r\n\r\n    protected _onMaterialModified(idx: number, material: Material) {\r\n        super._onMaterialModified(idx, material);\r\n        if (material) {\r\n            this.updateHSLProperty();\r\n        }\r\n    }\r\n\r\n    private updateHSLProperty() {\r\n        this.updateHueProperty();\r\n        this.updateSaturationProperty();\r\n        this.updateLightnessProperty();\r\n    }\r\n\r\n    private updateHueProperty() {\r\n        this.getMaterialInstance(0).setProperty('hue', this._hsl.x);\r\n    }\r\n\r\n    private updateSaturationProperty() {\r\n        this.getMaterialInstance(0).setProperty('saturation', (this._hsl.y + 100) / 100);\r\n    }\r\n\r\n    private updateLightnessProperty() {\r\n        this.getMaterialInstance(0).setProperty('lightness', (this._hsl.z + 100) / 100);\r\n    }\r\n}\r\n","import { Button, Component, Node, _decorator } from 'cc';\r\nimport { PlayerInfo } from '../PlayerInfo';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HamburgerView')\r\nexport default class HamburgerView extends Component {\r\n    @property(Node)\r\n    public readonly historys : Node[] = [];\r\n\r\n    protected onEnable(): void {\r\n        // check if game acount url is empty, will hide history button\r\n        if (PlayerInfo.getInstance().getAccountInfoUrl() == null) {\r\n            this.historys.forEach((history) => {\r\n                history.active = false;\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n","import { EventTarget, JsonAsset, sp, SpriteAtlas, SpriteFrame, warn } from 'cc';\r\nimport AssetCache from './AssetCache';\r\nimport I18nLoader from './I18nLoader';\r\nimport { SupportLanguage } from './Config/support.config';\r\nimport { fallbackLanguages } from './Config/fallback.config';\r\nimport { ILocaleDataSet } from './I18n.type';\r\n\r\nenum I18nEventType {\r\n    LanguageChanged = 'LanguageChanged',\r\n}\r\n\r\nexport default class I18n extends EventTarget {\r\n    public static readonly EVENT_TYPE = I18nEventType;\r\n    private static instance: I18n = null;\r\n    private readonly caches: Partial<ILocaleDataSet<AssetCache>> = {};\r\n    private readonly loader: I18nLoader = new I18nLoader();\r\n    private readonly defaultLanguage: SupportLanguage = SupportLanguage.EN;\r\n    private _currentLanguage: SupportLanguage = null;\r\n    private _loadLanguagePromise: Promise<void> = null;\r\n\r\n    private constructor() {\r\n        super();\r\n    }\r\n\r\n    public static get Instance() {\r\n        if (!this.instance) {\r\n            this.instance = new I18n();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public get currentLanguage() {\r\n        return this._currentLanguage;\r\n    }\r\n\r\n    public get currentLanguageForWebview() \r\n    {\r\n        switch (this._currentLanguage) \r\n        {\r\n            //例外處理\r\n            case SupportLanguage.SCH:\r\n                return 'zh-chs';\r\n            case SupportLanguage.TCH:\r\n                return 'zh-cht';\r\n\r\n            default:\r\n                return this._currentLanguage.toString();\r\n        }\r\n    }\r\n\r\n    public get loadingTask() {\r\n        return this.loader.loadingTask;\r\n    }\r\n\r\n    private get cache() {\r\n        return this.caches[this._currentLanguage];\r\n    }\r\n    private set cache(assetCache: AssetCache) {\r\n        this.caches[this._currentLanguage] = assetCache;\r\n    }\r\n\r\n    public get isLoadingLanguage() {\r\n        return !!this._loadLanguagePromise;\r\n    }\r\n\r\n    /**\r\n     * 改變當前遊戲語言\r\n     * @param language 要使用的遊戲語言\r\n     */\r\n    public async changeLanguage(language: string) {\r\n        if (this.isLoadingLanguage) {\r\n            await this._loadLanguagePromise;\r\n        }\r\n        if (!language || language === this._currentLanguage) {\r\n            return;\r\n        }\r\n        const targetLanguage: SupportLanguage = SupportLanguage.contains(language) ? language : this.getFallbackLanguage(language);\r\n        this.handleTitleTranlation(targetLanguage);\r\n        if (!this.caches[targetLanguage]) {\r\n            this.caches[targetLanguage] = new AssetCache();\r\n            this._loadLanguagePromise = this.loader.loadLanguage(targetLanguage, this.caches[targetLanguage]);\r\n            await this._loadLanguagePromise;\r\n            this._loadLanguagePromise = null;\r\n        }\r\n        this._currentLanguage = targetLanguage;\r\n        this.emit(I18n.EVENT_TYPE.LanguageChanged);\r\n    }\r\n\r\n    public waitForLanguageLoaded() {\r\n        if (this._loadLanguagePromise) {\r\n            return this._loadLanguagePromise;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * 取得多語系物件資訊\r\n     * @param key \r\n     * @returns \r\n     */\r\n    public getNodeSetting(key: string): string {\r\n        const data = { ...this.cache.get(JsonAsset, 'nodeSetting')?.json };\r\n        const result: string = data[key];\r\n        if (!result) {\r\n            warn(`Can't find data : ${key} in language: ${this._currentLanguage}`);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 將要顯示的訊息翻譯成目標語言\r\n     * @param key 要顯示的訊息\r\n     * @returns 翻譯後文本\r\n     */\r\n    public getMessage(key: string): string {\r\n        const messages = { ...this.cache.get(JsonAsset, 'errorMessage').json, ...this.cache.get(JsonAsset, 'text')?.json};\r\n        const resultMessage: string = messages[key];\r\n        if (!resultMessage) {\r\n            warn(`Can't find message: ${key} in language: ${this._currentLanguage}`);\r\n        }\r\n        return resultMessage;\r\n    }\r\n\r\n    /**\r\n     * 根據目標圖片取得當前語言中對應的 spriteFrame\r\n     * @param key 目標圖片鍵\r\n     */\r\n    public getSpriteFrame(key: string): SpriteFrame {\r\n        const [a, b] = key.split('@');\r\n        let resultSpriteFrame: SpriteFrame = null;\r\n        if (b) {\r\n            const spriteAtlas = this.cache.get(SpriteAtlas, a);\r\n            if (!spriteAtlas) {\r\n                warn(`Can't find spriteAtlas: ${a} in language: ${this._currentLanguage}`);\r\n            } else {\r\n                resultSpriteFrame = spriteAtlas.getSpriteFrame(b);\r\n            }\r\n        } else {\r\n            resultSpriteFrame = this.cache.get(SpriteFrame, a);\r\n        }\r\n        if (!resultSpriteFrame) {\r\n            warn(`Can't find spriteFrame: ${key} in language: ${this._currentLanguage}`);\r\n        }\r\n        return resultSpriteFrame;\r\n    }\r\n\r\n    public getSkeletonData(key: string): sp.SkeletonData {\r\n        const resultSkeletonData = this.cache.get(sp.SkeletonData, key);\r\n        if (!resultSkeletonData) {\r\n            warn(`Can't find skeleton data: ${key} in language: ${this._currentLanguage}`);\r\n        }\r\n        return resultSkeletonData;\r\n    }\r\n\r\n    private handleTitleTranlation(targetLanguage: SupportLanguage) {\r\n        document.title = 'Hilo';\r\n    }\r\n\r\n    /**\r\n     * 取得替代語言\r\n     * @param language 要被替換掉的語言\r\n     */\r\n    public getFallbackLanguage(language: string): SupportLanguage {\r\n        const fallBackLanguage = fallbackLanguages[language];\r\n        if (!fallBackLanguage) {\r\n            return this.defaultLanguage;\r\n        }\r\n        if (SupportLanguage.contains(fallBackLanguage)) {\r\n            return fallBackLanguage;\r\n        }\r\n        return this.getFallbackLanguage(fallBackLanguage);\r\n    }\r\n}\r\n","import { SupportLanguage } from './Config/support.config';\r\n\r\nexport type ILocaleDataSet<T> = { [value in SupportLanguage]: T };\r\n\r\nexport class LocaleDataSet<T> implements ILocaleDataSet<T> {\r\n    eng: T;\r\n    sch: T;\r\n    tch: T;\r\n    ja: T;\r\n    vi: T;\r\n    pt: T;\r\n    es: T;\r\n\r\n    public getData(language: SupportLanguage) {\r\n        return this[language];\r\n    }\r\n}\r\n","import { Asset, resources, SpriteFrame } from 'cc';\r\nimport AssetCache from './AssetCache';\r\nimport CompositeLoadingTask from '../Toolkit/Helper/LoadingTask/CompositeLoadingTask';\r\nimport { SupportLanguage } from './Config/support.config';\r\nimport { assetPathConfig, cacheableAssetTypeMap, CacheableAssetTypeName } from './Config/assetPath.config';\r\n\r\nexport default class I18nLoader {\r\n    protected _loadingTask: CompositeLoadingTask = null;\r\n\r\n    public get loadingTask() {\r\n        return this._loadingTask;\r\n    }\r\n\r\n    public async loadLanguage(language: SupportLanguage, cache: AssetCache): Promise<void> {\r\n        this._loadingTask = new CompositeLoadingTask(`i18n::load-${language}`);\r\n        await Promise.all(\r\n            Object.entries(assetPathConfig).map(async ([assetTypeName, assetPathMap]) => {\r\n                const assetType = cacheableAssetTypeMap[assetTypeName as CacheableAssetTypeName];\r\n                await Promise.all(\r\n                    Object.entries(assetPathMap).map(async ([assetName, path]) => {\r\n                        const asset = await this.loadAsset(language, `${assetTypeName}/${path}`, assetType);\r\n                        cache.set(assetType, assetName, asset);\r\n                    })\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    private async loadAsset<T extends typeof Asset>(language: SupportLanguage, path: string, assetType: T): Promise<InstanceType<T>> {\r\n        return this._loadingTask.addSimpleTask(\r\n            `i18n::load-${path}`,\r\n            new Promise<InstanceType<T>>((resolve, reject) => {\r\n                resources.load(`i18n/${language}/${path}${(assetType as any) === SpriteFrame ? '/spriteFrame' : ''}`, assetType, (error, asset) => {\r\n                    if (error) {\r\n                        return reject(error);\r\n                    }\r\n                    return resolve(asset as InstanceType<T>);\r\n                });\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Label } from 'cc';\r\n\r\ndeclare module 'cc' {\r\n    interface Label {\r\n        registerTextChangeCallback(callback: (value: string) => string): void;\r\n        unregisterTextChangeCallback(callback: (value: string) => string): void;\r\n        textChangeCallbackList: ((value: string) => string)[];\r\n    }\r\n}\r\n\r\nLabel.prototype.registerTextChangeCallback = function registerTextChangeCallback(callback: (this: Label, value: string) => string) {\r\n    this.textChangeCallbackList = this.textChangeCallbackList ?? [];\r\n    this.textChangeCallbackList.push(callback);\r\n};\r\n\r\nLabel.prototype.unregisterTextChangeCallback = function unregisterTextChangeCallback(callback: (this: Label, value: string) => string) {\r\n    const index = this.textChangeCallbackList?.indexOf(callback);\r\n    if (index !== -1) {\r\n        this.textChangeCallbackList.splice(index);\r\n    }\r\n};\r\n\r\nconst originalDescriptor = Object.getOwnPropertyDescriptor(Label.prototype, 'string');\r\nconst originSetter = originalDescriptor.set;\r\noriginalDescriptor.set = function set(this: Label, value: string) {\r\n    let finalString: string = value;\r\n    this.textChangeCallbackList?.forEach((callback) => {\r\n        finalString = callback(finalString);\r\n    });\r\n    originSetter.call(this, finalString);\r\n};\r\nObject.defineProperty(Label.prototype, 'string', originalDescriptor);\r\n","// eslint-disable-next-line max-classes-per-file\r\nimport { Component, Label, _decorator } from 'cc';\r\nimport { getLocaleStringLength } from '../Utils/Utility';\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode } = _decorator;\r\n\r\n@ccclass('FontSizeConstraint')\r\nclass LabelPropertyConstraint {\r\n    @property\r\n    public digit: number = 0;\r\n\r\n    @property\r\n    public fontSize: number = 0;\r\n\r\n    @property\r\n    public lineHeight: number = 0;\r\n}\r\n\r\n@ccclass('LabelPropertyAdjustor')\r\n@requireComponent(Label)\r\n@executeInEditMode\r\nexport default class LabelPropertyAdjustor extends Component {\r\n    @property([LabelPropertyConstraint])\r\n    private constraints: LabelPropertyConstraint[] = [];\r\n\r\n    private label: Label = null;\r\n\r\n    private previousDigit = 0;\r\n\r\n    protected onLoad() {\r\n        this.label = this.getComponent(Label);\r\n        this.label.registerTextChangeCallback((str) => {\r\n            this.updateFontSize(str);\r\n            return str;\r\n        });\r\n        this.constraints.sort((a, b) => b.digit - a.digit);\r\n    }\r\n\r\n    protected start() {\r\n        this.updateFontSize(this.label.string);\r\n    }\r\n\r\n    private updateFontSize(str: string) {\r\n        const currentDigit = getLocaleStringLength(str.replace(/[.|,]/g, ''));\r\n        if (currentDigit === this.previousDigit) {\r\n            return;\r\n        }\r\n        this.previousDigit = currentDigit;\r\n        for (let i = 0; i < this.constraints.length; i++) {\r\n            const constraint = this.constraints[i];\r\n            if (currentDigit >= constraint.digit) {\r\n                this.label.fontSize = constraint.fontSize;\r\n                this.label.lineHeight = constraint.lineHeight;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Color, Component, Label, Node, Toggle, _decorator } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('LanguageItem')\r\nexport class LanguageItem extends Component \r\n{\r\n    @property(Label)\r\n    private languageName: Label = null;\r\n    @property(Node)\r\n    private line: Node = null;\r\n    @property(Toggle)\r\n    private toggle: Toggle = null;\r\n\r\n    protected onLoad()\r\n    {\r\n        this.toggle.isChecked = false;\r\n    }\r\n\r\n    public setLanguageName(name: string)\r\n    {\r\n        this.languageName.string = name;\r\n    }\r\n\r\n    public setLineActive(active: boolean)\r\n    {\r\n        this.line.active = active;\r\n    }\r\n\r\n    public setColor(color: Color)\r\n    {\r\n        this.languageName.color = color;\r\n    }\r\n\r\n    public getToggle(): Toggle\r\n    {\r\n        return this.toggle;\r\n    }\r\n}\r\n","import { Color, instantiate, Node, Prefab, Size, UITransform, Vec3, _decorator } from 'cc';\r\nimport { SupportLanguage } from '../../I18n/Config/support.config';\r\nimport I18n from '../../I18n/I18n';\r\nimport AnimatedPage from '../../Toolkit/Components/Page/AnimatedPage';\r\nimport { HexColorCode } from '../Config/game.config';\r\nimport { LanguageItem } from './LanguageItem';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('LanguageSetting')\r\nexport class LanguageSetting extends AnimatedPage \r\n{\r\n    @property(UITransform)\r\n    private content: UITransform = null;\r\n    @property(Prefab)\r\n    private item: Prefab = null;\r\n\r\n    private readonly itemHeight: number = 100;\r\n    private readonly whiteColor: Color = new Color(HexColorCode.White);\r\n    private readonly yellowColor: Color = new Color(HexColorCode.Yellow);\r\n    private readonly languageName: string[] = \r\n    [\r\n        'English',\r\n        '简体中文',\r\n        '繁體中文',\r\n        'Tiếng Việt',\r\n        '日本語',\r\n        'Español',\r\n        'Português',\r\n        '조선말',\r\n        'Bahasa Indonesia',\r\n        'ไทย',\r\n    ];\r\n\r\n    private supportLanguageNameList: string[] = [];\r\n    private languageItemList: LanguageItem[] = [];\r\n    //重複利用記憶體\r\n    private isChoose: boolean = false;\r\n    private labelColor: Color = new Color();\r\n\r\n    protected onLoad() \r\n    {\r\n        super.onLoad();\r\n        this.getSupportLanguageName();\r\n        this.initOptionsPage();\r\n    }\r\n    \r\n    public async open() \r\n    {\r\n        super.open();\r\n    }\r\n    \r\n    private getSupportLanguageName()\r\n    {\r\n        const supportLanguageValue = Object.values(SupportLanguage);\r\n        for (let i = 0; i < supportLanguageValue.length; i++)\r\n        {\r\n            this.supportLanguageNameList.push(supportLanguageValue[i].toString());\r\n        }\r\n    }\r\n\r\n    private initOptionsPage()\r\n    {\r\n        const count: number = Object.keys(SupportLanguage).length;\r\n        let item: Node = null;\r\n        let position: Vec3 = new Vec3();\r\n        let languageItem: LanguageItem = null;\r\n        this.content.setContentSize(new Size(720, this.itemHeight * count));\r\n\r\n        //add option\r\n        for (let i = 0; i < count; i++)\r\n        {\r\n            this.isChoose = this.getIsChoose(i);\r\n            this.labelColor = this.getLanguageNameColor();\r\n            position.set(0, i * this.itemHeight * -1 - 25);\r\n            item = instantiate(this.item);\r\n            item.setParent(this.content.node);\r\n            item.position = position;\r\n            item.name = this.languageName[i];\r\n            languageItem = item.getComponent(LanguageItem);\r\n            languageItem.setLanguageName(this.languageName[i]);\r\n            languageItem.setLineActive(i != count - 1);\r\n            languageItem.setColor(this.labelColor);\r\n            this.languageItemList.push(languageItem);\r\n\r\n            //add toggle event\r\n            languageItem.getToggle().node.on('toggle', async () => \r\n            {\r\n                await I18n.Instance.changeLanguage(this.supportLanguageNameList[i]);\r\n                this.changeState();\r\n            });\r\n        }\r\n        this.changeState();\r\n    }\r\n\r\n    private getCurrentLanguageIndex(): number\r\n    {\r\n        for (let i = 0; i < this.supportLanguageNameList.length; i++)\r\n        {\r\n            if (I18n.Instance.currentLanguage.toString() == this.supportLanguageNameList[i])\r\n            {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        //理論上不會執行到這 以防萬一還是return預設的越南語系\r\n        return 3;\r\n    }\r\n\r\n    private getIsChoose(chooseIndex: number): boolean\r\n    {\r\n        return this.getCurrentLanguageIndex() == chooseIndex;\r\n    }\r\n\r\n    private getLanguageNameColor(): Color\r\n    {\r\n        return this.isChoose ? this.yellowColor : this.whiteColor;\r\n    }\r\n\r\n    private changeState()\r\n    {\r\n        for (let i = 0; i < this.languageItemList.length; i++)\r\n        {\r\n            this.isChoose = this.getIsChoose(i);\r\n            this.labelColor = this.getLanguageNameColor();\r\n            this.languageItemList[i].setColor(this.labelColor);\r\n            this.languageItemList[i].getToggle().isChecked = this.isChoose;\r\n        }\r\n    }\r\n}\r\n","import { EventTarget, log, error } from 'cc';\r\n\r\nexport default class LoadingTask extends EventTarget {\r\n    private _completeCount: number;\r\n    private _totalCount: number;\r\n    private _isFinished: boolean;\r\n    private _isSuccess: boolean;\r\n    private _error: Error = null;\r\n\r\n    constructor(private _name: string) {\r\n        super();\r\n        log(`%c=== Task ${_name} Created ===`, 'color:yellow');\r\n        this._completeCount = 0;\r\n        this._totalCount = 0;\r\n        this._isFinished = false;\r\n        this._isSuccess = false;\r\n    }\r\n\r\n    public get name() {\r\n        return this._name;\r\n    }\r\n\r\n    public get completeCount() {\r\n        return this._completeCount;\r\n    }\r\n\r\n    public get totalCount() {\r\n        return this._totalCount;\r\n    }\r\n\r\n    public get isFinished() {\r\n        return this._isFinished;\r\n    }\r\n\r\n    public get isSuccess() {\r\n        return this._isSuccess;\r\n    }\r\n\r\n    public get error() {\r\n        return this._error;\r\n    }\r\n\r\n    public waitForFinish() {\r\n        if (this.isFinished) {\r\n            return (this.isSuccess ? Promise.resolve : Promise.reject)();\r\n        }\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.once('onFinished', () => {\r\n                (this.isSuccess ? resolve : reject)();\r\n            });\r\n        });\r\n    }\r\n\r\n    public waitForStart() {\r\n        if (this.completeCount !== 0) {\r\n            return Promise.resolve();\r\n        }\r\n        return new Promise<void>((resolve) => {\r\n            this.once('onProgress', resolve);\r\n        });\r\n    }\r\n\r\n    public progress(completeCount: number, totalCount: number) {\r\n        this._completeCount = completeCount;\r\n        this._totalCount = totalCount;\r\n        // log(`Task: ${this.name}, progrss: ${((this.completeCount / this.totalCount) * 100).toFixed(2)}%`);\r\n        this.emit('onProgress');\r\n    }\r\n\r\n    public finish(err: Error) {\r\n        if (err) {\r\n            error(err);\r\n        }\r\n        this._error = err;\r\n        this._isSuccess = !err;\r\n        this._isFinished = true;\r\n        log(`%c=== Task: ${this.name} finished (${this.isSuccess ? 'Success' : 'Failed'}) ===`, 'color:yellow');\r\n        this.emit('onFinished');\r\n    }\r\n}\r\n","import { Component, _decorator } from 'cc';\r\nimport LocalizedComponent from './LocalizedComponent';\r\n\r\nconst { property } = _decorator;\r\n\r\nexport default abstract class LocalizedAsset<T extends Component> extends LocalizedComponent {\r\n    @property\r\n    private _key: string = '';\r\n\r\n    @property\r\n    public set key(key: string) {\r\n        this._key = key;\r\n        this.onKeyChange();\r\n    }\r\n    public get key(): string {\r\n        return this._key;\r\n    }\r\n\r\n    private _target: T = null;\r\n\r\n    public get target(): T {\r\n        if (!this._target) {\r\n            this._target = this.getTarget();\r\n        }\r\n        return this._target;\r\n    }\r\n    public set target(component: T) {\r\n        this._target = component;\r\n    }\r\n\r\n    public abstract reset(): void;\r\n\r\n    protected abstract getTarget(): T;\r\n\r\n    protected abstract onKeyChange(): void;\r\n\r\n    protected onLanguageChange() {\r\n        this.onKeyChange();\r\n    }\r\n}\r\n","import { Component, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\n\r\nconst { executionOrder } = _decorator;\r\n\r\n@executionOrder(-1)\r\nexport default abstract class LocalizedComponent extends Component {\r\n    protected onLoad() {\r\n        I18n.Instance.on(I18n.EVENT_TYPE.LanguageChanged, this.onLanguageChange, this);\r\n    }\r\n\r\n    protected start() {\r\n        this.onLanguageChange();\r\n    }\r\n\r\n    protected onDestroy() {\r\n        I18n.Instance.targetOff(this);\r\n    }\r\n\r\n    protected abstract onLanguageChange(): void;\r\n}\r\n","import { Label, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\nimport LocalizedAsset from './LocalizedAsset';\r\n\r\nconst { ccclass, requireComponent, menu } = _decorator;\r\n\r\n@ccclass('LocalizedFontSize')\r\n@requireComponent(Label)\r\n@menu('Internationalization/LocalizedFontSize')\r\nexport default class LocalizedFontSize extends LocalizedAsset<Label> {\r\n    private fontSize: number = 0;\r\n    private fontSizeKey: string = \"\";\r\n\r\n    public reset() \r\n    {\r\n        this.target.string = '';\r\n    }\r\n\r\n    protected getTarget(): Label {\r\n        return this.getComponent(Label);\r\n    }\r\n\r\n    protected async onKeyChange(): Promise<void>\r\n    {\r\n        if (!this.target) \r\n        {\r\n            throw new Error(\"Target can't be empty\");\r\n        }\r\n\r\n        if (!I18n.Instance.currentLanguage) \r\n        {\r\n            if (I18n.Instance.isLoadingLanguage) \r\n            {\r\n                await I18n.Instance.waitForLanguageLoaded();\r\n            } \r\n            else \r\n            {\r\n                throw new Error('Set current language first');\r\n            }\r\n        }\r\n\r\n        this.fontSizeKey = `${this.node.name}-FontSize`;\r\n        this.fontSize = Number(I18n.Instance.getNodeSetting(this.fontSizeKey));\r\n        if (this.fontSize)\r\n        {\r\n            this.target.fontSize = this.fontSize;\r\n            this.target.lineHeight = this.fontSize;\r\n        }\r\n        else\r\n        {\r\n            throw new Error(`Font size data error, node name : ${this.node.name} `);\r\n        }\r\n    }\r\n}\r\n","import { Label, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\nimport LocalizedAsset from './LocalizedAsset';\r\nimport { fillTextArgument } from '../../Toolkit/Utils/Utility';\r\n\r\nconst { ccclass, requireComponent, menu } = _decorator;\r\n\r\n@ccclass('LocalizedLabel')\r\n@requireComponent(Label)\r\n@menu('Internationalization/LocalizedLabel')\r\nexport default class LocalizedLabel extends LocalizedAsset<Label> {\r\n    protected async onKeyChange(): Promise<void> {\r\n        if (!this.target) {\r\n            throw new Error(\"Target can't be empty\");\r\n        }\r\n        if (!I18n.Instance.currentLanguage) {\r\n            if (I18n.Instance.isLoadingLanguage) {\r\n                await I18n.Instance.waitForLanguageLoaded();\r\n            } else {\r\n                throw new Error('Set current language first');\r\n            }\r\n        }\r\n        const [messageKey, ...messageArgs] = this.key.split('|');\r\n        this.target.string = fillTextArgument(I18n.Instance.getMessage(messageKey) ?? messageKey, messageArgs);\r\n    }\r\n\r\n    public reset() {\r\n        this.target.string = '';\r\n    }\r\n\r\n    protected getTarget(): Label {\r\n        return this.getComponent(Label);\r\n    }\r\n}\r\n","import { Vec3, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\nimport LocalizedAsset from './LocalizedAsset';\r\nimport { Node } from 'cc';\r\n\r\nconst { ccclass, menu } = _decorator;\r\n\r\n@ccclass('LocalizedPosition')\r\n@menu('Internationalization/LocalizedPosition')\r\nexport default class LocalizedPosition extends LocalizedAsset<any> {\r\n    private positionData: Array<string> = new Array<string>();\r\n    private positionX: number = 0;\r\n    private positionY: number = 0;\r\n    private positionKey: string = \"\";\r\n    private position: Vec3 = new Vec3();\r\n\r\n    public reset() \r\n    {\r\n        this.target = null;\r\n        this.positionData = null;\r\n    }\r\n\r\n    protected getTarget(): Node {\r\n        return this.node;\r\n    }\r\n\r\n    protected async onKeyChange(): Promise<void>\r\n    {\r\n        if (!this.target) \r\n        {\r\n            throw new Error(\"Target can't be empty\");\r\n        }\r\n\r\n        if (!I18n.Instance.currentLanguage) \r\n        {\r\n            if (I18n.Instance.isLoadingLanguage) \r\n            {\r\n                await I18n.Instance.waitForLanguageLoaded();\r\n            } \r\n            else \r\n            {\r\n                throw new Error('Set current language first');\r\n            }\r\n        }\r\n\r\n        this.positionKey = `${this.node.name}-Position`\r\n        this.positionData = I18n.Instance.getNodeSetting(this.positionKey).split(\",\");\r\n        this.positionX = Number(this.positionData[0]);\r\n        this.positionY = Number(this.positionData[1]);\r\n        this.position.set(this.positionX, this.positionY);\r\n        if (this.positionData && !Number.isNaN(this.positionX) && !Number.isNaN(this.positionY)) \r\n        {\r\n            this.target.position = this.position;\r\n        }\r\n        else\r\n        {\r\n            throw new Error(`Position data error, node name : ${this.node.name} `);\r\n        }\r\n    }\r\n}\r\n","import { sp, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\nimport LocalizedAsset from './LocalizedAsset';\r\n\r\nconst { ccclass, requireComponent, menu } = _decorator;\r\n\r\n@ccclass('LocalizedSkeleton')\r\n@requireComponent(sp.Skeleton)\r\n@menu('Internationalization/LocalizedSkeleton')\r\nexport default class LocalizedSkeleton extends LocalizedAsset<sp.Skeleton> {\r\n    protected async onKeyChange(): Promise<void> {\r\n        if (!this.target) {\r\n            throw new Error(\"Target can't be empty\");\r\n        }\r\n        if (!I18n.Instance.currentLanguage) {\r\n            if (I18n.Instance.isLoadingLanguage) {\r\n                await I18n.Instance.waitForLanguageLoaded();\r\n            } else {\r\n                throw new Error('Set current language first');\r\n            }\r\n        }\r\n        const skeletonData = I18n.Instance.getSkeletonData(this.key);\r\n        if (skeletonData) {\r\n            const state = this.target.getState();\r\n            this.target.skeletonData = skeletonData;\r\n            if (state) {\r\n                state.tracks.forEach((track) => {\r\n                    const {\r\n                        trackIndex,\r\n                        loop,\r\n                        trackTime,\r\n                        animation: { name: animationName },\r\n                    } = track;\r\n                    this.target.setAnimation(trackIndex, animationName, loop).trackTime = trackTime;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this.target.skeletonData = null;\r\n    }\r\n\r\n    protected getTarget(): sp.Skeleton {\r\n        return this.getComponent(sp.Skeleton);\r\n    }\r\n}\r\n","import { Sprite, _decorator } from 'cc';\r\nimport I18n from '../I18n';\r\nimport LocalizedAsset from './LocalizedAsset';\r\n\r\nconst { ccclass, requireComponent, menu } = _decorator;\r\n\r\n@ccclass('LocalizedSprite')\r\n@requireComponent(Sprite)\r\n@menu('Internationalization/LocalizedSprite')\r\nexport default class LocalizedSprite extends LocalizedAsset<Sprite> {\r\n    protected async onKeyChange(): Promise<void> {\r\n        if (!this.target) {\r\n            throw new Error(\"Target can't be empty\");\r\n        }\r\n        if (!I18n.Instance.currentLanguage) {\r\n            if (I18n.Instance.isLoadingLanguage) {\r\n                await I18n.Instance.waitForLanguageLoaded();\r\n            } else {\r\n                throw new Error('Set current language first');\r\n            }\r\n        }\r\n        this.target.spriteFrame = I18n.Instance.getSpriteFrame(this.key);\r\n    }\r\n\r\n    public reset() {\r\n        this.target.spriteFrame = null;\r\n    }\r\n\r\n    protected getTarget(): Sprite {\r\n        return this.getComponent(Sprite);\r\n    }\r\n}\r\n","import { _decorator } from 'cc';\r\nimport LocalizedLabel from '../../I18n/LocalizedComponent/LocalizedLabel';\r\nimport { Button } from 'cc';\r\nimport { PlayerInfo } from '../PlayerInfo';\r\nimport { GameState, HiloGameLogic } from '../Hilo/HiloGameLogic';\r\nimport AnimatedPage from '../../Toolkit/Components/Page/AnimatedPage';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MessageDialog')\r\nexport default class MessageDialog extends AnimatedPage {\r\n    @property(LocalizedLabel)\r\n    private readonly content: LocalizedLabel = null;\r\n\r\n    protected async onLoad() {\r\n        super.onLoad();\r\n        this.closeButton.node.on(Button.EventType.CLICK, () => \r\n        {\r\n            PlayerInfo.getInstance().isNotEnoughMsgExist = false;\r\n        });\r\n    }\r\n\r\n    public display(message: string) \r\n    {\r\n        if (message == \"insufficient balance\" || message == \"3001\")\r\n        {\r\n            PlayerInfo.getInstance().isNotEnoughMsgExist = true;\r\n            if (HiloGameLogic.getInstance().getGameState() == GameState.GAME_STATE_BET)\r\n            {\r\n                HiloGameLogic.getInstance().setGameState(GameState.GAME_STATE_START);\r\n            }\r\n        }\r\n        this.content.key = message;\r\n        this.open();\r\n    }\r\n\r\n    protected async playOpenAnimation(): Promise<void> {\r\n        await super.playOpenAnimation();\r\n    }\r\n\r\n    protected async playCloseAnimation(): Promise<void> {\r\n        await super.playCloseAnimation();\r\n    }\r\n}\r\n","import { Component, instantiate, Node, NodePool, Prefab, _decorator } from \"cc\";\r\nimport { StartUp } from \"./StartUp\";\r\nimport MessageDialog from \"./GameObject/MessageDialog\";\r\nimport Application from \"../Application/Application\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"MessageManager\")\r\nexport default class MessageManager extends Component {\r\n  @property(Node)\r\n  private readonly messageDialogRoot: Node = null;\r\n\r\n  @property(Prefab)\r\n  private messageDialogPrefab: Prefab = null;\r\n\r\n  private messageDialogPool: NodePool = new NodePool();\r\n\r\n  private fatalErrorMessage: MessageDialog = null;\r\n  private gameStateErrorMessage: MessageDialog = null;\r\n\r\n  protected onLoad() {\r\n    StartUp.getInstance().attachMessageManager(this);\r\n  }\r\n\r\n  public async showFatalError(message: string) {\r\n    if (this.fatalErrorMessage) {\r\n      return;\r\n    }\r\n    this.fatalErrorMessage = await this.getMessageDialog();\r\n    this.fatalErrorMessage.node.once(MessageDialog.EventType.CLOSE, () => {\r\n      this.fatalErrorMessage = null;\r\n      StartUp.getInstance().closeGame();\r\n    });\r\n    if (Application.Instance.config.hideExit) {\r\n      // hide exit button if needed\r\n      this.fatalErrorMessage.closeButton.node.active = false;\r\n    }\r\n    this.fatalErrorMessage.node.setSiblingIndex(\r\n      this.messageDialogRoot.children.length - 1\r\n    );\r\n    this.fatalErrorMessage.display(message);\r\n\r\n    // if (this.messageDialogRoot) {\r\n    //     this.messageDialogRoot.children.forEach((node) => node.getComponent(MessageDialog).close());\r\n    // }\r\n  }\r\n\r\n  public async showGameStateError(message: string) {\r\n    // can't open when displaying fatal error message\r\n    if (this.fatalErrorMessage) {\r\n      return;\r\n    }\r\n    if (this.gameStateErrorMessage) {\r\n      return;\r\n    }\r\n    this.gameStateErrorMessage = await this.getMessageDialog();\r\n    this.gameStateErrorMessage.node.once(MessageDialog.EventType.CLOSE, () => {\r\n      this.gameStateErrorMessage = null;\r\n    });\r\n    this.gameStateErrorMessage.node.setSiblingIndex(\r\n      this.messageDialogRoot.children.length - 1\r\n    );\r\n    this.gameStateErrorMessage.display(message);\r\n  }\r\n\r\n  public hideGameStateError() {\r\n    this.gameStateErrorMessage?.close();\r\n  }\r\n\r\n  public async showHint(message: string) {\r\n    // can't open when displaying fatal error message\r\n    if (this.fatalErrorMessage) {\r\n      return;\r\n    }\r\n    (await this.getMessageDialog()).display(message);\r\n  }\r\n\r\n  private async getMessageDialog() {\r\n    const node =\r\n      this.messageDialogPool.get() ?? (await this.spawnMessageDialog());\r\n    this.messageDialogRoot.addChild(node);\r\n    return node.getComponent(MessageDialog);\r\n  }\r\n\r\n  private async spawnMessageDialog() {\r\n    const node = instantiate(this.messageDialogPrefab);\r\n    node.on(MessageDialog.EventType.CLOSE, () =>\r\n      this.messageDialogPool.put(node)\r\n    );\r\n    return node;\r\n  }\r\n}\r\n","import { _decorator, Component, Node, Canvas, sys } from 'cc';\r\nimport Nosleep from 'nosleep.js';\r\n\r\nconst { ccclass, requireComponent } = _decorator;\r\nlet noSleep: Nosleep;\r\nif (sys.isMobile) {\r\n    noSleep = new Nosleep();\r\n}\r\n\r\n@ccclass('NoSleepController')\r\n@requireComponent(Canvas)\r\nexport class NoSleepController extends Component {\r\n    protected onLoad() {\r\n        if (!sys.isMobile || noSleep.isEnabled) {\r\n            return;\r\n        }\r\n        this.node.on(Node.EventType.TOUCH_END, this._onTouchEnd, this, true);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this, true);\r\n    }\r\n\r\n    private _onTouchEnd() {\r\n        noSleep.enable().then(() => {\r\n            this.node.off(Node.EventType.TOUCH_END, this._onTouchEnd, this, true);\r\n        });\r\n    }\r\n}\r\n","import * as cc from 'cc';\r\n\r\nconst { ccclass, property, requireComponent, executeInEditMode } = cc._decorator;\r\n\r\nexport interface IFormatOption {\r\n    displayDecimal: boolean;\r\n    displayDecimalZero: boolean;\r\n    displayLeadingZero: boolean;\r\n    displayThousands: boolean;\r\n    displayZero: boolean;\r\n    maxIntegerLength: number;\r\n    maxDecimalLength: number;\r\n    prefixText: string;\r\n    posfixText: string;\r\n}\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\n@executeInEditMode\r\nexport default class NumberFormatter extends cc.Component implements IFormatOption {\r\n    @property({ tooltip: '顯示小數' })\r\n    public displayDecimal: boolean = false;\r\n\r\n    @property({ tooltip: '小數點不足的位數補0' })\r\n    public displayDecimalZero: boolean = false;\r\n\r\n    @property({ tooltip: '整數不足的位數補0' })\r\n    public displayLeadingZero: boolean = false;\r\n\r\n    @property({ tooltip: '每三位數加入逗號' })\r\n    public displayThousands: boolean = false;\r\n\r\n    @property({ tooltip: '是否顯示0' })\r\n    public displayZero: boolean = false;\r\n\r\n    @property({ tooltip: '整數最高位數' })\r\n    public maxIntegerLength: number = 0;\r\n\r\n    @property({ tooltip: '小數最高位數' })\r\n    public maxDecimalLength: number = 0;\r\n\r\n    @property({ tooltip: '置於最前方的字串' })\r\n    public prefixText: string = '';\r\n\r\n    @property({ tooltip: '置於最後方的字串' })\r\n    public posfixText: string = '';\r\n\r\n    @property\r\n    public set value(value: number) {\r\n        if (this._value === value) {\r\n            return;\r\n        }\r\n        this._value = value;\r\n        this.updateTextDisplay();\r\n    }\r\n    public get value() {\r\n        return this._value;\r\n    }\r\n\r\n    @property\r\n    private _value: number = 0;\r\n\r\n    private label: cc.Label = null;\r\n\r\n    protected onLoad() {\r\n        this.label = this.getComponent(cc.Label);\r\n    }\r\n\r\n    protected start() {\r\n        this.updateTextDisplay();\r\n    }\r\n\r\n    public updateTextDisplay() {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        if (!this.label) {\r\n            return;\r\n        }\r\n        this.label.string = NumberFormatter.format(this.value, {\r\n            displayDecimal: this.displayDecimal,\r\n            displayDecimalZero: this.displayDecimalZero,\r\n            displayLeadingZero: this.displayLeadingZero,\r\n            displayThousands: this.displayThousands,\r\n            displayZero: this.displayZero,\r\n            maxIntegerLength: this.maxIntegerLength,\r\n            maxDecimalLength: this.maxDecimalLength,\r\n            prefixText: this.prefixText,\r\n            posfixText: this.posfixText,\r\n        });\r\n    }\r\n\r\n    public static format(value: number, formatOption: Partial<IFormatOption>): string {\r\n        const {\r\n            displayDecimal = false,\r\n            displayDecimalZero = false,\r\n            displayLeadingZero = false,\r\n            displayThousands = false,\r\n            displayZero = false,\r\n            maxIntegerLength = 0,\r\n            maxDecimalLength = 0,\r\n            prefixText = '',\r\n            posfixText = '',\r\n        } = formatOption;\r\n\r\n        // fraction part\r\n\r\n        // 固定顯示小數點後幾位\r\n        const decimalPointNumber = displayDecimal ? maxDecimalLength : 0;\r\n        const precision = 10 ** decimalPointNumber;\r\n        let precisionValue = value * precision;\r\n        // 去讀小數點誤差\r\n        precisionValue = Math.abs(precisionValue - Math.round(precisionValue)) < 0.000001 ? Math.round(precisionValue) : precisionValue;\r\n        let resultText = (Math.trunc(precisionValue) / precision).toFixed(decimalPointNumber);\r\n\r\n        // 清除小數點的 0\r\n        if (!displayDecimalZero) {\r\n            resultText = resultText.replace(/(\\d+\\.\\d*[1-9]|\\d+)(\\.?0*)/, '$1');\r\n        }\r\n\r\n        // integer part\r\n\r\n        // 前面添加 0\r\n        if (displayLeadingZero) {\r\n            const integerPart: RegExpMatchArray = resultText.match(/\\d+/);\r\n            resultText = resultText.replace(/(\\d+)/, `${'0'.repeat(maxIntegerLength - integerPart[0].length)}$1`);\r\n        }\r\n\r\n        // general\r\n\r\n        // 每三位數加入逗號\r\n        if (displayThousands) {\r\n            const texts: string[] = resultText.split('.');\r\n            resultText = texts[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,') + (texts[1] ? `.${texts[1]}` : '');\r\n        }\r\n\r\n        // 是否顯示 0\r\n        if (!displayZero && value === 0) {\r\n            resultText = '';\r\n        }\r\n\r\n        if (resultText !== '') {\r\n            resultText = `${prefixText}${resultText}${posfixText}`;\r\n        }\r\n\r\n        return resultText;\r\n    }\r\n}\r\n","import { Button, Component, Node, _decorator } from 'cc';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum PageEventType {\r\n    OPEN = 'Page::OPEN',\r\n    CLOSE = 'Page::CLOSE',\r\n}\r\n\r\n@ccclass('Page')\r\nexport default class Page extends Component {\r\n    public static readonly EventType = PageEventType;\r\n\r\n    @property(Node)\r\n    public readonly view: Node = null;\r\n\r\n    @property(Node)\r\n    public readonly mask: Node = null;\r\n\r\n    @property(Button)\r\n    public readonly openButton: Button = null;\r\n\r\n    @property(Button)\r\n    public readonly closeButton: Button = null;\r\n\r\n    @property\r\n    private readonly closeOnBlur: boolean = false;\r\n    public closeCallBack: Function = null;\r\n\r\n    public get isVisible() {\r\n        return this.view.active;\r\n    }\r\n\r\n    private _isFreezing = false;\r\n\r\n    protected set isFreezing(flag: boolean) {\r\n        this._isFreezing = flag;\r\n    }\r\n    public get isFreezing() {\r\n        return this._isFreezing;\r\n    }\r\n\r\n    protected onLoad() {\r\n        this.openButton?.node.on(Button.EventType.CLICK, () => {\r\n            this.open();\r\n        });\r\n        this.closeButton?.node.on(Button.EventType.CLICK, () => {\r\n            if (!this.closeCallBack)\r\n            {\r\n                this.close();\r\n            }\r\n            else\r\n            {\r\n                this.closeCallBack();\r\n            }\r\n        });\r\n        this.mask?.on(Node.EventType.TOUCH_END, () => {\r\n            if (this.closeOnBlur) {\r\n                this.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    public async open() {\r\n        if (this.isVisible || this._isFreezing) {\r\n            return;\r\n        }\r\n        this.view.active = true;\r\n        if (this.mask) {\r\n            this.mask.active = true;\r\n        }\r\n        this.node.emit(PageEventType.OPEN);\r\n        await this.playOpenAnimation();\r\n    }\r\n\r\n    public async close(isForce = false) {\r\n        if (!this.isVisible || (this._isFreezing && !isForce)) {\r\n            return;\r\n        }\r\n        await this.playCloseAnimation();\r\n        this.view.active = false;\r\n        if (this.mask) {\r\n            this.mask.active = false;\r\n        }\r\n        this.node.emit(PageEventType.CLOSE);\r\n    }\r\n\r\n    public waitForOpen() {\r\n        return new Promise((resolve) => {\r\n            this.node.once(Page.EventType.OPEN, resolve);\r\n        });\r\n    }\r\n\r\n    public waitForClose() {\r\n        return new Promise((resolve) => {\r\n            this.node.once(Page.EventType.CLOSE, resolve);\r\n        });\r\n    }\r\n\r\n    protected playOpenAnimation(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected playCloseAnimation(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","/**\r\n * 從 queryString取得目標 value\r\n * @param param 目標 key\r\n */\r\nfunction getParamSearch(param: string): string {\r\n    return new URL(document.location.href).searchParams.get(param);\r\n}\r\n\r\nnamespace Parameter {\r\n    /**\r\n     * 取得目標 value，若是找不到則回傳 default value\r\n     * @param paramKey 目標 key\r\n     * @param defaultValue 預設值\r\n     */\r\n    export function get(paramKey: string, defaultValue: string = null) \r\n    {\r\n        if (!getParamSearch(paramKey) || getParamSearch(paramKey) == \"\")\r\n        {\r\n            return defaultValue;\r\n        }\r\n        return getParamSearch(paramKey);\r\n    }\r\n}\r\n\r\nexport default Parameter;\r\n","import { BalanceResponseData } from \"../DTO/Balance.dto\";\r\nimport { BetRequestData, BetResponseData } from \"../DTO/Bet.dto\";\r\nimport { DebugRequestData } from \"../DTO/Debug.dto\";\r\nimport { CashoutRequestData, CashoutResponseData, SkipRequestData, SkipResponseData } from \"../DTO/Game.dto\";\r\nimport { LoginRequestData, LoginResponseData } from \"../DTO/Login.dto\";\r\nimport { EnterTableResponseData } from \"../DTO/Table.dto\";\r\n\r\nexport enum PathName \r\n{\r\n    Refresh = 'game.table.refresh',\r\n    Debug = 'game.table.debug',\r\n    Login = 'auth.login',\r\n    Balance = 'auth.balance',\r\n    Hall = 'game.halls',\r\n    EnterTable = 'game.table.entry',\r\n    ExitTable = 'game.table.exit',\r\n    Cashout = 'game.table.cashout',\r\n    Ack = 'game.ack',\r\n    Bet = 'game.table.bet',\r\n    Skip = 'game.table.skip',\r\n}\r\n\r\nexport type RequestResponseDataType = \r\n{\r\n    [PathName.Refresh]: [undefined, EnterTableResponseData];\r\n    [PathName.Debug]: [DebugRequestData, never];\r\n    [PathName.Login]: [LoginRequestData, LoginResponseData];\r\n    [PathName.Hall]: [undefined, undefined];\r\n    [PathName.EnterTable]: [undefined, EnterTableResponseData];\r\n    [PathName.ExitTable]: [undefined, undefined];\r\n    [PathName.Bet]: [BetRequestData, BetResponseData];\r\n    [PathName.Ack]: [undefined, never];\r\n    [PathName.Cashout]: [CashoutRequestData, CashoutResponseData];\r\n    [PathName.Skip]: [SkipRequestData, SkipResponseData];\r\n};\r\n\r\nexport type PublishDataType = \r\n{\r\n    [PathName.Login]: LoginResponseData;\r\n    [PathName.Balance]: BalanceResponseData;\r\n    [PathName.EnterTable]: EnterTableResponseData;\r\n    [PathName.ExitTable]: undefined;\r\n    [PathName.Bet]: BetResponseData;\r\n    [PathName.Cashout]: CashoutResponseData;\r\n    [PathName.Skip]: SkipResponseData;\r\n};\r\n","\r\nimport { Label, Sprite, SpriteFrame } from 'cc';\r\nimport { Color } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport NumberFormatter from '../../../Toolkit/Components/NumberFormatter';\r\nimport { HexColorCode } from '../../Config/game.config';\r\nimport DenomConverter from '../../Helper/DenomConverter';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerBetInfo')\r\nexport class PlayerBetInfo extends Component {\r\n    @property(Label)\r\n    private nickname: Label = null;\r\n    @property(NumberFormatter)\r\n    private betValue: NumberFormatter = null;\r\n    @property(NumberFormatter)\r\n    private multiplierValue: NumberFormatter = null;\r\n    @property(Sprite)\r\n    private background: Sprite = null;\r\n    @property(SpriteFrame)\r\n    private betFrame: SpriteFrame = null;\r\n    @property(SpriteFrame)\r\n    private cashoutFrame: SpriteFrame = null;\r\n\r\n    private _wager: number;\r\n    private _ID: number;\r\n\r\n    public get wager() {\r\n        return this._wager;\r\n    }\r\n    public get ID() {\r\n        return this._ID\r\n    };\r\n\r\n\r\n    public setInfo(nickname: string, betValue: number, multiplier: number, wager: number, id: number) {\r\n        this.nickname.string = nickname;\r\n        this.betValue.value = multiplier === 0 ? betValue : betValue * multiplier / 100;\r\n        this._wager = wager;\r\n        this._ID = id;\r\n\r\n        if (multiplier !== 0) {\r\n            this.background.spriteFrame = this.cashoutFrame;\r\n            this.nickname.color = new Color(HexColorCode.Brown);\r\n            this.betValue.getComponent(Label).color = new Color(HexColorCode.Black);\r\n            this.multiplierValue.enabled = true;\r\n            this.multiplierValue.value = multiplier / 100;\r\n            this.multiplierValue.getComponent(Label).color = new Color(HexColorCode.Brown);\r\n        }\r\n        else {\r\n            this.background.spriteFrame = this.betFrame;\r\n            this.nickname.color = new Color(HexColorCode.White);\r\n            this.betValue.getComponent(Label).color = new Color(HexColorCode.Yellow);\r\n            this.multiplierValue.enabled = false;\r\n            this.multiplierValue.getComponent(Label).string = `?`;\r\n            this.multiplierValue.getComponent(Label).color = new Color(HexColorCode.White);\r\n        }\r\n    }\r\n\r\n    public setCashout(bet: number, multiplier: number) {\r\n        this.betValue.value = DenomConverter.valueToDollar(bet * multiplier / 100);\r\n        this.background.spriteFrame = this.cashoutFrame;\r\n        this.nickname.color = new Color(HexColorCode.Brown);\r\n        this.betValue.getComponent(Label).color = new Color(HexColorCode.Black);\r\n        this.multiplierValue.enabled = true;\r\n        this.multiplierValue.value = multiplier / 100;\r\n        this.multiplierValue.getComponent(Label).color = new Color(HexColorCode.Brown);\r\n    }\r\n}","\r\nimport { Label, SpriteFrame } from 'cc';\r\nimport { _decorator, Component, Node, Sprite } from 'cc';\r\nimport { StartUp } from '../StartUp';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayerCashoutItem\r\n * DateTime = Fri Mar 24 2023 15:15:54 GMT+0800 (台北標準時間)\r\n * Author = at259168\r\n * FileBasename = PlayerCashoutItem.ts\r\n * FileBasenameNoExtension = PlayerCashoutItem\r\n * URL = db://assets/scripts/Game/GameObject/PlayerCashoutItem.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\r\n *\r\n */\r\n\r\n@ccclass('PlayerCashoutItem')\r\nexport class PlayerCashoutItem extends Component {\r\n    @property(Sprite)\r\n    private icon: Sprite = null;\r\n\r\n    @property(Label)\r\n    private id: Label = null;\r\n\r\n    @property(SpriteFrame)\r\n    private userIcon: SpriteFrame = null;\r\n\r\n    @property(SpriteFrame)\r\n    private localUserIcon: SpriteFrame = null;\r\n\r\n    setItem(id: string, isLocalPlayer: boolean) {\r\n        this.icon.spriteFrame = isLocalPlayer ? this.localUserIcon : this.userIcon;\r\n        this.id.string = id;\r\n    }\r\n}\r\n","import { _decorator } from \"cc\";\r\nimport { EnterTableResponseData, TableState } from \"../Data/DTO/Table.dto\";\r\nimport { PlayerResponseData } from \"../Data/DTO/Player.dto\";\r\nimport DenomConverter from \"./Helper/DenomConverter\";\r\nimport { HiloGameView } from \"./Hilo/HiloGameView\";\r\nimport { GameState, HiloGameLogic } from \"./Hilo/HiloGameLogic\";\r\nimport { HiloGameData } from \"./Hilo/HiloGameData\";\r\nimport Application from \"../Application/Application\";\r\n\r\nconst { ccclass } = _decorator;\r\n@ccclass('PlayerInfo')\r\nexport class PlayerInfo \r\n{\r\n    private static instance: PlayerInfo = null;\r\n    public static getInstance(): PlayerInfo \r\n    {\r\n        if (!PlayerInfo.instance)\r\n        {\r\n            PlayerInfo.instance = new PlayerInfo();\r\n        }\r\n        return PlayerInfo.instance;\r\n    }\r\n\r\n    private playerMoney: number = 0;\r\n    public isNotEnoughMsgExist = false;\r\n    public getPlayerMoney(): number\r\n    {\r\n        return this.playerMoney;\r\n    }\r\n\r\n    public setPlayerMoney(playerMoney: number)\r\n    {\r\n        let gameView: HiloGameView = HiloGameView.getInstance();\r\n        let gameLogic: HiloGameLogic = HiloGameLogic.getInstance();\r\n        let gameData: HiloGameData = HiloGameData.getInstance();\r\n        let isBetState: boolean = gameLogic.getGameState() == GameState.GAME_STATE_BET;\r\n        let isNewRound: boolean = gameData.getIsNewRound();\r\n        if (gameLogic)\r\n        {\r\n            if (isBetState && isNewRound)\r\n            {\r\n                let currentBetvalue: number = gameData.getCurrentBetValue();\r\n                let denom: number = this.getDenom();\r\n                if (playerMoney -  currentBetvalue * denom < 0)\r\n                {\r\n                    Application.Instance.connection.onMoneyNotEnough();\r\n                    this.isNotEnoughMsgExist = true;\r\n                }\r\n                else\r\n                {\r\n                    playerMoney -= currentBetvalue * denom;\r\n                }\r\n            }\r\n        }\r\n        this.playerMoney = DenomConverter.valueToDollar(playerMoney);\r\n        if (gameView)\r\n        {\r\n            gameView.updatePlayerMoney();\r\n        }\r\n    }\r\n\r\n    private denom: number = 0;\r\n    public getDenom(): number\r\n    {\r\n        return this.denom;\r\n    }\r\n\r\n    public setDenom(denom: number)\r\n    {\r\n        this.denom = denom;\r\n    }\r\n\r\n    private entryEvent: EnterTableResponseData = null;\r\n    public getEntryEvent(): EnterTableResponseData\r\n    {\r\n        return this.entryEvent;\r\n    }\r\n\r\n    public setEntryEvent(entryEvent: EnterTableResponseData)\r\n    {\r\n        this.entryEvent = entryEvent;\r\n    }\r\n\r\n    private nickName: string = null;\r\n    public getnickName(): string\r\n    {\r\n        return this.nickName;\r\n    }\r\n\r\n    public setnickName(nickName: string)\r\n    {\r\n        this.nickName = nickName;\r\n    }\r\n\r\n    private playerID: number = -1;\r\n    public getPlayerID(): number\r\n    {\r\n        return this.playerID;\r\n    }\r\n\r\n    public setPlayerID(playerID: number)\r\n    {\r\n        this.playerID = playerID;\r\n    }\r\n\r\n    private accountInfoUrl: string = \"\";\r\n    public getAccountInfoUrl(): string\r\n    {\r\n        return this.accountInfoUrl;\r\n    }\r\n\r\n    public setAccountInfoUrl(accountInfoUrl: string)\r\n    {\r\n        this.accountInfoUrl = accountInfoUrl;\r\n    }\r\n\r\n    private tableState: TableState = null;\r\n    public getTableState(): TableState\r\n    {\r\n        return this.tableState;\r\n    }\r\n\r\n    public setTableState(tableState: TableState)\r\n    {\r\n        this.tableState = tableState;\r\n    }\r\n\r\n    private players: PlayerResponseData[] = [];\r\n    public getPlayers(): PlayerResponseData[]\r\n    {\r\n        return this.players;\r\n    }\r\n\r\n    public setPlayers(players: PlayerResponseData[])\r\n    {\r\n        this.players = players;\r\n    }\r\n}","import { Component, director, ProgressBar, _decorator } from 'cc';\r\nimport Application from '../Application/Application';\r\nimport I18n from '../I18n/I18n';\r\nimport ErrorHandler from '../ErrorHandler/ErrorHandler';\r\nimport CompositeLoadingTask from '../Toolkit/Helper/LoadingTask/CompositeLoadingTask';\r\nimport { CustomErrorName } from '../ErrorHandler/Config/error.config';\r\nimport AudioManager from './AudioManager';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PreloadManager')\r\nexport default class PreloadManager extends Component {\r\n    @property(ProgressBar)\r\n    private progressBar: ProgressBar = null;\r\n\r\n    private preloadTask = new CompositeLoadingTask('Preload');\r\n    private preloadOnly: boolean = false;\r\n\r\n    protected async start() \r\n    {\r\n        // 開始預載入場景\r\n        I18n.Instance.changeLanguage(Application.Instance.config.language);\r\n        this.preloadTask.addTask(I18n.Instance.loadingTask);\r\n        AudioManager.Instance.preload();\r\n        this.preloadTask.addTask(AudioManager.Instance.loadingTask);\r\n        const preLoadSceneTask = this.preloadTask.addTask('PreloadScene');\r\n        if ((window as any).logoPromise) {\r\n            await (window as any).logoPromise;\r\n        }\r\n        director.preloadScene('Game', preLoadSceneTask.progress.bind(preLoadSceneTask), preLoadSceneTask.finish.bind(preLoadSceneTask));\r\n        // 因為在這之前已經有再載入多語言的資料，所以如果沒有等待 preloadScene開始再顯示進度的話，會有一瞬間是顯示載入多語言資料的進度，因此進度條會卡在快載入完成的地方\r\n        preLoadSceneTask.waitForStart().then(() => \r\n        {\r\n            // 監聽載入進度與載入完成事件\r\n            this.preloadTask.on('onProgress',() => \r\n            {\r\n                const progress: number = Math.max(this.progressBar.progress, (this.preloadTask.completeCount / this.preloadTask.totalCount));\r\n                this.progressBar.progress = progress;\r\n                this.reportStatus(progress, 'loading...');\r\n            },\r\n            this);\r\n            this.preloadTask.on('onFinished', async () => \r\n            {\r\n                this.progressBar.node.active = false;\r\n                this.preloadTask.targetOff(this);\r\n                if (!this.preloadTask.isSuccess) \r\n                {\r\n                    ErrorHandler.Instance.handle(CustomErrorName.LOADING_FAILED);\r\n                } \r\n                else \r\n                {\r\n                    if (this.preloadOnly) \r\n                    {\r\n                        this.reportStatus(1, 'preload finished');\r\n                        return;\r\n                    }\r\n                    this.startGame(this.reportStatus.bind(this));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 用來回報連線進度的 callback function\r\n     * @param progress 進度值，range 0 ~ 1\r\n     * @param message 進度訊息\r\n     */\r\n    private reportStatus(progress: number, message: string): void \r\n    {\r\n        this.progressBar.progress = progress;\r\n    }\r\n\r\n    public async startGame(reportProgress: (progress: number, message: string) => void) \r\n    {\r\n        // const { token, platformID, walletTypeID } = Application.Instance.config;\r\n        // reportProgress(0.92, 'connecting to server');\r\n        // await Application.Instance.connection.startConnecting();\r\n        // reportProgress(0.95, 'logining');\r\n        // await Application.Instance.connection.login(token, platformID, walletTypeID, true);\r\n        // reportProgress(1, 'start game');\r\n        // (window as any).removeFooter?.();\r\n        // director.loadScene('Game');\r\n    }\r\n}\r\n","import { Component, _decorator } from 'cc';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass\r\nexport default abstract class Processor extends Component {\r\n    private static stopSymbol: Symbol = Symbol('STOP');\r\n\r\n    private iterator: IterableIterator<Promise<any>> = null;\r\n    private iteratorResult: IteratorResult<Promise<any>, void> = null;\r\n\r\n    private pausePromise: Promise<void> = null;\r\n    private resumeResolve: () => void = null;\r\n    private stopResolve: (value: Symbol) => void;\r\n    private finishResolve: (value: void) => void;\r\n    private finishPromise: Promise<void> = null;\r\n\r\n    public onPause: () => void = null;\r\n    public onResume: () => void = null;\r\n\r\n    public get isRunning(): boolean {\r\n        return !!this.stopResolve;\r\n    }\r\n\r\n    public get isPause(): boolean {\r\n        return !!this.resumeResolve;\r\n    }\r\n\r\n    /**\r\n     * 執行一個 process\r\n     * @param process 要執行的工作\r\n     * @returns [等待 process完成的 promise, 執行後可中斷工作的函式]\r\n     */\r\n    public static run<T>(process: Generator<Promise<any>, T, any>): [Promise<T>, (value: void) => void] {\r\n        let stopResolve: (value: Symbol) => void;\r\n        const stopPromise = new Promise<Symbol>((resolve) => {\r\n            stopResolve = resolve;\r\n        });\r\n        return [\r\n            (async () => {\r\n                const iterator = process;\r\n                let iteratorResult = iterator.next();\r\n                let value: any;\r\n                while (!iteratorResult.done) {\r\n                    value = await Promise.race([iteratorResult.value, stopPromise]);\r\n                    if (value === Processor.stopSymbol) {\r\n                        break;\r\n                    }\r\n                    iteratorResult = iterator.next(value);\r\n                }\r\n                return value;\r\n            })(),\r\n            () => stopResolve(Processor.stopSymbol),\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Start the process\r\n     */\r\n    public async play(...params: any): Promise<any> {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        const stopPromise = new Promise((resolve) => {\r\n            this.stopResolve = resolve;\r\n        });\r\n        this.iterator = this.run(...params);\r\n        this.iteratorResult = this.iterator.next();\r\n\r\n        let isStopManually = false;\r\n        while (!this.iteratorResult.done) {\r\n            await this.pausePromise;\r\n            const value: any = await Promise.race([this.iteratorResult.value, stopPromise]);\r\n            if (value === Processor.stopSymbol) {\r\n                isStopManually = true;\r\n                break;\r\n            }\r\n            this.iteratorResult = this.iterator.next(value);\r\n        }\r\n\r\n        // 判斷 process是否被中斷或自然結束\r\n        if (!isStopManually) {\r\n            this.stop(true, true);\r\n        }\r\n    }\r\n\r\n    public pause() {\r\n        if (this.isPause) {\r\n            return;\r\n        }\r\n        this.onPause?.();\r\n        this.pausePromise = new Promise((resolve) => {\r\n            this.resumeResolve = resolve;\r\n        });\r\n    }\r\n\r\n    public resume() {\r\n        if (!this.isPause) {\r\n            return;\r\n        }\r\n        this.onResume?.();\r\n        this.resumeResolve();\r\n        this.resumeResolve = null;\r\n    }\r\n\r\n    /**\r\n     * Stop the process if it is running.\r\n     */\r\n    public async stop(waitForFinish = true, isEndNaturely = false) {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        this.stopResolve?.(Processor.stopSymbol);\r\n        this.stopResolve = null;\r\n        this.resumeResolve = null;\r\n        this.pausePromise = null;\r\n        if (waitForFinish) {\r\n            await this.finish(isEndNaturely);\r\n        } else {\r\n            this.finish(isEndNaturely);\r\n        }\r\n        this.finishResolve?.();\r\n    }\r\n\r\n    /**\r\n     * Return a promise which will fullfill after the process stopped or finished.\r\n     */\r\n    public waitForFinish() {\r\n        if (!this.isRunning) {\r\n            return Promise.resolve();\r\n        }\r\n        if (!this.finishPromise) {\r\n            this.finishPromise = new Promise<void>((resolve) => {\r\n                this.finishResolve = resolve;\r\n            }).then(() => {\r\n                this.finishPromise = null;\r\n            });\r\n        }\r\n        return this.finishPromise;\r\n    }\r\n\r\n    /** Write implementation of your process here. */\r\n    protected abstract run(...params: any): Generator<Promise<any>, any, any>;\r\n\r\n    /** Write implemetation of what should be done after the process stopped or finished. */\r\n    protected abstract finish(isEndNaturely: boolean): Promise<void>;\r\n}\r\n","import Delay from '../../Utils/Delay';\r\n\r\nexport default class ProgressOffsetCounter {\r\n    constructor(private _offset: number = 0) {}\r\n\r\n    public get offset() {\r\n        return this._offset;\r\n    }\r\n\r\n    public async progress(seconds: number): Promise<void> {\r\n        await Delay.resolve((seconds - this._offset) * 1000);\r\n        this._offset = Math.max(0, this._offset - seconds);\r\n    }\r\n}\r\n","import { Button, instantiate, Label, Prefab, tween, UIOpacity, game, Game as CCGame } from \"cc\";\r\nimport { Vec3 } from \"cc\";\r\nimport { Tween } from \"cc\";\r\nimport { _decorator } from \"cc\";\r\nimport AnimatedPage from \"../../Toolkit/Components/Page/AnimatedPage\";\r\nimport AudioManager from \"../AudioManager\";\r\nimport { SoundEffect } from \"../Config/audio.config\";\r\nimport { StartUp, GameEventType } from \"../StartUp\";\r\nimport { Node } from \"cc\";\r\nimport { HiloPokerTool } from \"../Hilo/HiloPokerTool\";\r\nimport { HiloGameData } from \"../Hilo/HiloGameData\";\r\nimport { SpriteFrame } from \"cc\";\r\nimport { Sprite } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum ButtonIconType {\r\n\tNHASH = \"nextHash\",\r\n\tCLASS = \"class\",\r\n\tJSON = \"json\",\r\n\tLHASH = \"lastHash\",\r\n}\r\n@ccclass(\"ResultData\")\r\nexport class ResultData {\r\n\tpublic Card: number = -1;\r\n\tpublic Secret: string = \"\";\r\n}\r\n\r\n@ccclass(\"Provability\")\r\nexport class Provability extends AnimatedPage {\r\n\t@property(Button)\r\n\tprivate copyHashNextGameButton: Button = null;\r\n\t@property(Label)\r\n\tprivate hashNextGame: Label = null;\r\n\t@property(Node)\r\n\tprivate lastGameNode: Node = null;\r\n\t@property(Button)\r\n\tprivate copyJsonButton: Button = null;\r\n\t@property(Label)\r\n\tprivate json: Label = null;\r\n\t@property(Button)\r\n\tprivate copyHashLastGameButton: Button = null;\r\n\t@property(Label)\r\n\tprivate hashLastGame: Label = null;\r\n\t@property(Label)\r\n\tprivate finalResult: Label = null;\r\n\t@property(Button)\r\n\tprivate verifyButton: Button = null;\r\n\t@property(Node)\r\n\tprivate successfulMessage: Node = null;\r\n\t@property(Prefab)\r\n\tprivate copiedMessagePrefab: Prefab = null;\r\n\t@property(SpriteFrame)\r\n\tprivate tickIcon: SpriteFrame = null;\r\n\t@property(SpriteFrame)\r\n\tprivate copyIcon: SpriteFrame = null;\r\n\tprivate nextHash: string = \"\";\r\n\tprivate lastHash: string = \"\";\r\n\tprivate resultMessage: string = \"\";\r\n\r\n\tprivate msgTween: Tween<UIOpacity> = null;\r\n\r\n\tprotected onLoad() {\r\n\t\tsuper.onLoad();\r\n\t\tthis.verifyButton.node.on(\"click\", this.verify.bind(this));\r\n\t\tStartUp.getInstance().node.on(\r\n\t\t\tGameEventType.NEXT_HASH,\r\n\t\t\t(hash) => this.setNextResultHash(hash),\r\n\t\t\tthis\r\n\t\t);\r\n\t\tStartUp.getInstance().node.on(\r\n\t\t\tGameEventType.RESULT,\r\n\t\t\t(data) => this.setResult(data),\r\n\t\t\tthis\r\n\t\t);\r\n\t\tStartUp.getInstance().node.on(\r\n\t\t\tGameEventType.ON_ENTER_TABLE,\r\n\t\t\t() => this.onEnterTable(),\r\n\t\t\tthis\r\n\t\t);\r\n\r\n\t\tthis.copyHashNextGameButton.node.on(\r\n\t\t\t`click`,\r\n\t\t\tthis.copyHashNextGame.bind(this)\r\n\t\t);\r\n\t\tthis.copyHashLastGameButton.node.on(\r\n\t\t\t`click`,\r\n\t\t\tthis.copyHashLastGame.bind(this)\r\n\t\t);\r\n\t\tthis.copyJsonButton.node.on(`click`, this.copyJson.bind(this));\r\n\t\tgame.on(CCGame.EVENT_HIDE, () => {\r\n\t\t\tthis.buttonImageTransformation(ButtonIconType.CLASS);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected start() {\r\n\t\tthis.onEnterTable();\r\n\t\tStartUp.getInstance().node.emit(\r\n\t\t\tGameEventType.NEXT_HASH,\r\n\t\t\tHiloGameData.getInstance().getNextHash()\r\n\t\t);\r\n\t}\r\n\r\n\tpublic async open() {\r\n\t\tsuper.open();\r\n\t\tthis.buttonImageTransformation(ButtonIconType.CLASS);\r\n\t}\r\n\r\n\tprivate updateUI() {\r\n\t\tthis.hashNextGame.string = this.nextHash;\r\n\t\tthis.json.string = this.resultMessage;\r\n\t\tlet cardIndex: number = HiloGameData.getInstance().getCardIndex();\r\n\t\tthis.finalResult.string = HiloPokerTool.getInstance()\r\n\t\t\t.getPokerValue(cardIndex)\r\n\t\t\t.toString();\r\n\t}\r\n\r\n\tprivate verify() {\r\n\t\t// const cryptor = new Cryptor(\"\", 0);\r\n\t\t// const hash = cryptor.getSHA256Hash(this.resultMessage);\r\n\t\tif (this.lastHash === this.nextHash) {\r\n\t\t\tif (this.msgTween) {\r\n\t\t\t\tthis.msgTween.stop();\r\n\t\t\t}\r\n\t\t\tthis.msgTween = tween(this.successfulMessage.getComponent(UIOpacity))\r\n\t\t\t\t.to(0.2, { opacity: 255 })\r\n\t\t\t\t.delay(2)\r\n\t\t\t\t.to(0.2, { opacity: 0 })\r\n\t\t\t\t.start();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onEnterTable() {\r\n\t\tthis.lastHash = this.nextHash;\r\n\t\tthis.lastGameNode.active = false;\r\n\t}\r\n\r\n\tprivate setNextResultHash(hash: string) {\r\n\t\tthis.lastHash = this.lastHash == \"\" || !this.lastHash ? hash : this.lastHash;\r\n\t\tthis.nextHash = hash;\r\n\t\tthis.hashLastGame.string = this.lastHash;\r\n\t\tthis.updateUI();\r\n\t}\r\n\r\n\tprivate setResult(result: ResultData) {\r\n\t\tthis.lastGameNode.active = true;\r\n\t\tthis.lastHash = this.nextHash;\r\n\t\tconst resultData = {\r\n\t\t\tCard: result.Card,\r\n\t\t\tSecret: result.Secret,\r\n\t\t};\r\n\t\tthis.resultMessage = JSON.stringify(resultData);\r\n\t\tthis.updateUI();\r\n\t}\r\n\tprivate buttonImageTransformation(type: ButtonIconType) {\r\n\t\tlet _nextHash = (icon: SpriteFrame, click: boolean) => {\r\n\t\t\tthis.copyHashNextGameButton.node.children[0].getComponent(\r\n\t\t\t\tSprite\r\n\t\t\t).spriteFrame = icon;\r\n\t\t\tthis.copyHashNextGameButton.node.getComponent(Button).interactable =\r\n\t\t\t\tclick;\r\n\t\t};\r\n\t\tlet _lastHash = (icon: SpriteFrame, click: boolean) => {\r\n\t\t\tthis.copyHashLastGameButton.node.children[0].getComponent(\r\n\t\t\t\tSprite\r\n\t\t\t).spriteFrame = icon;\r\n\t\t\tthis.copyHashLastGameButton.node.getComponent(Button).interactable =\r\n\t\t\t\tclick;\r\n\t\t};\r\n\t\tlet _json = (icon: SpriteFrame, click: boolean) => {\r\n\t\t\tthis.copyJsonButton.node.children[0].getComponent(Sprite).spriteFrame =\r\n\t\t\t\ticon;\r\n\t\t\tthis.copyJsonButton.node.getComponent(Button).interactable = click;\r\n\t\t};\r\n\t\tswitch (type) {\r\n\t\t\tcase ButtonIconType.NHASH:\r\n\t\t\t\t_nextHash(this.tickIcon, false);\r\n\t\t\t\t_lastHash(this.copyIcon, true);\r\n\t\t\t\t_json(this.copyIcon, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ButtonIconType.LHASH:\r\n\t\t\t\t_nextHash(this.copyIcon, true);\r\n\t\t\t\t_lastHash(this.tickIcon, false);\r\n\t\t\t\t_json(this.copyIcon, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ButtonIconType.JSON:\r\n\t\t\t\t_nextHash(this.copyIcon, true);\r\n\t\t\t\t_lastHash(this.copyIcon, true);\r\n\t\t\t\t_json(this.tickIcon, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ButtonIconType.CLASS:\r\n\t\t\t\t_nextHash(this.copyIcon, true);\r\n\t\t\t\t_lastHash(this.copyIcon, true);\r\n\t\t\t\t_json(this.copyIcon, true);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tprivate copyHashNextGame() {\r\n\t\tthis.copyToClipboard(this.nextHash);\r\n\t\tconst msg = instantiate(this.copiedMessagePrefab);\r\n\t\tthis.buttonImageTransformation(ButtonIconType.NHASH);\r\n\t\tmsg.setPosition(\r\n\t\t\tthis.copyHashNextGameButton.node.position.x,\r\n\t\t\tthis.copyHashNextGameButton.node.position.y + 10\r\n\t\t);\r\n\t\ttween(msg.getComponent(UIOpacity))\r\n\t\t\t.to(0.3, { opacity: 255 })\r\n\t\t\t.delay(0.6)\r\n\t\t\t.to(0.3, { opacity: 0 })\r\n\t\t\t.call(() => msg.destroy())\r\n\t\t\t.start();\r\n\t\ttween(msg)\r\n\t\t\t.to(1.2, {\r\n\t\t\t\tposition: new Vec3(msg.position.x, msg.position.y + 60, msg.position.z),\r\n\t\t\t})\r\n\t\t\t.start();\r\n\t\tthis.view.addChild(msg);\r\n\t}\r\n\r\n\tprivate copyHashLastGame() {\r\n\t\tthis.copyToClipboard(this.hashLastGame.string);\r\n\t\tconst msg = instantiate(this.copiedMessagePrefab);\r\n\t\tthis.buttonImageTransformation(ButtonIconType.LHASH);\r\n\t\tmsg.setPosition(\r\n\t\t\tthis.copyHashLastGameButton.node.position.x,\r\n\t\t\tthis.copyHashLastGameButton.node.position.y + 10\r\n\t\t);\r\n\t\ttween(msg.getComponent(UIOpacity))\r\n\t\t\t.to(0.3, { opacity: 255 })\r\n\t\t\t.delay(0.6)\r\n\t\t\t.to(0.3, { opacity: 0 })\r\n\t\t\t.call(() => msg.destroy())\r\n\t\t\t.start();\r\n\t\ttween(msg)\r\n\t\t\t.to(1.2, {\r\n\t\t\t\tposition: new Vec3(msg.position.x, msg.position.y + 60, msg.position.z),\r\n\t\t\t})\r\n\t\t\t.start();\r\n\t\tthis.view.addChild(msg);\r\n\t}\r\n\r\n\tprivate copyJson() {\r\n\t\tthis.copyToClipboard(this.resultMessage);\r\n\t\tconst msg = instantiate(this.copiedMessagePrefab);\r\n\t\tthis.buttonImageTransformation(ButtonIconType.JSON);\r\n\t\tmsg.setPosition(\r\n\t\t\tthis.copyJsonButton.node.position.x,\r\n\t\t\tthis.copyJsonButton.node.position.y + 10\r\n\t\t);\r\n\t\ttween(msg.getComponent(UIOpacity))\r\n\t\t\t.to(0.3, { opacity: 255 })\r\n\t\t\t.delay(0.6)\r\n\t\t\t.to(0.3, { opacity: 0 })\r\n\t\t\t.call(() => msg.destroy())\r\n\t\t\t.start();\r\n\t\ttween(msg)\r\n\t\t\t.to(1.2, {\r\n\t\t\t\tposition: new Vec3(msg.position.x, msg.position.y + 60, msg.position.z),\r\n\t\t\t})\r\n\t\t\t.start();\r\n\t\tthis.view.addChild(msg);\r\n\t}\r\n\r\n\tprivate copyToClipboard(text: string) {\r\n\t\tAudioManager.Instance.playEffect(SoundEffect.BUTTON_CLICK);\r\n\t\tif (navigator.clipboard && window.isSecureContext) {\r\n\t\t\tnavigator.clipboard.writeText(text);\r\n\t\t} else {\r\n\t\t\tlet textArea = document.createElement(\"textarea\");\r\n\t\t\ttextArea.value = text;\r\n\t\t\tdocument.body.appendChild(textArea);\r\n\t\t\ttextArea.select();\r\n\t\t\ttry {\r\n\t\t\t\tdocument.execCommand(\"copy\");\r\n\t\t\t\ttextArea.remove();\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace Random {\r\n    /**\r\n     * 隨機產生true or false\r\n     */\r\n    export function getBoolean(): boolean {\r\n        return !!Math.trunc(Math.random() * 2);\r\n    }\r\n    /**\r\n     * 依照給予的數值範圍，產生 -maximum ~ maximum的浮點數\r\n     * @param maximum 數值範圍\r\n     * @param allowNegative 是否允許負數\r\n     */\r\n    export function getFloat(maximum: number, allowNegative: boolean = false): number {\r\n        const randomSign: number = getBoolean() ? -1 : 1;\r\n        return Math.random() * maximum * (allowNegative ? randomSign : 1);\r\n    }\r\n    /**\r\n     * 依照給予的數值範圍，產生 -maximum ~ maximum的整數\r\n     * @param maximum 數值範圍\r\n     * @param allowNegative 是否允許負數\r\n     */\r\n    export function getInteger(maximum: number, allowNegative: boolean = false): number {\r\n        const randomSign: number = getBoolean() ? -1 : 1;\r\n        return Math.trunc(Math.random() * (maximum + 1)) * (allowNegative ? randomSign : 1);\r\n    }\r\n\r\n    export function Range(min: number, max: number): number \r\n    {\r\n        // return Math.floor(Math.random() * max) + min;\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}\r\n\r\nexport default Random;\r\n","import { game, Game as CCGame, Component } from 'cc';\r\nimport Application from '../Application/Application';\r\nimport MessageManager from './MessageManager';\r\nimport { _decorator } from 'cc';\r\nimport { EnterTableResponseData, TableState } from '../Data/DTO/Table.dto';\r\nimport AudioManager from './AudioManager';\r\nimport { SoundEffect } from './Config/audio.config';\r\nimport { defaultAppConfig } from '../Data/Config/app.config';\r\nimport { PathName } from '../Data/Config/path.config';\r\nimport { PlayerInfo } from './PlayerInfo';\r\nimport { HiloGameLogic } from './Hilo/HiloGameLogic';\r\nimport DenomConverter from './Helper/DenomConverter';\r\nimport { BalanceResponseData } from '../Data/DTO/Balance.dto';\r\nimport { LoginResponseData } from '../Data/DTO/Login.dto';\r\nimport { HiloGameConnection } from './Hilo/HiloGameConnection';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\nexport enum GameEventType \r\n{\r\n    TABLE_STATE_CHANGED = \"TABLE_STATE_CHANGED\",\r\n    NEW_EVENT_RECEIVED = \"NEW_EVENT_RECEIVED\",\r\n    ON_LOGIN = \"ON_LOGIN\",\r\n    ON_ENTER_TABLE = \"ON_ENTER_TABLE\",\r\n    NEXT_HASH = \"NEXT_RESULT\",\r\n    RESULT = \"RESULT\",\r\n}\r\n\r\n@ccclass('StartUp')\r\nexport class StartUp extends Component {\r\n    private messageManager: MessageManager = null;\r\n    \r\n    private _state: TableState = null;\r\n    private gameIsHidden: boolean = false;\r\n    \r\n    private static instance: StartUp = null;\r\n    public static getInstance(): StartUp \r\n    {\r\n        if (!StartUp.instance)\r\n        {\r\n            StartUp.instance = new StartUp();\r\n        }\r\n        return StartUp.instance;\r\n    }\r\n\r\n    public get state() \r\n    {\r\n        return this._state;\r\n    }\r\n    private set state(newState: TableState) \r\n    {\r\n        if (newState === this._state) \r\n        {\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        if (this._state === TableState.Receiving && !this.gameIsHidden) \r\n        {\r\n            AudioManager.Instance.playEffect(SoundEffect.ROUND_START);\r\n        }\r\n        this.node.emit(GameEventType.TABLE_STATE_CHANGED, this.state);\r\n    }\r\n\r\n    public get message() \r\n    {\r\n        return this.messageManager;\r\n    }\r\n\r\n    protected onLoad() \r\n    {\r\n        StartUp.instance = this;\r\n        game.addPersistRootNode(this.node);\r\n\r\n        game.on(CCGame.EVENT_HIDE, () => \r\n        {\r\n            this.gameIsHidden = true;\r\n        });\r\n\r\n        game.on(CCGame.EVENT_SHOW, () => \r\n        {\r\n            this.gameIsHidden = false;\r\n        });\r\n    }\r\n\r\n    protected start() \r\n    {\r\n        this.addConnectEvent();\r\n        console.log(defaultAppConfig.GameVersion);\r\n    }\r\n\r\n    private addConnectEvent()\r\n    {\r\n        Application.Instance.connection.listenForPublishData(PathName.Login, this.onLogin.bind(this));\r\n        Application.Instance.connection.listenForPublishData(PathName.EnterTable, this.onEnterTable.bind(this));\r\n        Application.Instance.connection.listenForPublishData(PathName.Balance, this.updateBalance.bind(this));\r\n    }\r\n\r\n    private onLogin(event: LoginResponseData) \r\n    {\r\n        PlayerInfo.getInstance().setnickName(event.Nickname);\r\n        PlayerInfo.getInstance().setDenom(event.Denom);\r\n        PlayerInfo.getInstance().setAccountInfoUrl(event.AccountInfoURL);\r\n        PlayerInfo.getInstance().setPlayerMoney(event.Balance);\r\n        this.node.emit(GameEventType.ON_LOGIN);\r\n    }\r\n\r\n    private onEnterTable(event: EnterTableResponseData)\r\n    {\r\n        this.node.emit(GameEventType.ON_ENTER_TABLE);\r\n        PlayerInfo.getInstance().setTableState(event.State);\r\n        PlayerInfo.getInstance().setEntryEvent(event);\r\n        PlayerInfo.getInstance().setPlayerID(event.PlayerID);\r\n        HiloGameConnection.getInstance().init();\r\n        HiloGameLogic.getInstance().init(event);\r\n        if (!event.Event) \r\n        {\r\n            return;\r\n        }\r\n        if (event.Event.Players)\r\n        {\r\n            PlayerInfo.getInstance().setPlayers(Object.values(event.Event.Players));\r\n        }\r\n    }\r\n\r\n    private updateBalance(event: BalanceResponseData) \r\n    {\r\n        PlayerInfo.getInstance().setPlayerMoney(event.Balance);\r\n    }\r\n    \r\n    public attachMessageManager(messageManager: MessageManager) \r\n    {\r\n        this.messageManager = messageManager;\r\n    }\r\n\r\n    public closeGame()\r\n    {\r\n        if (Application.Instance.config.useIFrame) {\r\n            window.parent.postMessage({ event: 'close' }, '*');\r\n        } \r\n        else if (Application.Instance.config.homeURL) \r\n        {\r\n            document.location.href = Application.Instance.config.homeURL;\r\n        } \r\n        else \r\n        {\r\n            window.close();\r\n            window.history.back();\r\n        }\r\n    }\r\n}\r\n","import { warn } from 'cc';\r\nimport Application from '../../Application/Application';\r\n\r\nexport enum StoragePath {\r\n    AudioSetting = 'AudioSetting',\r\n}\r\n\r\nnamespace StorageHelper {\r\n    export function saveToLocal(key: StoragePath, data: Object) {\r\n        try {\r\n            localStorage.setItem(`${Application.Instance.config.gameName}/${key}`, JSON.stringify(data));\r\n        } catch (error) {\r\n            warn(error);\r\n        }\r\n    }\r\n\r\n    export function loadFromLocal(key: StoragePath): any {\r\n        try {\r\n            return JSON.parse(localStorage.getItem(`${Application.Instance.config.gameName}/${key}`));\r\n        } catch (error) {\r\n            warn(error);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default StorageHelper;\r\n","enum SupportLanguage {\r\n    EN = 'en',\r\n    SCH = 'sch',\r\n    TCH = 'tch',\r\n    VI = 'vi',\r\n    JA = 'ja',\r\n    ES = 'es',\r\n    PT = 'pt',\r\n    KO = 'ko',\r\n    ID = 'id',\r\n    TH = 'th',\r\n}\r\n\r\n// eslint-disable-next-line no-redeclare\r\nnamespace SupportLanguage {\r\n    export function contains(language: string): language is SupportLanguage {\r\n        return Object.values(SupportLanguage).includes(language as SupportLanguage);\r\n    }\r\n}\r\n\r\nObject.defineProperty(SupportLanguage, 'contains', {\r\n    enumerable: false,\r\n});\r\n\r\nexport { SupportLanguage };\r\n","import { PlayerResponseData } from \"./Player.dto\";\r\nimport { ResultResponseData } from \"./Result.dto\";\r\n\r\nexport enum TableState {\r\n    Init = 'init', // 初始化\r\n    Waiting = 'waiting', // 等待新局開始\r\n    Start = 'start', // 遊戲開始\r\n    Betting = 'betting', // 等待玩家下注\r\n    Receiving = 'receiving', // 結束下注\r\n    Increasing = 'increasing', // 增長中\r\n    Showing = 'showing', // 開獎\r\n    Cancel = 'cancel', // 取消當局\r\n    Finish = 'finish', // - 遊戲暫停，等待服務人員處理\r\n}\r\n\r\nexport enum PayType {\r\n    Odd = 'odd',\r\n    Even = 'even',\r\n    Count0 = 'count0',\r\n    Count1 = 'count1',\r\n    Count3 = 'count3',\r\n    Count4 = 'count4',\r\n}\r\n\r\nexport enum TableType {\r\n    Casual = 'casual',\r\n    Novice = 'novice',\r\n    Advance = 'advance',\r\n    Expert = 'expert',\r\n}\r\n\r\nexport type TableLimitData = {\r\n    /** useless ??? */\r\n    Min: number;\r\n    /** max total bet */\r\n    Max: number; // max total bet\r\n};\r\n\r\nexport type BetLimitData = {\r\n    /** min bet on single bet option ( = min total bet) */\r\n    Min: number;\r\n    /** max bet on single bet option */\r\n    Max: number;\r\n    /** available clip denom index list */\r\n    Bets: number[];\r\n    Default: number;\r\n};\r\n\r\n// type ReconnectTableInfo = {\r\n//     Bets: BetData[];\r\n//     Denom: number;\r\n//     BetLimit: number;\r\n//     Balance: number;\r\n// };\r\n\r\nexport type ChipDenomList = {\r\n    Default: number;\r\n    /** denominations */\r\n    Values: number[];\r\n};\r\n\r\nexport type BettingOptionBetInfo = {\r\n    Bet: number;\r\n    PlayerID: number;\r\n    Wager: number;\r\n    Multiplier?: number;\r\n};\r\n\r\ntype DetailedTableStatusData = {\r\n    TableID: string;\r\n    Confirming?: boolean;\r\n    Stopped?: boolean;\r\n    Bets?: { [key: number]: BettingOptionBetInfo };\r\n    Players?: { [key: number]: PlayerResponseData };\r\n\r\n    // generate by front-end to determine if event is received when enter table\r\n    EnteringTable: boolean;\r\n\r\n    Hash?: string;\r\n};\r\n\r\nexport type TableTemporalStatusData = {\r\n    Time: number;\r\n    NextStateTime: number;\r\n    State: TableState;\r\n    StateDuration: number;\r\n    StateElapsed: number;\r\n};\r\n\r\nexport type PreviewTableStatusData = {\r\n    OnlinePlayer: number;\r\n    PlayerID: number;\r\n    RoundID?: number;\r\n    RoundCount?: number;\r\n    // front-end define\r\n    ClientReceiveTime: number;\r\n    leftTime: () => number;\r\n    currentTime: () => number;\r\n} & TableTemporalStatusData;\r\n\r\ntype DetailedTableInfoData = {\r\n    PayTable: { [value in PayType]: number };\r\n    WagerToPayType: { [key: string]: PayType };\r\n\r\n    /** reconnect data */\r\n    // BetData?: ReconnectTableInfo;\r\n\r\n    /** init table status */\r\n    Event: TableStatusData;\r\n};\r\n\r\nexport type PreviewTableInfoData = {\r\n    GameID: string;\r\n    ID: string;\r\n    Hall: TableType;\r\n    /** all chip denom list */\r\n    Bets: ChipDenomList;\r\n    Denoms: number[];\r\n    BetLimits: BetLimitData[];\r\n    TableLimit: TableLimitData;\r\n    History: number[];\r\n    MaxSeatCount: number;\r\n};\r\n\r\nexport type TableInfoData = PreviewTableInfoData & DetailedTableInfoData;\r\nexport type TableStatusData = PreviewTableStatusData & DetailedTableStatusData;\r\nexport type PreviewTableData = PreviewTableInfoData & PreviewTableStatusData;\r\n\r\nexport type EnterTableRequestData = {\r\n    HallType: string;\r\n    ID: string;\r\n};\r\n\r\nexport type EnterTableResponseData = TableInfoData &\r\n    PreviewTableStatusData\r\n    & {\r\n        Result?: ResultResponseData;\r\n    };\r\n","import { Tween } from 'cc';\r\n\r\ndeclare module 'cc' {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    interface Tween<T> {\r\n        promisifyStart(startTime?: number): Promise<void>;\r\n        /** set tween state to specific timing */\r\n        setTime(time: number): void;\r\n    }\r\n}\r\n\r\nTween.prototype.promisifyStart = function promisifyStart(this: Tween<any>, startTime: number = 0) {\r\n    return new Promise((resolve) => this.call(resolve).start().setTime(startTime));\r\n};\r\n\r\nTween.prototype.setTime = function setTime(time: number) {\r\n    this._finalAction._firstTick = false;\r\n    this._finalAction._elapsed = time;\r\n};\r\n","\r\nimport { _decorator, Component, Node, WebView } from 'cc';\r\nimport Application from '../../Application/Application';\r\nimport I18n from '../../I18n/I18n';\r\nimport AudioManager from '../AudioManager';\r\nimport { SoundEffect } from '../Config/audio.config';\r\nimport { StartUp } from '../StartUp';\r\nimport { PlayerInfo } from '../PlayerInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UserWebview')\r\nexport class UserWebview extends Component {\r\n    @property(WebView)\r\n    private webview: WebView = null;\r\n\r\n    protected onLoad() {\r\n        window.addEventListener(\"message\", (event) => {\r\n            if (event.source == this.webview.nativeWebView?.contentWindow) {\r\n                const data: { Path: string; Data: string } = JSON.parse(event.data);\r\n                if (data.Path == \"history.loaded\" && data.Data == \"\") {\r\n                    this.webview.nativeWebView.parentElement.style.overflow = \"hidden\";\r\n                }\r\n                if (data.Path == \"history.close\" && data.Data == \"\") {\r\n                    this.webview.url = \"\";\r\n                    this.node.active = false;\r\n                    AudioManager.Instance.playEffect(SoundEffect.BUTTON_CLICK);\r\n                }\r\n            }\r\n        });\r\n\r\n        let disableRecordWebView = () => {\r\n            this.node.active = false;\r\n        };\r\n        window.addEventListener(\"offline\", disableRecordWebView);\r\n        window.addEventListener(\"error\", disableRecordWebView);\r\n    }\r\n\r\n    public openUserRecord() {\r\n        this.openWebview(`${PlayerInfo.getInstance().getAccountInfoUrl()}/daily?token=${Application.Instance.config.token}&lang=${I18n.Instance.currentLanguageForWebview}&volume=${AudioManager.Instance.effectVolume}&theme=gray`);\r\n    }\r\n\r\n    public openUserStatistics() {\r\n        this.openWebview(`${PlayerInfo.getInstance().getAccountInfoUrl()}/daily-player?token=${Application.Instance.config.token}&lang=${I18n.Instance.currentLanguageForWebview}&volume=${AudioManager.Instance.effectVolume}&theme=gray`);\r\n    }\r\n\r\n    public openWebview(url: string) {\r\n        this.node.active = true;\r\n        this.webview.url = url;\r\n    }\r\n}","import { UITransform } from 'cc';\r\nimport { Node } from 'cc';\r\n\r\n/**\r\n * 根據提供的 frame數和 fps，計算出時間\r\n * @param frame 格數\r\n * @param fps 預設值為動畫素材的 fps\r\n * @returns 跑完幀數所需時間(in second)\r\n */\r\nexport function calculateFrameTime(frame: number, fps: number = 30): number {\r\n    return frame / fps;\r\n}\r\n\r\n/**\r\n * 將參數填入字串中，參數位置以 {n}表示，ex. 'You won {0} on extra'\r\n * @param text 目標字串\r\n * @param args 目標參數\r\n */\r\nexport function fillTextArgument(text: string, args: string[]): string {\r\n    args.forEach((value, idx) => {\r\n        text = text.replace(new RegExp(`\\\\{${idx}\\\\}`, 'g'), value);\r\n    });\r\n    text = text.replace(/\\{\\d+\\}/g, '');\r\n    return text;\r\n}\r\n\r\n/**\r\n * 設置父節點且不更改位置\r\n * @param child 子節點\r\n * @param parent 父節點\r\n */\r\nexport function setParentWithoutPositionChange(child: Node, parent: Node) {\r\n    const originWorldPosition = child.parent.getComponent(UITransform).convertToWorldSpaceAR(child.position);\r\n    child.parent = parent;\r\n    child.position = parent.getComponent(UITransform).convertToNodeSpaceAR(originWorldPosition);\r\n}\r\n\r\n/**\r\n * 根據傳入的 host和 args組成 URL\r\n */\r\nexport function joinURL(host: string, ...args: string[]): string {\r\n    let url: string = host;\r\n    args.forEach((arg) => {\r\n        // 判斷是否需要補 '/'\r\n        url += arg.slice(-1) === '/' ? '' : '/';\r\n        // 補上參數\r\n        url += arg[0] === '/' ? arg.slice(1) : arg;\r\n    });\r\n    return url;\r\n}\r\n\r\nexport function breakValueToSmallerValues(value: number, smallerValues: number[]): number[] {\r\n    const result: number[] = new Array(smallerValues.length).fill(0);\r\n    const originValue = value;\r\n    for (let i = smallerValues.length - 1; i >= 0; i--) {\r\n        if (!smallerValues[i]) {\r\n            continue;\r\n        }\r\n        while (value >= smallerValues[i]) {\r\n            value -= smallerValues[i];\r\n            result[i]++;\r\n        }\r\n        if (value === 0) {\r\n            break;\r\n        }\r\n    }\r\n    // eslint-disable-next-line no-console\r\n    console.assert(\r\n        originValue === result.reduce((pre, cur, idx) => pre + cur * smallerValues[idx], 0),\r\n        `breakValueToSmallerValues failed, originValues: ${originValue}, smallerValues: ${smallerValues}`\r\n    );\r\n    return result;\r\n}\r\n\r\nexport function deIdentification(str: string, displayLength: number, replaceWith: string) {\r\n    return str\r\n        .split('')\r\n        .map((char) => {\r\n            if (displayLength > 0) {\r\n                if (char.match(/[\\u4E00-\\u9FFF]/)) {\r\n                    displayLength -= 2;\r\n                } else {\r\n                    displayLength--;\r\n                }\r\n                return char;\r\n            }\r\n            return replaceWith;\r\n        })\r\n        .join('');\r\n}\r\n\r\nexport function shorten(str: string, displayLength: number) {\r\n    if (getLocaleStringLength(str) <= displayLength) {\r\n        return str;\r\n    }\r\n    displayLength--;\r\n    return `${str\r\n        .split('')\r\n        .map((char) => {\r\n            if (displayLength > 0) {\r\n                if (char.match(/[\\u4E00-\\u9FFF]/)) {\r\n                    displayLength -= 2;\r\n                    if (displayLength < 0) {\r\n                        return '';\r\n                    }\r\n                } else {\r\n                    displayLength--;\r\n                }\r\n                return char;\r\n            }\r\n            return '';\r\n        })\r\n        .join('')}...`;\r\n}\r\n\r\nexport function getLocaleStringLength(str: string): number {\r\n    return str.split('').reduce((pre, cur) => pre + (cur.match(/[\\u4E00-\\u9FFF]/) ? 2 : 1), 0);\r\n}\r\n","\r\nimport { _decorator, Component, Node, Button, Slider, Sprite } from 'cc';\r\nimport AnimatedPage from '../../Toolkit/Components/Page/AnimatedPage';\r\nimport AudioManager from '../AudioManager';\r\nimport StorageHelper, { StoragePath } from '../Helper/StorageHelper';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IAudioSetting {\r\n    musicVolume: number;\r\n    effectVolume: number;\r\n    musicMute: boolean;\r\n    effectMute: boolean;\r\n}\r\n\r\n@ccclass('VolumeSetting')\r\nexport class VolumeSetting extends AnimatedPage {\r\n    @property(Button)\r\n    private soundMuteButton: Button = null;\r\n    @property(Button)\r\n    private BGMMuteButton: Button = null;\r\n    @property(Slider)\r\n    private soundVolumeSlider: Slider = null;\r\n    @property(Sprite)\r\n    private soundVolumeSliderFill: Sprite = null;\r\n    @property(Slider)\r\n    private BGMVolumeSlider: Slider = null;\r\n    @property(Sprite)\r\n    private BGMVolumeSliderFill: Sprite = null;\r\n\r\n    private static readonly defaultAudioSetting: IAudioSetting = {\r\n        musicVolume: 1,\r\n        effectVolume: 1,\r\n        musicMute: false,\r\n        effectMute: false,\r\n    };\r\n\r\n    private currentAudioSetting: IAudioSetting;\r\n\r\n    protected onLoad(): void {\r\n        super.onLoad();\r\n        this.handleVolumeSlider();\r\n\r\n        this.soundMuteButton.node.on(Button.EventType.CLICK, this.switchSoundMute.bind(this));\r\n        this.BGMMuteButton.node.on(Button.EventType.CLICK, this.switchBGMMute.bind(this));\r\n    }\r\n\r\n    protected start() {\r\n        this.loadAndApplyAudioSetting();\r\n        this.initUI();\r\n    }\r\n\r\n    private initUI() {\r\n        // volume and mute\r\n        this.updateVolumeSlider();\r\n    }\r\n\r\n    private updateVolumeSlider() {\r\n        if (AudioManager.Instance.effectMute) {\r\n            this.soundVolumeSlider.progress = 0;\r\n            this.soundVolumeSliderFill.fillRange = 0;\r\n        } else {\r\n            this.soundVolumeSlider.progress = AudioManager.Instance.effectVolume;\r\n            this.soundVolumeSliderFill.fillRange = this.soundVolumeSlider.progress;\r\n        }\r\n        if (AudioManager.Instance.musicMute) {\r\n            this.BGMVolumeSlider.progress = 0;\r\n            this.BGMVolumeSliderFill.fillRange = 0;\r\n        } else {\r\n            this.BGMVolumeSlider.progress = AudioManager.Instance.musicVolume;\r\n            this.BGMVolumeSliderFill.fillRange = this.BGMVolumeSlider.progress;\r\n        }\r\n    }\r\n\r\n    private handleVolumeSlider() {\r\n        this.soundVolumeSlider.node.on('slide', () => {\r\n            const volume = this.soundVolumeSlider.progress;\r\n            AudioManager.Instance.effectMute = false;\r\n            AudioManager.Instance.effectVolume = volume;\r\n            this.currentAudioSetting.effectMute = false;\r\n            this.currentAudioSetting.effectVolume = volume;\r\n            this.soundVolumeSliderFill.fillRange = volume;\r\n            this.saveAudioSetting();\r\n        });\r\n        this.BGMVolumeSlider.node.on('slide', () => {\r\n            const volume = this.BGMVolumeSlider.progress;\r\n            AudioManager.Instance.musicMute = false;\r\n            AudioManager.Instance.musicVolume = volume;\r\n            this.currentAudioSetting.musicMute = false;\r\n            this.currentAudioSetting.musicVolume = volume;\r\n            this.BGMVolumeSliderFill.fillRange = volume;\r\n            this.saveAudioSetting();\r\n        });\r\n    }\r\n\r\n    // 切換音效 靜音/50%音量\r\n    private switchSoundMute() {\r\n        if (!AudioManager.Instance.effectMute) {\r\n            AudioManager.Instance.effectMute = true;\r\n            this.currentAudioSetting.effectMute = true;\r\n            this.soundVolumeSlider.progress = 0;\r\n            this.soundVolumeSliderFill.fillRange = 0;\r\n        } else {\r\n            AudioManager.Instance.effectMute = false;\r\n            this.currentAudioSetting.effectMute = false;\r\n            this.soundVolumeSlider.progress = AudioManager.Instance.effectVolume;\r\n            this.soundVolumeSliderFill.fillRange = this.soundVolumeSlider.progress;\r\n        }\r\n        this.saveAudioSetting();\r\n    }\r\n\r\n    // 切換BGM 靜音/50%音量\r\n    private switchBGMMute() {\r\n        if (!AudioManager.Instance.musicMute) {\r\n            AudioManager.Instance.musicMute = true;\r\n            this.currentAudioSetting.musicMute = true;\r\n            this.BGMVolumeSlider.progress = 0;\r\n            this.BGMVolumeSliderFill.fillRange = 0;\r\n        } else {\r\n            AudioManager.Instance.musicMute = false;\r\n            this.currentAudioSetting.musicMute = false;\r\n            this.BGMVolumeSlider.progress = AudioManager.Instance.musicVolume;\r\n            this.BGMVolumeSliderFill.fillRange = this.BGMVolumeSlider.progress;\r\n        }\r\n        this.saveAudioSetting();\r\n    }\r\n\r\n    // model operation\r\n    private saveAudioSetting() {\r\n        StorageHelper.saveToLocal(StoragePath.AudioSetting, this.currentAudioSetting);\r\n    }\r\n\r\n    private loadAndApplyAudioSetting() {\r\n        this.currentAudioSetting = StorageHelper.loadFromLocal(StoragePath.AudioSetting) ?? VolumeSetting.defaultAudioSetting;\r\n        const { effectVolume, musicVolume, effectMute, musicMute }: IAudioSetting = this.currentAudioSetting;\r\n\r\n        // volume and mute\r\n        AudioManager.Instance.effectVolume = effectVolume;\r\n        AudioManager.Instance.musicVolume = musicVolume;\r\n        AudioManager.Instance.effectMute = effectMute;\r\n        AudioManager.Instance.musicMute = musicMute;\r\n    }\r\n}"]}